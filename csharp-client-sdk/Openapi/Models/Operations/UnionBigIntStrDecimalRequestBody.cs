//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Operations
{
    using Newtonsoft.Json.Linq;
    using Newtonsoft.Json;
    using Openapi.Utils;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    using System;
    

    public class UnionBigIntStrDecimalRequestBodyType
    {
        private UnionBigIntStrDecimalRequestBodyType(string value) { Value = value; }

        public string Value { get; private set; }
        public static UnionBigIntStrDecimalRequestBodyType Bigint { get { return new UnionBigIntStrDecimalRequestBodyType("bigint"); } }
        
        public static UnionBigIntStrDecimalRequestBodyType Decimal { get { return new UnionBigIntStrDecimalRequestBodyType("decimal"); } }
        
        public static UnionBigIntStrDecimalRequestBodyType Null { get { return new UnionBigIntStrDecimalRequestBodyType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(UnionBigIntStrDecimalRequestBodyType v) { return v.Value; }
        public static UnionBigIntStrDecimalRequestBodyType FromString(string v) {
            switch(v) {
                case "bigint": return Bigint;
                case "decimal": return Decimal;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for UnionBigIntStrDecimalRequestBodyType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((UnionBigIntStrDecimalRequestBodyType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    [JsonConverter(typeof(UnionBigIntStrDecimalRequestBody.UnionBigIntStrDecimalRequestBodyConverter))]
    public class UnionBigIntStrDecimalRequestBody {
        public UnionBigIntStrDecimalRequestBody(UnionBigIntStrDecimalRequestBodyType type) {
            Type = type;
        }
        public BigInteger? Bigint { get; set; }
        public decimal? Decimal { get; set; }

        public UnionBigIntStrDecimalRequestBodyType Type { get; set; }


        public static UnionBigIntStrDecimalRequestBody CreateBigint(BigInteger bigint) {
            UnionBigIntStrDecimalRequestBodyType typ = UnionBigIntStrDecimalRequestBodyType.Bigint;

            UnionBigIntStrDecimalRequestBody res = new UnionBigIntStrDecimalRequestBody(typ);
            res.Bigint = bigint;
            return res;
        }

        public static UnionBigIntStrDecimalRequestBody CreateDecimal(decimal decimalT) {
            UnionBigIntStrDecimalRequestBodyType typ = UnionBigIntStrDecimalRequestBodyType.Decimal;

            UnionBigIntStrDecimalRequestBody res = new UnionBigIntStrDecimalRequestBody(typ);
            res.Decimal = decimalT;
            return res;
        }

        public static UnionBigIntStrDecimalRequestBody CreateNull() {
            UnionBigIntStrDecimalRequestBodyType typ = UnionBigIntStrDecimalRequestBodyType.Null;
            return new UnionBigIntStrDecimalRequestBody(typ);
        }

        public class UnionBigIntStrDecimalRequestBodyConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(UnionBigIntStrDecimalRequestBody);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new UnionBigIntStrDecimalRequestBody(UnionBigIntStrDecimalRequestBodyType.Bigint)
                    {
                        Bigint = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<BigInteger>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(BigInteger), new UnionBigIntStrDecimalRequestBody(UnionBigIntStrDecimalRequestBodyType.Bigint), "Bigint"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new UnionBigIntStrDecimalRequestBody(UnionBigIntStrDecimalRequestBodyType.Decimal)
                    {
                        Decimal = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<decimal>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(decimal), new UnionBigIntStrDecimalRequestBody(UnionBigIntStrDecimalRequestBodyType.Decimal), "Decimal"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                UnionBigIntStrDecimalRequestBody res = (UnionBigIntStrDecimalRequestBody)value;
                if (UnionBigIntStrDecimalRequestBodyType.FromString(res.Type).Equals(UnionBigIntStrDecimalRequestBodyType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.Bigint != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Bigint, "string"));
                    return;
                }
                if (res.Decimal != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Decimal));
                    return;
                }

            }

        }

    }
}