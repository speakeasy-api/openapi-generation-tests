//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Openapi.Models.Shared
{
    using Newtonsoft.Json;
    using Openapi.Models.Shared;
    using Openapi.Utils;
    using System.Collections.Generic;
    
    public class DeepObjectWithNonStandardTypeName
    {

        [JsonProperty("any")]
        public DeepObjectWithNonStandardTypeNameAny Any { get; set; } = default!;

        [JsonProperty("arr")]
        public List<SimpleObject> Arr { get; set; } = default!;

        [JsonProperty("bool")]
        public bool Bool { get; set; } = default!;

        [JsonProperty("int")]
        public long Int { get; set; } = default!;

        [JsonProperty("map")]
        public Dictionary<string, SimpleObject> Map { get; set; } = default!;

        [JsonProperty("num")]
        public double Num { get; set; } = default!;

        /// <summary>
        /// A simple object that uses all our supported primitive types and enums and has optional properties.
        /// 
        /// <see>https://speakeasy.com/docs} - A link to the external docs.</see>
        /// </summary>
        [JsonProperty("obj")]
        public SimpleObject Obj { get; set; } = default!;

        [JsonProperty("obj.type")]
        public string? ObjType { get; set; }

        [JsonProperty("str")]
        public string Str { get; set; } = default!;

        [JsonProperty("type")]
        public string? Type { get; set; }
    }
}