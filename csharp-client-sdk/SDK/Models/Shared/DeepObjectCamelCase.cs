
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace SDK.Models.Shared
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    public class DeepObjectCamelCase
    {

        [JsonProperty("any_val")]
        public object AnyVal { get; set; } = default!;

        [JsonProperty("arr_val")]
        public List<SimpleObjectCamelCase> ArrVal { get; set; } = default!;

        [JsonProperty("bool_val")]
        public bool BoolVal { get; set; } = default!;

        [JsonProperty("int_val")]
        public long IntVal { get; set; } = default!;

        [JsonProperty("map_val")]
        public Dictionary<string, SimpleObjectCamelCase> MapVal { get; set; } = default!;

        [JsonProperty("num_val")]
        public double NumVal { get; set; } = default!;

        /// <summary>
        /// A simple object that uses all our supported primitive types and enums and has optional properties.
        /// 
        /// <see>https://docs.speakeasyapi.dev} - A link to the external docs.</see>
        /// </summary>
        [JsonProperty("obj_val")]
        public SimpleObjectCamelCase ObjVal { get; set; } = default!;

        [JsonProperty("str_val")]
        public string StrVal { get; set; } = default!;

        [JsonProperty("type")]
        public string? Type { get; set; }
    }
}