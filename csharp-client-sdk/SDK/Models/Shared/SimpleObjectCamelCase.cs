
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace SDK.Models.Shared
{
    using Newtonsoft.Json;
    using NodaTime;
    using SDK.Utils;
    using System.Numerics;
    using System;
    
    /// <summary>
    /// A simple object that uses all our supported primitive types and enums and has optional properties.
    /// 
    /// <see>https://docs.speakeasyapi.dev} - A link to the external docs.</see>
    /// </summary>
    public class SimpleObjectCamelCase
    {

        /// <summary>
        /// An any property.
        /// </summary>
        [JsonProperty("any_val")]
        public object AnyVal { get; set; } = default!;

        /// <summary>
        /// A boolean property.
        /// </summary>
        [JsonProperty("bool_val")]
        public bool BoolVal { get; set; } = default!;

        /// <summary>
        /// A date-time property.
        /// </summary>
        [JsonProperty("date_time_val")]
        public DateTime DateTimeVal { get; set; } = default!;

        /// <summary>
        /// A date property.
        /// </summary>
        [JsonProperty("date_val")]
        public LocalDate DateVal { get; set; } = default!;

        /// <summary>
        /// A string based enum
        /// </summary>
        [JsonProperty("enum_val")]
        public Enum EnumVal { get; set; } = default!;

        /// <summary>
        /// A float32 property.
        /// </summary>
        [JsonProperty("float32_val")]
        public float Float32Val { get; set; } = default!;

        /// <summary>
        /// An int32 enum property.
        /// </summary>
        [JsonProperty("int32_enum_val")]
        public SimpleObjectCamelCaseInt32EnumVal Int32EnumVal { get; set; } = default!;

        /// <summary>
        /// An int32 property.
        /// </summary>
        [JsonProperty("int32_val")]
        public int Int32Val { get; set; } = default!;

        /// <summary>
        /// An integer enum property.
        /// </summary>
        [JsonProperty("int_enum_val")]
        public SimpleObjectCamelCaseIntEnumVal IntEnumVal { get; set; } = default!;

        /// <summary>
        /// An integer property.
        /// </summary>
        [JsonProperty("int_val")]
        public long IntVal { get; set; } = default!;

        /// <summary>
        /// A number property.
        /// </summary>
        [JsonProperty("num_val")]
        public double NumVal { get; set; } = default!;

        /// <summary>
        /// A string property.
        /// </summary>
        [JsonProperty("str_val")]
        public string StrVal { get; set; } = default!;

        [JsonProperty("bigint_str_val")]
        [JsonConverter(typeof(BigIntSerializer))]
        public BigInteger? BigintStrVal { get; set; }

        [JsonProperty("bigint_val")]
        public BigInteger? BigintVal { get; set; }

        /// <summary>
        /// An optional boolean property.
        /// </summary>
        [JsonProperty("bool_opt_val")]
        public bool? BoolOptVal { get; set; }

        [JsonProperty("decimal_val")]
        public decimal? DecimalVal { get; set; }

        /// <summary>
        /// An optional integer property will be null for tests.
        /// </summary>
        [JsonProperty("int_opt_null_val")]
        public long? IntOptNullVal { get; set; }

        /// <summary>
        /// An optional number property will be null for tests.
        /// </summary>
        [JsonProperty("num_opt_null_val")]
        public double? NumOptNullVal { get; set; }

        /// <summary>
        /// An optional string property.
        /// </summary>
        [JsonProperty("str_opt_val")]
        public string? StrOptVal { get; set; }
    }
}