
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Xunit;
using Openapi;
using Openapi.Models.Shared;
using Openapi.Models.Operations;
using System.Collections.Generic;
using System.Threading.Tasks;

public class AuthShould
{
    [Fact]
    public async Task NoAuth()
    {
        CommonHelpers.RecordTest("auth-no-auth");

        var sdk = new SDK();

        var res = await sdk.Auth.NoAuthAsync();

        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
    }

    [Fact]
    public async Task BasicAuth()
    {
        CommonHelpers.RecordTest("auth-basic-auth");

        var sdk = new SDK();

        var res = await sdk.Auth.BasicAuthAsync(
            new BasicAuthSecurity() { Username = "testUser", Password = "testPass" },
            "testPass",
            "testUser"
        );

        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
        Assert.Equal(true, res.User.Authenticated);
    }

    [Fact]
    public async Task ApiKeyAuthGlobal()
    {
        CommonHelpers.RecordTest("auth-api-key-auth-global");

        var sdk = new SDK(apiKeyAuth: "Bearer testToken");

        var res = await sdk.Auth.ApiKeyAuthHoistedAsync();

        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
        Assert.True(res.Token.Authenticated);
        Assert.Equal("testToken", res.Token.Token);
    }

    [Fact]
    public async Task ApiKeyAuthOperation()
    {
        CommonHelpers.RecordTest("auth-api-key-auth-operation");

        var sdk = new SDK();

        var res = await sdk.Auth.ApiKeyOrBearerAuthAsync(
            new ApiKeyOrBearerAuthSecurity() { ApiKeyAuth = "Bearer testToken" }
        );

        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
        Assert.True(res.Token.Authenticated);
        Assert.Equal("testToken", res.Token.Token);
    }
}
