
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Xunit;
using SDK;
using SDK.Models.Operations;
using System.Threading.Tasks;

public class FlatteningShould
{
    [Fact]
    public async Task ComponentBodyAndParamNoConflict()
    {
        CommonHelpers.RecordTest("flattening-component-body-and-param-no-conflict");

        var sdk = new SDKSDK();

        var res = await sdk.Flattening.ComponentBodyAndParamNoConflictAsync(
            "param test",
            Helpers.CreateSimpleObject()
        );

        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
        Assert.Equal("param test", res.Res.Args["paramStr"]);
        Helpers.AssertSimpleObject(res.Res.Json);
    }

    [Fact]
    public async Task ComponentBodyAndParamConflict()
    {
        CommonHelpers.RecordTest("flattening-component-body-and-param-conflict");

        var sdk = new SDKSDK();

        var res = await sdk.Flattening.ComponentBodyAndParamConflictAsync(
            Helpers.CreateSimpleObject(),
            "param test"
        );

        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
        Assert.Equal("param test", res.Res.Args["str"]);
        Helpers.AssertSimpleObject(res.Res.Json);
    }

    [Fact]
    public async Task InlineBodyAndParamConflict()
    {
        CommonHelpers.RecordTest("flattening-inline-body-and-param-conflict");

        var sdk = new SDKSDK();

        var res = await sdk.Flattening.InlineBodyAndParamConflictAsync(
            new InlineBodyAndParamConflictRequestBody() { Str = "body test" },
            "param test"
        );

        Assert.Equal(200, res.StatusCode);
        Assert.Equal("param test", res.Res.Args["str"]);
        Assert.Equal("body test", res.Res.Json.Str);
    }

    [Fact]
    public async Task InlineBodyAndParamNoConflict()
    {
        CommonHelpers.RecordTest("flattening-inline-body-and-param-no-conflict");

        var sdk = new SDKSDK();

        var res = await sdk.Flattening.InlineBodyAndParamNoConflictAsync(
            new InlineBodyAndParamNoConflictRequestBody() { BodyStr = "body test" },
            "param test"
        );

        Assert.Equal(200, res.StatusCode);
        Assert.Equal("param test", res.Res.Args["paramStr"]);
        Assert.Equal("body test", res.Res.Json.BodyStr);
    }

    [Fact]
    public async Task ConflictingParams()
    {
        CommonHelpers.RecordTest("flattening-conflicting-params");

        var sdk = new SDKSDK();

        var res = await sdk.Flattening.ConflictingParamsAsync("pathParam", "queryParam");

        Assert.Equal(200, res.StatusCode);
        Assert.Contains("/pathParam?", res.Res.Url);
        Assert.Equal("queryParam", res.Res.Args["str"]);
    }
}