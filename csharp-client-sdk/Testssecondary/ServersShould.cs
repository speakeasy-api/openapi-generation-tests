//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Net.Http;
using System.Threading.Tasks;
using System.Collections.Generic;
using Xunit;
using HoistedSecurity;
using HoistedSecurity.Utils;

public class ServersShould
{
    [Fact]
    public async Task SelectGlobalServerByNameDefault()
    {
        CommonHelpers.RecordTest("servers-select-global-server-by-name-default");

        var sdk = new SDK(server: null);

        var res = await sdk.Servers.SelectGlobalServerAsync();
        Assert.NotNull(res);
    }

    [Fact]
    public async Task SelectGlobalServerByNameValid()
    {
        CommonHelpers.RecordTest("servers-select-global-server-by-name-valid");

        var sdk = new SDK(server: SDKConfig.Server.DefaultServer);

        var res = await sdk.Servers.SelectGlobalServerAsync();
        Assert.NotNull(res);
    }

    [Fact]
    public async Task SelectGlobalServerByNameBroken()
    {
        CommonHelpers.RecordTest("servers-select-global-server-by-name-broken");

        var sdk = new SDK(server: SDKConfig.Server.BrokenServer);

        await Assert.ThrowsAsync<HttpRequestException>(
            async () => await sdk.Servers.SelectGlobalServerAsync()
        );
    }
}
