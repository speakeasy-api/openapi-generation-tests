//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Net.Http;
using System.Threading.Tasks;
using System.Collections.Generic;
using Xunit;
using No_Security.API;

public class ServersShould
{
    [Fact]
    public async Task SelectGlobalServerByIdDefault()
    {
        CommonHelpers.RecordTest("servers-select-global-server-by-id-default");

        var sdk = new SDK(serverIndex: null);

        var res = await sdk.Servers.SelectGlobalServerAsync();
        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
    }

    [Fact]
    public async Task SelectGlobalServerByIdValid()
    {
        CommonHelpers.RecordTest("servers-select-global-server-by-id-valid");

        var sdk = new SDK(serverIndex: 0);

        var res = await sdk.Servers.SelectGlobalServerAsync();
        Assert.NotNull(res);
        Assert.Equal(200, res.StatusCode);
    }

    [Fact]
    public void SelectGlobalServerByIdInValid()
    {
        CommonHelpers.RecordTest("servers-select-global-server-by-id-invalid");

        var ex = Assert.Throws<Exception>(() => new SDK(serverIndex: 2));
        Assert.Equal("Invalid server index 2", ex.Message);
    }

    [Fact]
    public async Task SelectGlobalServerByIdBroken()
    {
        CommonHelpers.RecordTest("servers-select-global-server-by-id-broken");

        var sdk = new SDK(serverIndex: 1);

        await Assert.ThrowsAsync<HttpRequestException>(
            async () => await sdk.Servers.SelectGlobalServerAsync()
        );
    }
}
