// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type APIKeyAuthSecurity struct {
	APIKeyAuth string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

func (o *APIKeyAuthSecurity) GetAPIKeyAuth() string {
	if o == nil {
		return ""
	}
	return o.APIKeyAuth
}

// APIKeyAuthToken - Successful authentication.
type APIKeyAuthToken struct {
	Authenticated bool   `json:"authenticated"`
	Token         string `json:"token"`
}

func (o *APIKeyAuthToken) GetAuthenticated() bool {
	if o == nil {
		return false
	}
	return o.Authenticated
}

func (o *APIKeyAuthToken) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

type APIKeyAuthResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful authentication.
	Token *APIKeyAuthToken
}

func (o *APIKeyAuthResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *APIKeyAuthResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *APIKeyAuthResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *APIKeyAuthResponse) GetToken() *APIKeyAuthToken {
	if o == nil {
		return nil
	}
	return o.Token
}
