// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type BearerAuthSecurity struct {
	BearerAuth string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

func (o *BearerAuthSecurity) GetBearerAuth() string {
	if o == nil {
		return ""
	}
	return o.BearerAuth
}

// BearerAuthToken - Successful authentication.
type BearerAuthToken struct {
	Authenticated bool   `json:"authenticated"`
	Token         string `json:"token"`
}

func (o *BearerAuthToken) GetAuthenticated() bool {
	if o == nil {
		return false
	}
	return o.Authenticated
}

func (o *BearerAuthToken) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

type BearerAuthResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful authentication.
	Token *BearerAuthToken
}

func (o *BearerAuthResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *BearerAuthResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *BearerAuthResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *BearerAuthResponse) GetToken() *BearerAuthToken {
	if o == nil {
		return nil
	}
	return o.Token
}
