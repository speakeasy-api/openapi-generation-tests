// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/v2/pkg/models/shared"
	"openapi/v2/pkg/types/stream"
)

var ChatSkipSentinelServerList = []string{
	"http://localhost:35456",
}

type ChatSkipSentinelRequestBody struct {
	Prompt string `json:"prompt"`
	Stream *bool  `json:"stream,omitempty"`
}

func (o *ChatSkipSentinelRequestBody) GetPrompt() string {
	if o == nil {
		return ""
	}
	return o.Prompt
}

func (o *ChatSkipSentinelRequestBody) GetStream() *bool {
	if o == nil {
		return nil
	}
	return o.Stream
}

type ChatSkipSentinelResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Ok
	ChatCompletionEvent *stream.EventStream[shared.ChatCompletionEvent]
}

func (o *ChatSkipSentinelResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ChatSkipSentinelResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ChatSkipSentinelResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ChatSkipSentinelResponse) GetChatCompletionEvent() *stream.EventStream[shared.ChatCompletionEvent] {
	if o == nil {
		return nil
	}
	return o.ChatCompletionEvent
}
