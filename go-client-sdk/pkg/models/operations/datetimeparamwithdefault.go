// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/utils"
	"time"
)

type DateTimeParamWithDefaultRequest struct {
	// A date time parameter with a default value
	DateTimeInput time.Time `default:"2023-10-13T12:42:42.999+00:00" queryParam:"style=form,explode=true,name=dateTimeInput"`
}

func (d DateTimeParamWithDefaultRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DateTimeParamWithDefaultRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DateTimeParamWithDefaultRequest) GetDateTimeInput() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.DateTimeInput
}

type DateTimeParamWithDefaultResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *DateTimeParamWithDefaultResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DateTimeParamWithDefaultResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DateTimeParamWithDefaultResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
