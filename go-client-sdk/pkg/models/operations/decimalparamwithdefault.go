// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ericlagergren/decimal"
	"net/http"
	"openapi/pkg/utils"
)

type DecimalParamWithDefaultRequest struct {
	// A decimal parameter with a default value
	DecimalInput *decimal.Big `default:"903275809834567386763" decimal:"number" queryParam:"style=form,explode=true,name=decimalInput"`
}

func (d DecimalParamWithDefaultRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DecimalParamWithDefaultRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DecimalParamWithDefaultRequest) GetDecimalInput() *decimal.Big {
	if o == nil {
		return new(decimal.Big).SetFloat64(0.0)
	}
	return o.DecimalInput
}

type DecimalParamWithDefaultResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *DecimalParamWithDefaultResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DecimalParamWithDefaultResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DecimalParamWithDefaultResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
