// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/v2/pkg/models/shared"
)

type DeepObjectQueryParamsDeepObjectRequest struct {
	// deepObject style query parameter serialization is undefined for arrays or nested objects by the specification:
	//    https://github.com/OAI/OpenAPI-Specification/issues/1706
	// This schema covers the intended implementation cases rather than the fully complex deepObject schema.
	//
	DeepObj shared.DeepObjectQueryParams `queryParam:"style=deepObject,explode=true,name=deepObj"`
}

func (o *DeepObjectQueryParamsDeepObjectRequest) GetDeepObj() shared.DeepObjectQueryParams {
	if o == nil {
		return shared.DeepObjectQueryParams{}
	}
	return o.DeepObj
}

type DeepObjectQueryParamsDeepObjectArgs struct {
	DeepObjArr           []string `json:"deepObj[arr]"`
	DeepObjBool          string   `json:"deepObj[bool]"`
	DeepObjInt           string   `json:"deepObj[int]"`
	DeepObjMapTestkey1   string   `json:"deepObj[map][testkey1]"`
	DeepObjMapTestkey2   string   `json:"deepObj[map][testkey2]"`
	DeepObjNum           string   `json:"deepObj[num]"`
	DeepObjObjAny        string   `json:"deepObj[obj][any]"`
	DeepObjObjBigintStr  string   `json:"deepObj[obj][bigintStr]"`
	DeepObjObjBigint     string   `json:"deepObj[obj][bigint]"`
	DeepObjObjBoolOpt    string   `json:"deepObj[obj][boolOpt]"`
	DeepObjObjBool       string   `json:"deepObj[obj][bool]"`
	DeepObjObjDateTime   string   `json:"deepObj[obj][dateTime]"`
	DeepObjObjDate       string   `json:"deepObj[obj][date]"`
	DeepObjObjDecimalStr string   `json:"deepObj[obj][decimalStr]"`
	DeepObjObjDecimal    string   `json:"deepObj[obj][decimal]"`
	DeepObjObjEnum       string   `json:"deepObj[obj][enum]"`
	DeepObjObjFloat32    string   `json:"deepObj[obj][float32]"`
	DeepObjObjFloat64Str *string  `json:"deepObj[obj][float64Str],omitempty"`
	DeepObjObjInt32Enum  string   `json:"deepObj[obj][int32Enum]"`
	DeepObjObjInt32      string   `json:"deepObj[obj][int32]"`
	DeepObjObjInt64Str   *string  `json:"deepObj[obj][int64Str],omitempty"`
	DeepObjObjIntEnum    string   `json:"deepObj[obj][intEnum]"`
	DeepObjObjInt        string   `json:"deepObj[obj][int]"`
	DeepObjObjNum        string   `json:"deepObj[obj][num]"`
	DeepObjObjStrOpt     string   `json:"deepObj[obj][strOpt]"`
	DeepObjObjStr        string   `json:"deepObj[obj][str]"`
	DeepObjOneof         string   `json:"deepObj[oneof]"`
	DeepObjStr           string   `json:"deepObj[str]"`
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjArr() []string {
	if o == nil {
		return []string{}
	}
	return o.DeepObjArr
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjBool() string {
	if o == nil {
		return ""
	}
	return o.DeepObjBool
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjInt() string {
	if o == nil {
		return ""
	}
	return o.DeepObjInt
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjMapTestkey1() string {
	if o == nil {
		return ""
	}
	return o.DeepObjMapTestkey1
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjMapTestkey2() string {
	if o == nil {
		return ""
	}
	return o.DeepObjMapTestkey2
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjNum() string {
	if o == nil {
		return ""
	}
	return o.DeepObjNum
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjAny() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjAny
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjBigintStr() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjBigintStr
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjBigint() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjBigint
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjBoolOpt() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjBoolOpt
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjBool() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjBool
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjDateTime() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjDateTime
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjDate() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjDate
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjDecimalStr() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjDecimalStr
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjDecimal() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjDecimal
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjEnum() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjEnum
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjFloat32() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjFloat32
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjFloat64Str() *string {
	if o == nil {
		return nil
	}
	return o.DeepObjObjFloat64Str
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjInt32Enum() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjInt32Enum
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjInt32() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjInt32
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjInt64Str() *string {
	if o == nil {
		return nil
	}
	return o.DeepObjObjInt64Str
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjIntEnum() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjIntEnum
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjInt() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjInt
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjNum() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjNum
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjStrOpt() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjStrOpt
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjObjStr() string {
	if o == nil {
		return ""
	}
	return o.DeepObjObjStr
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjOneof() string {
	if o == nil {
		return ""
	}
	return o.DeepObjOneof
}

func (o *DeepObjectQueryParamsDeepObjectArgs) GetDeepObjStr() string {
	if o == nil {
		return ""
	}
	return o.DeepObjStr
}

// DeepObjectQueryParamsDeepObjectRes - OK
type DeepObjectQueryParamsDeepObjectRes struct {
	Args DeepObjectQueryParamsDeepObjectArgs `json:"args"`
	URL  string                              `json:"url"`
}

func (o *DeepObjectQueryParamsDeepObjectRes) GetArgs() DeepObjectQueryParamsDeepObjectArgs {
	if o == nil {
		return DeepObjectQueryParamsDeepObjectArgs{}
	}
	return o.Args
}

func (o *DeepObjectQueryParamsDeepObjectRes) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type DeepObjectQueryParamsDeepObjectResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *DeepObjectQueryParamsDeepObjectRes
}

func (o *DeepObjectQueryParamsDeepObjectResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeepObjectQueryParamsDeepObjectResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeepObjectQueryParamsDeepObjectResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeepObjectQueryParamsDeepObjectResponse) GetRes() *DeepObjectQueryParamsDeepObjectRes {
	if o == nil {
		return nil
	}
	return o.Res
}
