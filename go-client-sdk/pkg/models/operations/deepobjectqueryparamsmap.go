// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"errors"
	"net/http"
	"openapi/v3/pkg/utils"
)

type DeepObjectQueryParamsMapRequest struct {
	MapParam    map[string]string   `queryParam:"style=deepObject,explode=true,name=mapParam"`
	MapArrParam map[string][]string `queryParam:"style=deepObject,explode=true,name=mapArrParam"`
}

func (o *DeepObjectQueryParamsMapRequest) GetMapParam() map[string]string {
	if o == nil {
		return map[string]string{}
	}
	return o.MapParam
}

func (o *DeepObjectQueryParamsMapRequest) GetMapArrParam() map[string][]string {
	if o == nil {
		return nil
	}
	return o.MapArrParam
}

type DeepObjectQueryParamsMapArgsType string

const (
	DeepObjectQueryParamsMapArgsTypeStr        DeepObjectQueryParamsMapArgsType = "str"
	DeepObjectQueryParamsMapArgsTypeArrayOfstr DeepObjectQueryParamsMapArgsType = "arrayOfstr"
)

type DeepObjectQueryParamsMapArgs struct {
	Str        *string
	ArrayOfstr []string

	Type DeepObjectQueryParamsMapArgsType
}

func CreateDeepObjectQueryParamsMapArgsStr(str string) DeepObjectQueryParamsMapArgs {
	typ := DeepObjectQueryParamsMapArgsTypeStr

	return DeepObjectQueryParamsMapArgs{
		Str:  &str,
		Type: typ,
	}
}

func CreateDeepObjectQueryParamsMapArgsArrayOfstr(arrayOfstr []string) DeepObjectQueryParamsMapArgs {
	typ := DeepObjectQueryParamsMapArgsTypeArrayOfstr

	return DeepObjectQueryParamsMapArgs{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *DeepObjectQueryParamsMapArgs) UnmarshalJSON(data []byte) error {

	str := ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = DeepObjectQueryParamsMapArgsTypeStr
		return nil
	}

	arrayOfstr := []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfstr, "", true, true); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = DeepObjectQueryParamsMapArgsTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DeepObjectQueryParamsMapArgs) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfstr != nil {
		return utils.MarshalJSON(u.ArrayOfstr, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

// DeepObjectQueryParamsMapRes - OK
type DeepObjectQueryParamsMapRes struct {
	Args map[string]DeepObjectQueryParamsMapArgs `json:"args"`
	URL  string                                  `json:"url"`
}

func (o *DeepObjectQueryParamsMapRes) GetArgs() map[string]DeepObjectQueryParamsMapArgs {
	if o == nil {
		return map[string]DeepObjectQueryParamsMapArgs{}
	}
	return o.Args
}

func (o *DeepObjectQueryParamsMapRes) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type DeepObjectQueryParamsMapResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *DeepObjectQueryParamsMapRes
}

func (o *DeepObjectQueryParamsMapResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeepObjectQueryParamsMapResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeepObjectQueryParamsMapResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeepObjectQueryParamsMapResponse) GetRes() *DeepObjectQueryParamsMapRes {
	if o == nil {
		return nil
	}
	return o.Res
}
