// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type FlattenedEnvelopePaginationResponseRequest struct {
	// The page token used to request a specific page of the search results
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
}

func (o *FlattenedEnvelopePaginationResponseRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

// FlattenedEnvelopePaginationResponseRes - OK
type FlattenedEnvelopePaginationResponseRes struct {
	Next        *string  `json:"next,omitempty"`
	NumPages    int64    `json:"numPages"`
	ResultArray []string `json:"resultArray"`
}

func (o *FlattenedEnvelopePaginationResponseRes) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *FlattenedEnvelopePaginationResponseRes) GetNumPages() int64 {
	if o == nil {
		return 0
	}
	return o.NumPages
}

func (o *FlattenedEnvelopePaginationResponseRes) GetResultArray() []string {
	if o == nil {
		return []string{}
	}
	return o.ResultArray
}

type FlattenedEnvelopePaginationResponseResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *FlattenedEnvelopePaginationResponseRes

	Next func() (*FlattenedEnvelopePaginationResponseResponse, error)
}

func (o *FlattenedEnvelopePaginationResponseResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *FlattenedEnvelopePaginationResponseResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *FlattenedEnvelopePaginationResponseResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *FlattenedEnvelopePaginationResponseResponse) GetRes() *FlattenedEnvelopePaginationResponseRes {
	if o == nil {
		return nil
	}
	return o.Res
}
