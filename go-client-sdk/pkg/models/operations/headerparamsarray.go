// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type HeaderParamsArrayRequest struct {
	XHeaderArray []string `header:"style=simple,explode=false,name=X-Header-Array"`
}

func (o *HeaderParamsArrayRequest) GetXHeaderArray() []string {
	if o == nil {
		return []string{}
	}
	return o.XHeaderArray
}

type HeaderParamsArrayResHeaders struct {
	XHeaderArray string `json:"X-Header-Array"`
}

func (o *HeaderParamsArrayResHeaders) GetXHeaderArray() string {
	if o == nil {
		return ""
	}
	return o.XHeaderArray
}

// HeaderParamsArrayRes - OK
type HeaderParamsArrayRes struct {
	Headers HeaderParamsArrayResHeaders `json:"headers"`
}

func (o *HeaderParamsArrayRes) GetHeaders() HeaderParamsArrayResHeaders {
	if o == nil {
		return HeaderParamsArrayResHeaders{}
	}
	return o.Headers
}

type HeaderParamsArrayResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Res *HeaderParamsArrayRes
}

func (o *HeaderParamsArrayResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *HeaderParamsArrayResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *HeaderParamsArrayResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *HeaderParamsArrayResponse) GetRes() *HeaderParamsArrayRes {
	if o == nil {
		return nil
	}
	return o.Res
}
