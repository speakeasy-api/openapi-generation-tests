// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type HeaderParamsPrimitiveRequest struct {
	XHeaderBoolean bool    `header:"style=simple,explode=false,name=X-Header-Boolean"`
	XHeaderInteger int64   `header:"style=simple,explode=false,name=X-Header-Integer"`
	XHeaderNumber  float64 `header:"style=simple,explode=false,name=X-Header-Number"`
	XHeaderString  string  `header:"style=simple,explode=false,name=X-Header-String"`
}

func (o *HeaderParamsPrimitiveRequest) GetXHeaderBoolean() bool {
	if o == nil {
		return false
	}
	return o.XHeaderBoolean
}

func (o *HeaderParamsPrimitiveRequest) GetXHeaderInteger() int64 {
	if o == nil {
		return 0
	}
	return o.XHeaderInteger
}

func (o *HeaderParamsPrimitiveRequest) GetXHeaderNumber() float64 {
	if o == nil {
		return 0.0
	}
	return o.XHeaderNumber
}

func (o *HeaderParamsPrimitiveRequest) GetXHeaderString() string {
	if o == nil {
		return ""
	}
	return o.XHeaderString
}

type HeaderParamsPrimitiveHeaders struct {
	XHeaderBoolean string `json:"X-Header-Boolean"`
	XHeaderInteger string `json:"X-Header-Integer"`
	XHeaderNumber  string `json:"X-Header-Number"`
	XHeaderString  string `json:"X-Header-String"`
}

func (o *HeaderParamsPrimitiveHeaders) GetXHeaderBoolean() string {
	if o == nil {
		return ""
	}
	return o.XHeaderBoolean
}

func (o *HeaderParamsPrimitiveHeaders) GetXHeaderInteger() string {
	if o == nil {
		return ""
	}
	return o.XHeaderInteger
}

func (o *HeaderParamsPrimitiveHeaders) GetXHeaderNumber() string {
	if o == nil {
		return ""
	}
	return o.XHeaderNumber
}

func (o *HeaderParamsPrimitiveHeaders) GetXHeaderString() string {
	if o == nil {
		return ""
	}
	return o.XHeaderString
}

// HeaderParamsPrimitiveRes - OK
type HeaderParamsPrimitiveRes struct {
	Headers HeaderParamsPrimitiveHeaders `json:"headers"`
}

func (o *HeaderParamsPrimitiveRes) GetHeaders() HeaderParamsPrimitiveHeaders {
	if o == nil {
		return HeaderParamsPrimitiveHeaders{}
	}
	return o.Headers
}

type HeaderParamsPrimitiveResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *HeaderParamsPrimitiveRes
}

func (o *HeaderParamsPrimitiveResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *HeaderParamsPrimitiveResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *HeaderParamsPrimitiveResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *HeaderParamsPrimitiveResponse) GetRes() *HeaderParamsPrimitiveRes {
	if o == nil {
		return nil
	}
	return o.Res
}
