// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type MixedParametersPrimitivesRequest struct {
	HeaderParam      string `header:"style=simple,explode=false,name=headerParam"`
	PathParam        string `pathParam:"style=simple,explode=false,name=pathParam"`
	QueryStringParam string `queryParam:"style=form,explode=true,name=queryStringParam"`
}

func (o *MixedParametersPrimitivesRequest) GetHeaderParam() string {
	if o == nil {
		return ""
	}
	return o.HeaderParam
}

func (o *MixedParametersPrimitivesRequest) GetPathParam() string {
	if o == nil {
		return ""
	}
	return o.PathParam
}

func (o *MixedParametersPrimitivesRequest) GetQueryStringParam() string {
	if o == nil {
		return ""
	}
	return o.QueryStringParam
}

type MixedParametersPrimitivesArgs struct {
	QueryStringParam string `json:"queryStringParam"`
}

func (o *MixedParametersPrimitivesArgs) GetQueryStringParam() string {
	if o == nil {
		return ""
	}
	return o.QueryStringParam
}

type MixedParametersPrimitivesHeaders struct {
	Headerparam string `json:"Headerparam"`
}

func (o *MixedParametersPrimitivesHeaders) GetHeaderparam() string {
	if o == nil {
		return ""
	}
	return o.Headerparam
}

// MixedParametersPrimitivesRes - OK
type MixedParametersPrimitivesRes struct {
	Args    MixedParametersPrimitivesArgs    `json:"args"`
	Headers MixedParametersPrimitivesHeaders `json:"headers"`
	URL     string                           `json:"url"`
}

func (o *MixedParametersPrimitivesRes) GetArgs() MixedParametersPrimitivesArgs {
	if o == nil {
		return MixedParametersPrimitivesArgs{}
	}
	return o.Args
}

func (o *MixedParametersPrimitivesRes) GetHeaders() MixedParametersPrimitivesHeaders {
	if o == nil {
		return MixedParametersPrimitivesHeaders{}
	}
	return o.Headers
}

func (o *MixedParametersPrimitivesRes) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type MixedParametersPrimitivesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *MixedParametersPrimitivesRes
}

func (o *MixedParametersPrimitivesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *MixedParametersPrimitivesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *MixedParametersPrimitivesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *MixedParametersPrimitivesResponse) GetRes() *MixedParametersPrimitivesRes {
	if o == nil {
		return nil
	}
	return o.Res
}
