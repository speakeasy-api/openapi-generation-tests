// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

var PaginationAmbiguousInputServerList = []string{
	"http://localhost:35456",
}

type PaginationAmbiguousInputRequestBody struct {
	Cursor int64 `json:"cursor"`
}

func (o *PaginationAmbiguousInputRequestBody) GetCursor() int64 {
	if o == nil {
		return 0
	}
	return o.Cursor
}

type PaginationAmbiguousInputRequest struct {
	RequestBody PaginationAmbiguousInputRequestBody `request:"mediaType=application/json"`
	Cursor      *int64                              `queryParam:"style=form,explode=true,name=cursor"`
}

func (o *PaginationAmbiguousInputRequest) GetRequestBody() PaginationAmbiguousInputRequestBody {
	if o == nil {
		return PaginationAmbiguousInputRequestBody{}
	}
	return o.RequestBody
}

func (o *PaginationAmbiguousInputRequest) GetCursor() *int64 {
	if o == nil {
		return nil
	}
	return o.Cursor
}

// PaginationAmbiguousInputRes - OK
type PaginationAmbiguousInputRes struct {
	Next        *string `json:"next,omitempty"`
	NumPages    int64   `json:"numPages"`
	ResultArray []int64 `json:"resultArray"`
}

func (o *PaginationAmbiguousInputRes) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *PaginationAmbiguousInputRes) GetNumPages() int64 {
	if o == nil {
		return 0
	}
	return o.NumPages
}

func (o *PaginationAmbiguousInputRes) GetResultArray() []int64 {
	if o == nil {
		return []int64{}
	}
	return o.ResultArray
}

type PaginationAmbiguousInputResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *PaginationAmbiguousInputRes

	Next func() (*PaginationAmbiguousInputResponse, error)
}

func (o *PaginationAmbiguousInputResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PaginationAmbiguousInputResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PaginationAmbiguousInputResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PaginationAmbiguousInputResponse) GetRes() *PaginationAmbiguousInputRes {
	if o == nil {
		return nil
	}
	return o.Res
}
