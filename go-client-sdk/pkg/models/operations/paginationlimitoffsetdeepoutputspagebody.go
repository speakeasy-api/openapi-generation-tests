// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

var PaginationLimitOffsetDeepOutputsPageBodyServerList = []string{
	"http://localhost:35456",
}

type PageInfo struct {
	Next     *string `json:"next,omitempty"`
	NumPages int64   `json:"numPages"`
}

func (o *PageInfo) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *PageInfo) GetNumPages() int64 {
	if o == nil {
		return 0
	}
	return o.NumPages
}

// PaginationLimitOffsetDeepOutputsPageBodyRes - OK
type PaginationLimitOffsetDeepOutputsPageBodyRes struct {
	PageInfo    PageInfo `json:"pageInfo"`
	ResultArray []int64  `json:"resultArray"`
}

func (o *PaginationLimitOffsetDeepOutputsPageBodyRes) GetPageInfo() PageInfo {
	if o == nil {
		return PageInfo{}
	}
	return o.PageInfo
}

func (o *PaginationLimitOffsetDeepOutputsPageBodyRes) GetResultArray() []int64 {
	if o == nil {
		return []int64{}
	}
	return o.ResultArray
}

type PaginationLimitOffsetDeepOutputsPageBodyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *PaginationLimitOffsetDeepOutputsPageBodyRes

	Next func() (*PaginationLimitOffsetDeepOutputsPageBodyResponse, error)
}

func (o *PaginationLimitOffsetDeepOutputsPageBodyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PaginationLimitOffsetDeepOutputsPageBodyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PaginationLimitOffsetDeepOutputsPageBodyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PaginationLimitOffsetDeepOutputsPageBodyResponse) GetRes() *PaginationLimitOffsetDeepOutputsPageBodyRes {
	if o == nil {
		return nil
	}
	return o.Res
}
