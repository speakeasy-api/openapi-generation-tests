// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

var PaginationLimitOffsetDefaultOffsetBodyServerList = []string{
	"http://localhost:35456",
}

// PaginationLimitOffsetDefaultOffsetBodyRes - OK
type PaginationLimitOffsetDefaultOffsetBodyRes struct {
	Next        *string `json:"next,omitempty"`
	NumPages    int64   `json:"numPages"`
	ResultArray []int64 `json:"resultArray"`
}

func (o *PaginationLimitOffsetDefaultOffsetBodyRes) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *PaginationLimitOffsetDefaultOffsetBodyRes) GetNumPages() int64 {
	if o == nil {
		return 0
	}
	return o.NumPages
}

func (o *PaginationLimitOffsetDefaultOffsetBodyRes) GetResultArray() []int64 {
	if o == nil {
		return []int64{}
	}
	return o.ResultArray
}

type PaginationLimitOffsetDefaultOffsetBodyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *PaginationLimitOffsetDefaultOffsetBodyRes

	Next func() (*PaginationLimitOffsetDefaultOffsetBodyResponse, error)
}

func (o *PaginationLimitOffsetDefaultOffsetBodyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PaginationLimitOffsetDefaultOffsetBodyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PaginationLimitOffsetDefaultOffsetBodyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PaginationLimitOffsetDefaultOffsetBodyResponse) GetRes() *PaginationLimitOffsetDefaultOffsetBodyRes {
	if o == nil {
		return nil
	}
	return o.Res
}
