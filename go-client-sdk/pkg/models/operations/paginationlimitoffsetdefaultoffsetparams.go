// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/v2/pkg/utils"
)

var PaginationLimitOffsetDefaultOffsetParamsServerList = []string{
	"http://localhost:35456",
}

type PaginationLimitOffsetDefaultOffsetParamsRequest struct {
	Limit  *int64 `default:"15" queryParam:"style=form,explode=true,name=limit"`
	Offset *int64 `default:"10" queryParam:"style=form,explode=true,name=offset"`
}

func (p PaginationLimitOffsetDefaultOffsetParamsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaginationLimitOffsetDefaultOffsetParamsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PaginationLimitOffsetDefaultOffsetParamsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *PaginationLimitOffsetDefaultOffsetParamsRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

// PaginationLimitOffsetDefaultOffsetParamsRes - OK
type PaginationLimitOffsetDefaultOffsetParamsRes struct {
	Next        *string `json:"next,omitempty"`
	NumPages    int64   `json:"numPages"`
	ResultArray []int64 `json:"resultArray"`
}

func (o *PaginationLimitOffsetDefaultOffsetParamsRes) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *PaginationLimitOffsetDefaultOffsetParamsRes) GetNumPages() int64 {
	if o == nil {
		return 0
	}
	return o.NumPages
}

func (o *PaginationLimitOffsetDefaultOffsetParamsRes) GetResultArray() []int64 {
	if o == nil {
		return []int64{}
	}
	return o.ResultArray
}

type PaginationLimitOffsetDefaultOffsetParamsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *PaginationLimitOffsetDefaultOffsetParamsRes

	Next func() (*PaginationLimitOffsetDefaultOffsetParamsResponse, error)
}

func (o *PaginationLimitOffsetDefaultOffsetParamsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PaginationLimitOffsetDefaultOffsetParamsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PaginationLimitOffsetDefaultOffsetParamsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PaginationLimitOffsetDefaultOffsetParamsResponse) GetRes() *PaginationLimitOffsetDefaultOffsetParamsRes {
	if o == nil {
		return nil
	}
	return o.Res
}
