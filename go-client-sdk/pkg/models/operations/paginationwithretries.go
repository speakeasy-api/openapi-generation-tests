// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/v2/pkg/utils"
)

var PaginationWithRetriesServerList = []string{
	"http://localhost:35456",
}

type PaginationWithRetriesRequest struct {
	// The page token used to request a specific page of the search results
	Cursor        *string `queryParam:"style=form,explode=true,name=cursor"`
	FaultSettings *string `default:"{\"error_code\": 503, \"error_count\": 3}" header:"style=simple,explode=false,name=fault-settings"`
	RequestID     *string `default:"paginationWithRetries" header:"style=simple,explode=false,name=request-id"`
}

func (p PaginationWithRetriesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaginationWithRetriesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PaginationWithRetriesRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *PaginationWithRetriesRequest) GetFaultSettings() *string {
	if o == nil {
		return nil
	}
	return o.FaultSettings
}

func (o *PaginationWithRetriesRequest) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

// PaginationWithRetriesRes - OK
type PaginationWithRetriesRes struct {
	Next        *string  `json:"next,omitempty"`
	NumPages    int64    `json:"numPages"`
	ResultArray []string `json:"resultArray"`
}

func (o *PaginationWithRetriesRes) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *PaginationWithRetriesRes) GetNumPages() int64 {
	if o == nil {
		return 0
	}
	return o.NumPages
}

func (o *PaginationWithRetriesRes) GetResultArray() []string {
	if o == nil {
		return []string{}
	}
	return o.ResultArray
}

type PaginationWithRetriesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *PaginationWithRetriesRes

	Next func() (*PaginationWithRetriesResponse, error)
}

func (o *PaginationWithRetriesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PaginationWithRetriesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PaginationWithRetriesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PaginationWithRetriesResponse) GetRes() *PaginationWithRetriesRes {
	if o == nil {
		return nil
	}
	return o.Res
}
