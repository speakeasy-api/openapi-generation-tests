// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

var RequestBodyGetInferredOptionalRequestWrapperServerList = []string{
	"http://localhost:35123",
}

type RequestBodyGetInferredOptionalRequestWrapperRequest struct {
	Keyword *string `queryParam:"style=form,explode=true,name=keyword"`
	Limit   *int64  `queryParam:"style=form,explode=true,name=limit"`
	Offset  *int64  `queryParam:"style=form,explode=true,name=offset"`
}

func (o *RequestBodyGetInferredOptionalRequestWrapperRequest) GetKeyword() *string {
	if o == nil {
		return nil
	}
	return o.Keyword
}

func (o *RequestBodyGetInferredOptionalRequestWrapperRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *RequestBodyGetInferredOptionalRequestWrapperRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

type RequestBodyGetInferredOptionalRequestWrapperArgs struct {
	Keyword *string `json:"keyword,omitempty"`
	Limit   *int64  `json:"limit,omitempty"`
	Offset  *int64  `json:"offset,omitempty"`
}

func (o *RequestBodyGetInferredOptionalRequestWrapperArgs) GetKeyword() *string {
	if o == nil {
		return nil
	}
	return o.Keyword
}

func (o *RequestBodyGetInferredOptionalRequestWrapperArgs) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *RequestBodyGetInferredOptionalRequestWrapperArgs) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

// RequestBodyGetInferredOptionalRequestWrapperResponseBody - OK
type RequestBodyGetInferredOptionalRequestWrapperResponseBody struct {
	Args RequestBodyGetInferredOptionalRequestWrapperArgs `json:"args"`
}

func (o *RequestBodyGetInferredOptionalRequestWrapperResponseBody) GetArgs() RequestBodyGetInferredOptionalRequestWrapperArgs {
	if o == nil {
		return RequestBodyGetInferredOptionalRequestWrapperArgs{}
	}
	return o.Args
}

type RequestBodyGetInferredOptionalRequestWrapperResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Object *RequestBodyGetInferredOptionalRequestWrapperResponseBody
}

func (o *RequestBodyGetInferredOptionalRequestWrapperResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyGetInferredOptionalRequestWrapperResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyGetInferredOptionalRequestWrapperResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyGetInferredOptionalRequestWrapperResponse) GetObject() *RequestBodyGetInferredOptionalRequestWrapperResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
