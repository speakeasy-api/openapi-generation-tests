// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"math/big"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type RequestBodyPostComplexNumberTypesRequest struct {
	ComplexNumberTypes *shared.ComplexNumberTypes `request:"mediaType=application/json"`
	PathBigInt         *big.Int                   `pathParam:"style=simple,explode=false,name=pathBigInt"`
	PathBigIntStr      types.BigInt               `pathParam:"style=simple,explode=false,name=pathBigIntStr"`
	PathDecimal        float64                    `pathParam:"style=simple,explode=false,name=pathDecimal"`
	PathDecimalStr     string                     `pathParam:"style=simple,explode=false,name=pathDecimalStr"`
	QueryBigInt        *big.Int                   `queryParam:"style=form,explode=true,name=queryBigInt"`
	QueryBigIntStr     types.BigInt               `queryParam:"style=form,explode=true,name=queryBigIntStr"`
	QueryDecimal       float64                    `queryParam:"style=form,explode=true,name=queryDecimal"`
	QueryDecimalStr    string                     `queryParam:"style=form,explode=true,name=queryDecimalStr"`
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetComplexNumberTypes() *shared.ComplexNumberTypes {
	if o == nil {
		return nil
	}
	return o.ComplexNumberTypes
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetPathBigInt() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.PathBigInt
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetPathBigIntStr() types.BigInt {
	if o == nil {
		return big.NewInt(0)
	}
	return o.PathBigIntStr
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetPathDecimal() float64 {
	if o == nil {
		return 0.0
	}
	return o.PathDecimal
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetPathDecimalStr() string {
	if o == nil {
		return ""
	}
	return o.PathDecimalStr
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetQueryBigInt() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.QueryBigInt
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetQueryBigIntStr() types.BigInt {
	if o == nil {
		return big.NewInt(0)
	}
	return o.QueryBigIntStr
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetQueryDecimal() float64 {
	if o == nil {
		return 0.0
	}
	return o.QueryDecimal
}

func (o *RequestBodyPostComplexNumberTypesRequest) GetQueryDecimalStr() string {
	if o == nil {
		return ""
	}
	return o.QueryDecimalStr
}

// RequestBodyPostComplexNumberTypes200ApplicationJSON - OK
type RequestBodyPostComplexNumberTypes200ApplicationJSON struct {
	JSON shared.ComplexNumberTypes `json:"json"`
	URL  string                    `json:"url"`
}

func (o *RequestBodyPostComplexNumberTypes200ApplicationJSON) GetJSON() shared.ComplexNumberTypes {
	if o == nil {
		return shared.ComplexNumberTypes{}
	}
	return o.JSON
}

func (o *RequestBodyPostComplexNumberTypes200ApplicationJSON) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type RequestBodyPostComplexNumberTypesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	RequestBodyPostComplexNumberTypes200ApplicationJSONObject *RequestBodyPostComplexNumberTypes200ApplicationJSON
}

func (o *RequestBodyPostComplexNumberTypesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyPostComplexNumberTypesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyPostComplexNumberTypesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyPostComplexNumberTypesResponse) GetRequestBodyPostComplexNumberTypes200ApplicationJSONObject() *RequestBodyPostComplexNumberTypes200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.RequestBodyPostComplexNumberTypes200ApplicationJSONObject
}
