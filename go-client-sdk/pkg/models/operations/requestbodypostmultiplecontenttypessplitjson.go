// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type RequestBodyPostMultipleContentTypesSplitJSONRequestBody struct {
	Bool bool    `json:"bool"`
	Num  float64 `json:"num"`
	Str  string  `json:"str"`
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONRequestBody) GetBool() bool {
	if o == nil {
		return false
	}
	return o.Bool
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONRequestBody) GetNum() float64 {
	if o == nil {
		return 0.0
	}
	return o.Num
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONRequestBody) GetStr() string {
	if o == nil {
		return ""
	}
	return o.Str
}

// RequestBodyPostMultipleContentTypesSplitJSONRes - OK
type RequestBodyPostMultipleContentTypesSplitJSONRes struct {
	Form map[string]any `json:"form,omitempty"`
	JSON map[string]any `json:"json,omitempty"`
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONRes) GetForm() map[string]any {
	if o == nil {
		return nil
	}
	return o.Form
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONRes) GetJSON() map[string]any {
	if o == nil {
		return nil
	}
	return o.JSON
}

type RequestBodyPostMultipleContentTypesSplitJSONResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *RequestBodyPostMultipleContentTypesSplitJSONRes
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyPostMultipleContentTypesSplitJSONResponse) GetRes() *RequestBodyPostMultipleContentTypesSplitJSONRes {
	if o == nil {
		return nil
	}
	return o.Res
}
