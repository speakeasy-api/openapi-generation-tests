// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type RequestBodyPostMultipleContentTypesSplitParamFormRequestBody struct {
	Bool3 bool    `form:"name=bool3"`
	Num3  float64 `form:"name=num3"`
	Str3  string  `form:"name=str3"`
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRequestBody) GetBool3() bool {
	if o == nil {
		return false
	}
	return o.Bool3
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRequestBody) GetNum3() float64 {
	if o == nil {
		return 0.0
	}
	return o.Num3
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRequestBody) GetStr3() string {
	if o == nil {
		return ""
	}
	return o.Str3
}

type RequestBodyPostMultipleContentTypesSplitParamFormRequest struct {
	RequestBody RequestBodyPostMultipleContentTypesSplitParamFormRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
	ParamStr    string                                                       `queryParam:"style=form,explode=true,name=paramStr"`
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRequest) GetRequestBody() RequestBodyPostMultipleContentTypesSplitParamFormRequestBody {
	if o == nil {
		return RequestBodyPostMultipleContentTypesSplitParamFormRequestBody{}
	}
	return o.RequestBody
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRequest) GetParamStr() string {
	if o == nil {
		return ""
	}
	return o.ParamStr
}

// RequestBodyPostMultipleContentTypesSplitParamFormRes - OK
type RequestBodyPostMultipleContentTypesSplitParamFormRes struct {
	Args map[string]string `json:"args,omitempty"`
	Form map[string]any    `json:"form,omitempty"`
	JSON map[string]any    `json:"json,omitempty"`
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRes) GetArgs() map[string]string {
	if o == nil {
		return nil
	}
	return o.Args
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRes) GetForm() map[string]any {
	if o == nil {
		return nil
	}
	return o.Form
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormRes) GetJSON() map[string]any {
	if o == nil {
		return nil
	}
	return o.JSON
}

type RequestBodyPostMultipleContentTypesSplitParamFormResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *RequestBodyPostMultipleContentTypesSplitParamFormRes
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyPostMultipleContentTypesSplitParamFormResponse) GetRes() *RequestBodyPostMultipleContentTypesSplitParamFormRes {
	if o == nil {
		return nil
	}
	return o.Res
}
