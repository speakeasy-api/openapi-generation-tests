// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type RequestBodyPostMultipleContentTypesSplitParamJSONRequestBody struct {
	Bool bool    `json:"bool"`
	Num  float64 `json:"num"`
	Str  string  `json:"str"`
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRequestBody) GetBool() bool {
	if o == nil {
		return false
	}
	return o.Bool
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRequestBody) GetNum() float64 {
	if o == nil {
		return 0.0
	}
	return o.Num
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRequestBody) GetStr() string {
	if o == nil {
		return ""
	}
	return o.Str
}

type RequestBodyPostMultipleContentTypesSplitParamJSONRequest struct {
	RequestBody RequestBodyPostMultipleContentTypesSplitParamJSONRequestBody `request:"mediaType=application/json"`
	ParamStr    string                                                       `queryParam:"style=form,explode=true,name=paramStr"`
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRequest) GetRequestBody() RequestBodyPostMultipleContentTypesSplitParamJSONRequestBody {
	if o == nil {
		return RequestBodyPostMultipleContentTypesSplitParamJSONRequestBody{}
	}
	return o.RequestBody
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRequest) GetParamStr() string {
	if o == nil {
		return ""
	}
	return o.ParamStr
}

// RequestBodyPostMultipleContentTypesSplitParamJSONRes - OK
type RequestBodyPostMultipleContentTypesSplitParamJSONRes struct {
	Args map[string]string `json:"args,omitempty"`
	Form map[string]any    `json:"form,omitempty"`
	JSON map[string]any    `json:"json,omitempty"`
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRes) GetArgs() map[string]string {
	if o == nil {
		return nil
	}
	return o.Args
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRes) GetForm() map[string]any {
	if o == nil {
		return nil
	}
	return o.Form
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONRes) GetJSON() map[string]any {
	if o == nil {
		return nil
	}
	return o.JSON
}

type RequestBodyPostMultipleContentTypesSplitParamJSONResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *RequestBodyPostMultipleContentTypesSplitParamJSONRes
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyPostMultipleContentTypesSplitParamJSONResponse) GetRes() *RequestBodyPostMultipleContentTypesSplitParamJSONRes {
	if o == nil {
		return nil
	}
	return o.Res
}
