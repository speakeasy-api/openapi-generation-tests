// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DifferentFileName struct {
	Content  []byte `multipartForm:"content"`
	FileName string `multipartForm:"name=differentFileName"`
}

func (o *DifferentFileName) GetContent() []byte {
	if o == nil {
		return []byte{}
	}
	return o.Content
}

func (o *DifferentFileName) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

type RequestBodyPutMultipartDifferentFileNameRequestBody struct {
	DifferentFileName *DifferentFileName `multipartForm:"file"`
}

func (o *RequestBodyPutMultipartDifferentFileNameRequestBody) GetDifferentFileName() *DifferentFileName {
	if o == nil {
		return nil
	}
	return o.DifferentFileName
}

// RequestBodyPutMultipartDifferentFileNameRes - OK
type RequestBodyPutMultipartDifferentFileNameRes struct {
	Files map[string]string `json:"files"`
}

func (o *RequestBodyPutMultipartDifferentFileNameRes) GetFiles() map[string]string {
	if o == nil {
		return map[string]string{}
	}
	return o.Files
}

type RequestBodyPutMultipartDifferentFileNameResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *RequestBodyPutMultipartDifferentFileNameRes
}

func (o *RequestBodyPutMultipartDifferentFileNameResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyPutMultipartDifferentFileNameResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyPutMultipartDifferentFileNameResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyPutMultipartDifferentFileNameResponse) GetRes() *RequestBodyPutMultipartDifferentFileNameRes {
	if o == nil {
		return nil
	}
	return o.Res
}
