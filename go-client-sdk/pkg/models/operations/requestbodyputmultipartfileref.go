// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/v2/pkg/models/shared"
)

type RequestBodyPutMultipartFileRefRequestBody struct {
	File *shared.BinaryString `multipartForm:"file"`
}

func (o *RequestBodyPutMultipartFileRefRequestBody) GetFile() *shared.BinaryString {
	if o == nil {
		return nil
	}
	return o.File
}

// RequestBodyPutMultipartFileRefRes - OK
type RequestBodyPutMultipartFileRefRes struct {
	Files map[string]string `json:"files"`
}

func (o *RequestBodyPutMultipartFileRefRes) GetFiles() map[string]string {
	if o == nil {
		return map[string]string{}
	}
	return o.Files
}

type RequestBodyPutMultipartFileRefResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *RequestBodyPutMultipartFileRefRes
}

func (o *RequestBodyPutMultipartFileRefResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyPutMultipartFileRefResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyPutMultipartFileRefResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyPutMultipartFileRefResponse) GetRes() *RequestBodyPutMultipartFileRefRes {
	if o == nil {
		return nil
	}
	return o.Res
}
