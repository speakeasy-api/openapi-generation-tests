// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SampleFile struct {
	// This field accepts []byte data or io.Reader implementations, such as *os.File.
	Content  any    `multipartForm:"content"`
	FileName string `multipartForm:"name=fileName"`
}

func (o *SampleFile) GetContent() any {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *SampleFile) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

type RequestBodyPutMultipartOptionalRequestBodyRequestBody struct {
	SampleField *string     `multipartForm:"name=sampleField"`
	SampleFile  *SampleFile `multipartForm:"file,name=sampleFile"`
}

func (o *RequestBodyPutMultipartOptionalRequestBodyRequestBody) GetSampleField() *string {
	if o == nil {
		return nil
	}
	return o.SampleField
}

func (o *RequestBodyPutMultipartOptionalRequestBodyRequestBody) GetSampleFile() *SampleFile {
	if o == nil {
		return nil
	}
	return o.SampleFile
}

type RequestBodyPutMultipartOptionalRequestBodyForm struct {
	SampleField *string `json:"sampleField,omitempty"`
}

func (o *RequestBodyPutMultipartOptionalRequestBodyForm) GetSampleField() *string {
	if o == nil {
		return nil
	}
	return o.SampleField
}

// RequestBodyPutMultipartOptionalRequestBodyRes - OK
type RequestBodyPutMultipartOptionalRequestBodyRes struct {
	Files map[string]string                               `json:"files"`
	Form  *RequestBodyPutMultipartOptionalRequestBodyForm `json:"form,omitempty"`
}

func (o *RequestBodyPutMultipartOptionalRequestBodyRes) GetFiles() map[string]string {
	if o == nil {
		return map[string]string{}
	}
	return o.Files
}

func (o *RequestBodyPutMultipartOptionalRequestBodyRes) GetForm() *RequestBodyPutMultipartOptionalRequestBodyForm {
	if o == nil {
		return nil
	}
	return o.Form
}

type RequestBodyPutMultipartOptionalRequestBodyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Res *RequestBodyPutMultipartOptionalRequestBodyRes
}

func (o *RequestBodyPutMultipartOptionalRequestBodyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestBodyPutMultipartOptionalRequestBodyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestBodyPutMultipartOptionalRequestBodyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestBodyPutMultipartOptionalRequestBodyResponse) GetRes() *RequestBodyPutMultipartOptionalRequestBodyRes {
	if o == nil {
		return nil
	}
	return o.Res
}
