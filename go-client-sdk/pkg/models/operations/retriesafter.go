// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

var RetriesAfterServerList = []string{
	"http://localhost:35456",
}

type RetriesAfterRequest struct {
	RequestID     string `queryParam:"style=form,explode=true,name=request-id"`
	NumRetries    *int64 `queryParam:"style=form,explode=true,name=num-retries"`
	RetryAfterVal *int64 `queryParam:"style=form,explode=true,name=retry-after-val"`
}

func (o *RetriesAfterRequest) GetRequestID() string {
	if o == nil {
		return ""
	}
	return o.RequestID
}

func (o *RetriesAfterRequest) GetNumRetries() *int64 {
	if o == nil {
		return nil
	}
	return o.NumRetries
}

func (o *RetriesAfterRequest) GetRetryAfterVal() *int64 {
	if o == nil {
		return nil
	}
	return o.RetryAfterVal
}

// RetriesAfterRetries - OK
type RetriesAfterRetries struct {
	Retries int64 `json:"retries"`
}

func (o *RetriesAfterRetries) GetRetries() int64 {
	if o == nil {
		return 0
	}
	return o.Retries
}

type RetriesAfterResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	Retries *RetriesAfterRetries
}

func (o *RetriesAfterResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RetriesAfterResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RetriesAfterResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RetriesAfterResponse) GetRetries() *RetriesAfterRetries {
	if o == nil {
		return nil
	}
	return o.Retries
}
