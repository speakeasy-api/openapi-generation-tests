// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"fmt"
)

type ErrorType string

const (
	ErrorTypeNotFound ErrorType = "not_found"
	ErrorTypeInvalid  ErrorType = "invalid"
	ErrorTypeInternal ErrorType = "internal"
)

func (e ErrorType) ToPointer() *ErrorType {
	return &e
}

func (e *ErrorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "not_found":
		fallthrough
	case "invalid":
		fallthrough
	case "internal":
		*e = ErrorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorType: %v", v)
	}
}
