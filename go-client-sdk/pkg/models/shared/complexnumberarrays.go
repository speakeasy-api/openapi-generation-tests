// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/ericlagergren/decimal"
	"math/big"
	"openapi/v2/pkg/utils"
)

type ComplexNumberArrays struct {
	BigintArray     []*big.Int     `json:"bigintArray,omitempty"`
	BigintStrArray  []*big.Int     `bigint:"string" json:"bigintStrArray,omitempty"`
	DecimalArray    []*decimal.Big `decimal:"number" json:"decimalArray,omitempty"`
	DecimalStrArray []*decimal.Big `json:"decimalStrArray,omitempty"`
}

func (c ComplexNumberArrays) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ComplexNumberArrays) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ComplexNumberArrays) GetBigintArray() []*big.Int {
	if o == nil {
		return nil
	}
	return o.BigintArray
}

func (o *ComplexNumberArrays) GetBigintStrArray() []*big.Int {
	if o == nil {
		return nil
	}
	return o.BigintStrArray
}

func (o *ComplexNumberArrays) GetDecimalArray() []*decimal.Big {
	if o == nil {
		return nil
	}
	return o.DecimalArray
}

func (o *ComplexNumberArrays) GetDecimalStrArray() []*decimal.Big {
	if o == nil {
		return nil
	}
	return o.DecimalStrArray
}
