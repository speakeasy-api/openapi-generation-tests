// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/ericlagergren/decimal"
	"math/big"
	"openapi/v2/pkg/utils"
)

type ComplexNumberMaps struct {
	BigintMap     map[string]*big.Int     `json:"bigintMap,omitempty"`
	BigintStrMap  map[string]*big.Int     `bigint:"string" json:"bigintStrMap,omitempty"`
	DecimalMap    map[string]*decimal.Big `decimal:"number" json:"decimalMap,omitempty"`
	DecimalStrMap map[string]*decimal.Big `json:"decimalStrMap,omitempty"`
}

func (c ComplexNumberMaps) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ComplexNumberMaps) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ComplexNumberMaps) GetBigintMap() map[string]*big.Int {
	if o == nil {
		return nil
	}
	return o.BigintMap
}

func (o *ComplexNumberMaps) GetBigintStrMap() map[string]*big.Int {
	if o == nil {
		return nil
	}
	return o.BigintStrMap
}

func (o *ComplexNumberMaps) GetDecimalMap() map[string]*decimal.Big {
	if o == nil {
		return nil
	}
	return o.DecimalMap
}

func (o *ComplexNumberMaps) GetDecimalStrMap() map[string]*decimal.Big {
	if o == nil {
		return nil
	}
	return o.DecimalStrMap
}
