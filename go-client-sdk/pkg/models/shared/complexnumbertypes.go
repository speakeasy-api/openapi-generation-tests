// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"github.com/ericlagergren/decimal"
	"math/big"
	"openapi/v2/pkg/utils"
)

type ComplexNumberTypes struct {
	Bigint     *big.Int     `json:"bigint"`
	BigintStr  *big.Int     `bigint:"string" json:"bigintStr"`
	Decimal    *decimal.Big `decimal:"number" json:"decimal"`
	DecimalStr *decimal.Big `json:"decimalStr"`
}

func (c ComplexNumberTypes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ComplexNumberTypes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ComplexNumberTypes) GetBigint() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.Bigint
}

func (o *ComplexNumberTypes) GetBigintStr() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.BigintStr
}

func (o *ComplexNumberTypes) GetDecimal() *decimal.Big {
	if o == nil {
		return new(decimal.Big).SetFloat64(0.0)
	}
	return o.Decimal
}

func (o *ComplexNumberTypes) GetDecimalStr() *decimal.Big {
	if o == nil {
		return new(decimal.Big).SetFloat64(0.0)
	}
	return o.DecimalStr
}
