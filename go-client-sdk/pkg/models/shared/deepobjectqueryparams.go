// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// DeepObjectQueryParams - deepObject style query parameter serialization is undefined for arrays or nested objects by the specification:
//
//	https://github.com/OAI/OpenAPI-Specification/issues/1706
//
// This schema covers the intended implementation cases rather than the fully complex deepObject schema.
type DeepObjectQueryParams struct {
	Arr  []string          `queryParam:"name=arr"`
	Bool bool              `queryParam:"name=bool"`
	Int  int64             `queryParam:"name=int"`
	Map  map[string]string `queryParam:"name=map"`
	Num  float64           `queryParam:"name=num"`
	// A simple object that uses all our supported primitive types and enums and has optional properties.
	Obj SimpleObject `queryParam:"name=obj"`
	Str string       `queryParam:"name=str"`
}

func (o *DeepObjectQueryParams) GetArr() []string {
	if o == nil {
		return []string{}
	}
	return o.Arr
}

func (o *DeepObjectQueryParams) GetBool() bool {
	if o == nil {
		return false
	}
	return o.Bool
}

func (o *DeepObjectQueryParams) GetInt() int64 {
	if o == nil {
		return 0
	}
	return o.Int
}

func (o *DeepObjectQueryParams) GetMap() map[string]string {
	if o == nil {
		return map[string]string{}
	}
	return o.Map
}

func (o *DeepObjectQueryParams) GetNum() float64 {
	if o == nil {
		return 0.0
	}
	return o.Num
}

func (o *DeepObjectQueryParams) GetObj() SimpleObject {
	if o == nil {
		return SimpleObject{}
	}
	return o.Obj
}

func (o *DeepObjectQueryParams) GetStr() string {
	if o == nil {
		return ""
	}
	return o.Str
}
