// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeprecatedEnum
//
// Deprecated type: This enum is deprecated.
type DeprecatedEnum string

const (
	DeprecatedEnumA DeprecatedEnum = "a"
	DeprecatedEnumB DeprecatedEnum = "b"
	DeprecatedEnumC DeprecatedEnum = "c"
)

func (e DeprecatedEnum) ToPointer() *DeprecatedEnum {
	return &e
}
func (e *DeprecatedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "a":
		fallthrough
	case "b":
		fallthrough
	case "c":
		*e = DeprecatedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeprecatedEnum: %v", v)
	}
}

type DeprecatedFieldInObject struct {
	// Deprecated field: This enum is deprecated.
	DeprecatedEnum *DeprecatedEnum `json:"deprecatedEnum,omitempty"`
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible. Use NewField instead.
	DeprecatedField *string `json:"deprecatedField,omitempty"`
	NewField        *string `json:"newField,omitempty"`
}

func (o *DeprecatedFieldInObject) GetDeprecatedEnum() *DeprecatedEnum {
	if o == nil {
		return nil
	}
	return o.DeprecatedEnum
}

func (o *DeprecatedFieldInObject) GetDeprecatedField() *string {
	if o == nil {
		return nil
	}
	return o.DeprecatedField
}

func (o *DeprecatedFieldInObject) GetNewField() *string {
	if o == nil {
		return nil
	}
	return o.NewField
}
