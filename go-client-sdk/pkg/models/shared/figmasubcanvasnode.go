// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"openapi/v2/pkg/utils"
)

type FigmaSubcanvasNodeType string

const (
	FigmaSubcanvasNodeTypeFigmaBooleanOperationNode FigmaSubcanvasNodeType = "figma_BooleanOperationNode"
	FigmaSubcanvasNodeTypeFigmaComponentNode        FigmaSubcanvasNodeType = "figma_ComponentNode"
)

type FigmaSubcanvasNode struct {
	FigmaBooleanOperationNode *FigmaBooleanOperationNode
	FigmaComponentNode        *FigmaComponentNode

	Type FigmaSubcanvasNodeType
}

func CreateFigmaSubcanvasNodeFigmaBooleanOperationNode(figmaBooleanOperationNode FigmaBooleanOperationNode) FigmaSubcanvasNode {
	typ := FigmaSubcanvasNodeTypeFigmaBooleanOperationNode

	return FigmaSubcanvasNode{
		FigmaBooleanOperationNode: &figmaBooleanOperationNode,
		Type:                      typ,
	}
}

func CreateFigmaSubcanvasNodeFigmaComponentNode(figmaComponentNode FigmaComponentNode) FigmaSubcanvasNode {
	typ := FigmaSubcanvasNodeTypeFigmaComponentNode

	return FigmaSubcanvasNode{
		FigmaComponentNode: &figmaComponentNode,
		Type:               typ,
	}
}

func (u *FigmaSubcanvasNode) UnmarshalJSON(data []byte) error {

	var figmaBooleanOperationNode FigmaBooleanOperationNode = FigmaBooleanOperationNode{}
	if err := utils.UnmarshalJSON(data, &figmaBooleanOperationNode, "", true, true); err == nil {
		u.FigmaBooleanOperationNode = &figmaBooleanOperationNode
		u.Type = FigmaSubcanvasNodeTypeFigmaBooleanOperationNode
		return nil
	}

	var figmaComponentNode FigmaComponentNode = FigmaComponentNode{}
	if err := utils.UnmarshalJSON(data, &figmaComponentNode, "", true, true); err == nil {
		u.FigmaComponentNode = &figmaComponentNode
		u.Type = FigmaSubcanvasNodeTypeFigmaComponentNode
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for FigmaSubcanvasNode", string(data))
}

func (u FigmaSubcanvasNode) MarshalJSON() ([]byte, error) {
	if u.FigmaBooleanOperationNode != nil {
		return utils.MarshalJSON(u.FigmaBooleanOperationNode, "", true)
	}

	if u.FigmaComponentNode != nil {
		return utils.MarshalJSON(u.FigmaComponentNode, "", true)
	}

	return nil, errors.New("could not marshal union type FigmaSubcanvasNode: all fields are null")
}
