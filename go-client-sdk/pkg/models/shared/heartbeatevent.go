// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/v3/pkg/utils"
)

// HeartbeatEvent - Represents a single heartbeat event
type HeartbeatEvent struct {
	Data  string `json:"data"`
	event string `const:"heartbeat" json:"event"`
	Retry *int64 `json:"retry,omitempty"`
}

func (h HeartbeatEvent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HeartbeatEvent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *HeartbeatEvent) GetData() string {
	if o == nil {
		return ""
	}
	return o.Data
}

func (o *HeartbeatEvent) GetEvent() string {
	return "heartbeat"
}

func (o *HeartbeatEvent) GetRetry() *int64 {
	if o == nil {
		return nil
	}
	return o.Retry
}
