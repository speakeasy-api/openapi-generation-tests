// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/utils"
	"time"
)

type ObjWithObjAdditionalProperties struct {
	AdditionalProperties  []int64                 `json:"AdditionalProperties"`
	AdditionalPropertiesT map[string]SimpleObject `additionalProperties:"true" json:"-"`
	Datetime              time.Time               `json:"datetime"`
}

func (o ObjWithObjAdditionalProperties) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *ObjWithObjAdditionalProperties) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ObjWithObjAdditionalProperties) GetAdditionalProperties() []int64 {
	if o == nil {
		return []int64{}
	}
	return o.AdditionalProperties
}

func (o *ObjWithObjAdditionalProperties) GetAdditionalPropertiesT() map[string]SimpleObject {
	if o == nil {
		return nil
	}
	return o.AdditionalPropertiesT
}

func (o *ObjWithObjAdditionalProperties) GetDatetime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Datetime
}
