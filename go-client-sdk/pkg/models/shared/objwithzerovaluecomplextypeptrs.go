// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/ericlagergren/decimal"
	"math/big"
	"openapi/v3/pkg/types"
	"openapi/v3/pkg/utils"
	"time"
)

type ObjWithZeroValueComplexTypePtrs struct {
	Bigint    *big.Int `json:"bigint,omitempty"`
	BigintStr *big.Int `bigint:"string" json:"bigintStr,omitempty"`
	// A date property.
	Date *types.Date `json:"date,omitempty"`
	// A date-time property.
	DateTime *time.Time   `json:"dateTime,omitempty"`
	Decimal  *decimal.Big `decimal:"number" json:"decimal,omitempty"`
}

func (o ObjWithZeroValueComplexTypePtrs) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *ObjWithZeroValueComplexTypePtrs) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ObjWithZeroValueComplexTypePtrs) GetBigint() *big.Int {
	if o == nil {
		return nil
	}
	return o.Bigint
}

func (o *ObjWithZeroValueComplexTypePtrs) GetBigintStr() *big.Int {
	if o == nil {
		return nil
	}
	return o.BigintStr
}

func (o *ObjWithZeroValueComplexTypePtrs) GetDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.Date
}

func (o *ObjWithZeroValueComplexTypePtrs) GetDateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateTime
}

func (o *ObjWithZeroValueComplexTypePtrs) GetDecimal() *decimal.Big {
	if o == nil {
		return nil
	}
	return o.Decimal
}
