// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"openapi/v2/pkg/utils"
)

type OneOfPrimitivesType string

const (
	OneOfPrimitivesTypeBoolean OneOfPrimitivesType = "boolean"
	OneOfPrimitivesTypeStr     OneOfPrimitivesType = "str"
)

type OneOfPrimitives struct {
	Boolean *bool
	Str     *string

	Type OneOfPrimitivesType
}

func CreateOneOfPrimitivesBoolean(boolean bool) OneOfPrimitives {
	typ := OneOfPrimitivesTypeBoolean

	return OneOfPrimitives{
		Boolean: &boolean,
		Type:    typ,
	}
}

func CreateOneOfPrimitivesStr(str string) OneOfPrimitives {
	typ := OneOfPrimitivesTypeStr

	return OneOfPrimitives{
		Str:  &str,
		Type: typ,
	}
}

func (u *OneOfPrimitives) UnmarshalJSON(data []byte) error {

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, true); err == nil {
		u.Boolean = &boolean
		u.Type = OneOfPrimitivesTypeBoolean
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = OneOfPrimitivesTypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for OneOfPrimitives", string(data))
}

func (u OneOfPrimitives) MarshalJSON() ([]byte, error) {
	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	return nil, errors.New("could not marshal union type OneOfPrimitives: all fields are null")
}
