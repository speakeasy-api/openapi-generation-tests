// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"openapi/v2/pkg/utils"
)

// RichCompletionEvent - Represents a single event in a completion stream
type RichCompletionEvent struct {
	Data  RichCompletionEventData `json:"data"`
	event string                  `const:"completion" json:"event"`
	ID    string                  `json:"id"`
}

func (r RichCompletionEvent) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RichCompletionEvent) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RichCompletionEvent) GetData() RichCompletionEventData {
	if o == nil {
		return RichCompletionEventData{}
	}
	return o.Data
}

func (o *RichCompletionEvent) GetEvent() string {
	return "completion"
}

func (o *RichCompletionEvent) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}
