// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"openapi/v2/pkg/utils"
)

type TaggedError2Error struct {
	Message string `json:"message"`
}

func (o *TaggedError2Error) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

type TaggedError2 struct {
	Error TaggedError2Error `json:"error"`
	tag   string            `const:"tag2" json:"tag"`
}

func (t TaggedError2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaggedError2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TaggedError2) GetError() TaggedError2Error {
	if o == nil {
		return TaggedError2Error{}
	}
	return o.Error
}

func (o *TaggedError2) GetTag() string {
	return "tag2"
}
