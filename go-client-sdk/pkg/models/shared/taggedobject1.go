// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Tag string

const (
	TagTag1 Tag = "tag1"
)

func (e Tag) ToPointer() *Tag {
	return &e
}

func (e *Tag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tag1":
		*e = Tag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Tag: %v", v)
	}
}

type TaggedObject1 struct {
	ImageURL string `json:"imageURL"`
	Tag      Tag    `json:"tag"`
}

func (o *TaggedObject1) GetImageURL() string {
	if o == nil {
		return ""
	}
	return o.ImageURL
}

func (o *TaggedObject1) GetTag() Tag {
	if o == nil {
		return Tag("")
	}
	return o.Tag
}
