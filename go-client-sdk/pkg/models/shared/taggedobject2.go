// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaggedObject2Tag string

const (
	TaggedObject2TagTag2 TaggedObject2Tag = "tag2"
)

func (e TaggedObject2Tag) ToPointer() *TaggedObject2Tag {
	return &e
}
func (e *TaggedObject2Tag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tag2":
		*e = TaggedObject2Tag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaggedObject2Tag: %v", v)
	}
}

type TaggedObject2 struct {
	ProfileID string           `json:"profileId"`
	Tag       TaggedObject2Tag `json:"tag"`
}

func (o *TaggedObject2) GetProfileID() string {
	if o == nil {
		return ""
	}
	return o.ProfileID
}

func (o *TaggedObject2) GetTag() TaggedObject2Tag {
	if o == nil {
		return TaggedObject2Tag("")
	}
	return o.Tag
}
