// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"openapi/v2/pkg/utils"
)

type WeaklyTypedOneOfReadWriteObjectType string

const (
	WeaklyTypedOneOfReadWriteObjectTypeSimpleObject    WeaklyTypedOneOfReadWriteObjectType = "simpleObject"
	WeaklyTypedOneOfReadWriteObjectTypeReadWriteObject WeaklyTypedOneOfReadWriteObjectType = "readWriteObject"
)

type WeaklyTypedOneOfReadWriteObject struct {
	SimpleObject    *SimpleObject    `queryParam:"inline"`
	ReadWriteObject *ReadWriteObject `queryParam:"inline"`

	Type WeaklyTypedOneOfReadWriteObjectType
}

func CreateWeaklyTypedOneOfReadWriteObjectSimpleObject(simpleObject SimpleObject) WeaklyTypedOneOfReadWriteObject {
	typ := WeaklyTypedOneOfReadWriteObjectTypeSimpleObject

	return WeaklyTypedOneOfReadWriteObject{
		SimpleObject: &simpleObject,
		Type:         typ,
	}
}

func CreateWeaklyTypedOneOfReadWriteObjectReadWriteObject(readWriteObject ReadWriteObject) WeaklyTypedOneOfReadWriteObject {
	typ := WeaklyTypedOneOfReadWriteObjectTypeReadWriteObject

	return WeaklyTypedOneOfReadWriteObject{
		ReadWriteObject: &readWriteObject,
		Type:            typ,
	}
}

func (u *WeaklyTypedOneOfReadWriteObject) UnmarshalJSON(data []byte) error {

	var readWriteObject ReadWriteObject = ReadWriteObject{}
	if err := utils.UnmarshalJSON(data, &readWriteObject, "", true, true); err == nil {
		u.ReadWriteObject = &readWriteObject
		u.Type = WeaklyTypedOneOfReadWriteObjectTypeReadWriteObject
		return nil
	}

	var simpleObject SimpleObject = SimpleObject{}
	if err := utils.UnmarshalJSON(data, &simpleObject, "", true, true); err == nil {
		u.SimpleObject = &simpleObject
		u.Type = WeaklyTypedOneOfReadWriteObjectTypeSimpleObject
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for WeaklyTypedOneOfReadWriteObject", string(data))
}

func (u WeaklyTypedOneOfReadWriteObject) MarshalJSON() ([]byte, error) {
	if u.SimpleObject != nil {
		return utils.MarshalJSON(u.SimpleObject, "", true)
	}

	if u.ReadWriteObject != nil {
		return utils.MarshalJSON(u.ReadWriteObject, "", true)
	}

	return nil, errors.New("could not marshal union type WeaklyTypedOneOfReadWriteObject: all fields are null")
}
