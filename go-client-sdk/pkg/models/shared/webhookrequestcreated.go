// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WebhookRequestCreatedType string

const (
	WebhookRequestCreatedTypeWebhookCreated WebhookRequestCreatedType = "webhook.created"
)

func (e WebhookRequestCreatedType) ToPointer() *WebhookRequestCreatedType {
	return &e
}
func (e *WebhookRequestCreatedType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "webhook.created":
		*e = WebhookRequestCreatedType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookRequestCreatedType: %v", v)
	}
}

type WebhookRequestCreated struct {
	// A simple object that uses all our supported primitive types and enums and has optional properties.
	Data SimpleObject              `json:"data"`
	Type WebhookRequestCreatedType `json:"type"`
}

func (o *WebhookRequestCreated) GetData() SimpleObject {
	if o == nil {
		return SimpleObject{}
	}
	return o.Data
}

func (o *WebhookRequestCreated) GetType() WebhookRequestCreatedType {
	if o == nil {
		return WebhookRequestCreatedType("")
	}
	return o.Type
}
