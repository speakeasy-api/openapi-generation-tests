// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package tests

import (
	"context"
	"math/rand"
	"openapi"
	"openapi/models/components"
	"openapi/models/operations"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestClientCredentials_HookSuccessfullyAuthenticates(t *testing.T) {
	recordTest("hooks-client-credentials-success")

	s := openapi.New(openapi.WithSecurity(components.Security{
		ClientID:     "speakeasy-sdks",
		ClientSecret: "supersecret-" + randSeq(10),
	}))
	res, err := s.AuthenticatedRequest(context.Background(), &operations.AuthenticatedRequestRequestBody{})
	require.NoError(t, err)

	assert.NotNil(t, res)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)

	res, err = s.AuthenticatedRequest(context.Background(), &operations.AuthenticatedRequestRequestBody{})
	require.NoError(t, err)

	assert.NotNil(t, res)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)
}

var letters = []rune("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ")

func randSeq(n int) string {
	b := make([]rune, n)
	for i := range b {
		b[i] = letters[rand.Intn(len(letters))]
	}
	return string(b)
}
