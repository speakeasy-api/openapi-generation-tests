// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package tests

import (
	"context"
	"net/http"
	"testing"

	"openapi/v2/pkg/models/operations"

	sdk "openapi/v2"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestNoAuth(t *testing.T) {
	recordTest("auth-no-auth")

	s := sdk.New()
	res, err := s.Auth.NoAuth(context.Background())
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.StatusCode)
}

func TestBasicAuth(t *testing.T) {
	recordTest("auth-basic-auth")

	s := sdk.New()
	user := "testUser"
	passwd := "testPass"
	opSecurity := operations.BasicAuthSecurity{
		Username: user,
		Password: passwd,
	}
	res, err := s.Auth.BasicAuth(context.Background(), opSecurity, passwd, user)
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.StatusCode)
	assert.Equal(t, true, res.User.Authenticated)
}

func TestAPIKeyAuthGlobal(t *testing.T) {
	recordTest("auth-api-key-auth-global")

	s := sdk.New(sdk.WithSecurity("Bearer testToken"))
	res, err := s.Auth.APIKeyAuthHoisted(context.Background())
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.StatusCode)
	assert.True(t, res.Token.Authenticated)
	assert.Equal(t, "testToken", res.Token.Token)
}

func TestAPIKeyAuthOperation(t *testing.T) {
	recordTest("auth-api-key-auth-operation")

	s := sdk.New()

	res, err := s.Auth.APIKeyOrBearerAuth(context.Background(), operations.APIKeyOrBearerAuthSecurity{
		APIKeyAuth: sdk.String("Bearer testToken"),
	})
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.StatusCode)
	t.Logf(res.Token.Token)
	assert.True(t, res.Token.Authenticated)
	assert.Equal(t, "testToken", res.Token.Token)
}
