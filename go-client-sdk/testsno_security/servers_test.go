// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package tests

import (
	"context"
	"net/http"
	"testing"

	sdk "openapi/v2"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestSelectGlobalServerValid(t *testing.T) {
	recordTest("servers-select-global-server-valid")

	url := sdk.ServerList[0]
	assert.Equal(t, "http://localhost:35123", url)
	s := sdk.New(sdk.WithServerURL(url))

	res, err := s.Servers.SelectGlobalServer(context.Background())
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.StatusCode)
}

func TestSelectGlobalServerBroken(t *testing.T) {
	recordTest("servers-select-global-server-broken")

	url := sdk.ServerList[1]
	assert.Equal(t, "http://broken", url)
	s := sdk.New(sdk.WithServerURL(url))

	res, err := s.Servers.SelectGlobalServer(context.Background())
	assert.Error(t, err)
	assert.Nil(t, res)
}

func TestSelectGlobalServerByIdDefault(t *testing.T) {
	recordTest("servers-select-global-server-by-id-default")

	s := sdk.New()

	res, err := s.Servers.SelectGlobalServer(context.Background())
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.StatusCode)
}

func TestSelectGlobalServerByIdValid(t *testing.T) {
	recordTest("servers-select-global-server-by-id-valid")

	s := sdk.New(sdk.WithServerIndex(0))

	res, err := s.Servers.SelectGlobalServer(context.Background())
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.StatusCode)
}

func TestSelectGlobalServerByIdInvalid(t *testing.T) {
	recordTest("servers-select-global-server-by-id-invalid")

	defer func() {
		if r := recover(); r == nil {
			t.Error("Panic expected!", r)
		} else {
			assert.Equal(t, "server index 2 out of range", r.(error).Error())
		}
	}()

	sdk.New(sdk.WithServerIndex(2))
}

func TestSelectGlobalServerByIdBroken(t *testing.T) {
	recordTest("servers-select-global-server-by-id-broken")

	s := sdk.New(sdk.WithServerIndex(1))

	res, err := s.Servers.SelectGlobalServer(context.Background())
	assert.Error(t, err)
	assert.Nil(t, res)
}
