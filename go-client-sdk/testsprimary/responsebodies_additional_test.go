// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package tests

import (
	"context"
	"io"
	"net/http"
	"testing"

	"openapi/pkg/models/operations"

	sdk "openapi"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestResponseBodyBytesGet(t *testing.T) {
	recordTest("response-bodies-bytes-get")

	s := sdk.New()

	res, err := s.ResponseBodies.ResponseBodyBytesGet(context.Background())
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.HTTPMeta.Response.StatusCode)
	assert.NotNil(t, res.Bytes)

	defer res.Bytes.Close()
	bs, err := io.ReadAll(res.Bytes)
	require.NoError(t, err)
	assert.Len(t, bs, 100)
}

func TestResponseBodyNameOverride(t *testing.T) {
	// We only need this on one language as this is a generator feature
	s := sdk.New()
	res, err := s.Generation.NameOverride(context.Background(), operations.EnumNameOverrideValue1, "test-query-param")
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, http.StatusOK, res.HTTPMeta.Response.StatusCode)
	assert.NotNil(t, res.OverriddenResponse)
	assert.Nil(t, res.OverriddenResponse.OverriddenAllOf)
	assert.Nil(t, res.OverriddenResponse.DeepOverriddenAllOf)
	assert.Nil(t, res.OverriddenResponse.OverriddenNormal)
	assert.Nil(t, res.OverriddenResponse.JSON)
}
