// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package tests

import (
	"context"
	"testing"

	"openapi/pkg/models/operations"
	"openapi/pkg/models/shared"

	sdk "openapi"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestHoistedNoAuthRetain(t *testing.T) {
	recordTest("auth-hoisted-no-auth-retained")

	s := sdk.New()
	err := s.Auth.NoAuth(context.Background())
	require.NoError(t, err)
}

func TestHoistedBasicAuth(t *testing.T) {
	recordTest("auth-hoisted-basic-auth")

	user := "testUser"
	passwd := "testPass"

	s := sdk.New(sdk.WithSecurity(shared.Security{
		Username: &user,
		Password: &passwd,
	}))
	res, err := s.Auth.BasicAuth(context.Background(), passwd, user)
	require.NoError(t, err)
	require.NotNil(t, res)
	assert.Equal(t, true, res.Authenticated)
}

func TestMultipleMixedOptionsAuth(t *testing.T) {
	recordTest("auth-hoisted-operation-auth-retained")

	s := sdk.New()

	err := s.AuthNew.MultipleMixedOptionsAuth(context.Background(), shared.AuthServiceRequestBody{
		BasicAuth: &shared.BasicAuth{
			Username: "testUser",
			Password: "testPass",
		},
	}, operations.MultipleMixedOptionsAuthSecurity{
		BasicAuth: &shared.SchemeBasicAuth{
			Username: "testUser",
			Password: "testPass",
		},
	})
	require.NoError(t, err)
}
