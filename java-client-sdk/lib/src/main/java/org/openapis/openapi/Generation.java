/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.LocalDate;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

/**
 * Endpoints for purely testing valid generation behavior.
 */
public class Generation {
	
	private SDKConfiguration sdkConfiguration;

	public Generation(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    public org.openapis.openapi.models.operations.AnchorTypesGetResponse anchorTypesGet() throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/anchorTypes");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnchorTypesGetResponse res = new org.openapis.openapi.models.operations.AnchorTypesGetResponse(contentType, httpRes.statusCode()) {{
            typeFromAnchor = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.TypeFromAnchor out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.TypeFromAnchor.class);
                res.typeFromAnchor = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.CircularReferenceGetResponse circularReferenceGet() throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/circularReference");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CircularReferenceGetResponse res = new org.openapis.openapi.models.operations.CircularReferenceGetResponse(contentType, httpRes.statusCode()) {{
            validCircularReferenceObject = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ValidCircularReferenceObject out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ValidCircularReferenceObject.class);
                res.validCircularReferenceObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.DeprecatedFieldInSchemaPostResponse deprecatedFieldInSchemaPost(org.openapis.openapi.models.shared.DeprecatedFieldInObject request) throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/deprecatedFieldInSchema");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "*/*");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedFieldInSchemaPostResponse res = new org.openapis.openapi.models.operations.DeprecatedFieldInSchemaPostResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    public org.openapis.openapi.models.operations.DeprecatedObjectInSchemaGetResponse deprecatedObjectInSchemaGet() throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/deprecatedObjectInSchema");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedObjectInSchemaGetResponse res = new org.openapis.openapi.models.operations.DeprecatedObjectInSchemaGetResponse(contentType, httpRes.statusCode()) {{
            deprecatedObjectInSchemaGet200ApplicationJSONObject = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DeprecatedObjectInSchemaGet200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DeprecatedObjectInSchemaGet200ApplicationJSON.class);
                res.deprecatedObjectInSchemaGet200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * @return the response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public org.openapis.openapi.models.operations.DeprecatedOperationNoCommentsGetResponse deprecatedOperationNoCommentsGet() throws Exception {
        return this.deprecatedOperationNoCommentsGet(null);
    }

    /**
     * @param deprecatedParameter
     * @return the response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public org.openapis.openapi.models.operations.DeprecatedOperationNoCommentsGetResponse deprecatedOperationNoCommentsGet(String deprecatedParameter) throws Exception {
        org.openapis.openapi.models.operations.DeprecatedOperationNoCommentsGetRequest request = new org.openapis.openapi.models.operations.DeprecatedOperationNoCommentsGetRequest();
        request.deprecatedParameter=deprecatedParameter;
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/deprecatedOperationNoComments");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "*/*");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DeprecatedOperationNoCommentsGetRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedOperationNoCommentsGetResponse res = new org.openapis.openapi.models.operations.DeprecatedOperationNoCommentsGetResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    /**
     * This is an endpoint setup to test deprecation with comments
     * @return the response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This operation is deprecated. Use simplePathParameterObjects instead.
     */
    @Deprecated
    public org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetResponse deprecatedOperationWithCommentsGet() throws Exception {
        return this.deprecatedOperationWithCommentsGet(null, null);
    }

    /**
     * This is an endpoint setup to test deprecation with comments
     * @param deprecatedParameter This is a string parameter
     * @return the response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This operation is deprecated. Use simplePathParameterObjects instead.
     */
    @Deprecated
    public org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetResponse deprecatedOperationWithCommentsGet(String deprecatedParameter) throws Exception {
        return this.deprecatedOperationWithCommentsGet(deprecatedParameter, null);
    }

    /**
     * This is an endpoint setup to test deprecation with comments
     * @param deprecatedParameter This is a string parameter
     * @param newParameter This is a string parameter
     * @return the response from the API call
     * @throws Exception if the API call fails
     * @deprecated method: This operation is deprecated. Use simplePathParameterObjects instead.
     */
    @Deprecated
    public org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetResponse deprecatedOperationWithCommentsGet(String deprecatedParameter, String newParameter) throws Exception {
        org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetRequest request = new org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetRequest();
        request.deprecatedParameter=deprecatedParameter;
        request.newParameter=newParameter;
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/deprecatedOperationWithComments");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "*/*");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetResponse res = new org.openapis.openapi.models.operations.DeprecatedOperationWithCommentsGetResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    public org.openapis.openapi.models.operations.EmptyObjectGetResponse emptyObjectGet(org.openapis.openapi.models.shared.EmptyObjectParam emptyObject) throws Exception {
        org.openapis.openapi.models.operations.EmptyObjectGetRequest request = new org.openapis.openapi.models.operations.EmptyObjectGetRequest(emptyObject);
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EmptyObjectGetRequest.class, baseUrl, "/anything/{emptyObject}", request, this.sdkConfiguration.globals);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "*/*");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EmptyObjectGetResponse res = new org.openapis.openapi.models.operations.EmptyObjectGetResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    public org.openapis.openapi.models.operations.EmptyResponseObjectWithCommentGetResponse emptyResponseObjectWithCommentGet() throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/emptyResponseObjectWithComment");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/octet-stream");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EmptyResponseObjectWithCommentGetResponse res = new org.openapis.openapi.models.operations.EmptyResponseObjectWithCommentGetResponse(contentType, httpRes.statusCode()) {{
            body = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/octet-stream")) {
                byte[] out = httpRes.body();
                res.body = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.GetGlobalNameOverrideResponse globalNameOverridden() throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/globalNameOverride");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetGlobalNameOverrideResponse res = new org.openapis.openapi.models.operations.GetGlobalNameOverrideResponse(contentType, httpRes.statusCode()) {{
            getGlobalNameOverride200ApplicationJSONObject = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetGlobalNameOverride200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetGlobalNameOverride200ApplicationJSON.class);
                res.getGlobalNameOverride200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.IgnoredGenerationGetResponse ignoredGenerationGet() throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/ignoredGeneration");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IgnoredGenerationGetResponse res = new org.openapis.openapi.models.operations.IgnoredGenerationGetResponse(contentType, httpRes.statusCode()) {{
            ignoredGenerationGet200ApplicationJSONObject = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.IgnoredGenerationGet200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.IgnoredGenerationGet200ApplicationJSON.class);
                res.ignoredGenerationGet200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.IgnoresPostResponse ignoresPost(org.openapis.openapi.models.operations.IgnoresPostApplicationJSON requestBody) throws Exception {
        return this.ignoresPost(requestBody, null);
    }

    public org.openapis.openapi.models.operations.IgnoresPostResponse ignoresPost(org.openapis.openapi.models.operations.IgnoresPostApplicationJSON requestBody, String testParam) throws Exception {
        org.openapis.openapi.models.operations.IgnoresPostRequest request = new org.openapis.openapi.models.operations.IgnoresPostRequest(requestBody);
        request.testParam=testParam;
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/ignores");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IgnoresPostRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IgnoresPostResponse res = new org.openapis.openapi.models.operations.IgnoresPostResponse(contentType, httpRes.statusCode()) {{
            httpBinSimpleJsonObject = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.HttpBinSimpleJsonObject out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.HttpBinSimpleJsonObject.class);
                res.httpBinSimpleJsonObject = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.NameOverrideGetResponse nameOverride(org.openapis.openapi.models.operations.NameOverrideGetEnumNameOverride testEnumQueryParam, String testQueryParam) throws Exception {
        org.openapis.openapi.models.operations.NameOverrideGetRequest request = new org.openapis.openapi.models.operations.NameOverrideGetRequest(testEnumQueryParam, testQueryParam);
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/nameOverride");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.NameOverrideGetRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.NameOverrideGetResponse res = new org.openapis.openapi.models.operations.NameOverrideGetResponse(contentType, httpRes.statusCode()) {{
            overriddenResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.OverriddenResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.OverriddenResponse.class);
                res.overriddenResponse = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet() throws Exception {
        return this.typedParameterGenerationGet(null, null, null, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        return this.typedParameterGenerationGet(null, null, null, obj);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Double decimal) throws Exception {
        return this.typedParameterGenerationGet(null, null, decimal, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Double decimal, org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        return this.typedParameterGenerationGet(null, null, decimal, obj);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(LocalDate date) throws Exception {
        return this.typedParameterGenerationGet(null, date, null, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(LocalDate date, org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        return this.typedParameterGenerationGet(null, date, null, obj);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(LocalDate date, Double decimal) throws Exception {
        return this.typedParameterGenerationGet(null, date, decimal, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(LocalDate date, Double decimal, org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        return this.typedParameterGenerationGet(null, date, decimal, obj);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint) throws Exception {
        return this.typedParameterGenerationGet(bigint, null, null, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint, org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        return this.typedParameterGenerationGet(bigint, null, null, obj);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint, Double decimal) throws Exception {
        return this.typedParameterGenerationGet(bigint, null, decimal, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint, Double decimal, org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        return this.typedParameterGenerationGet(bigint, null, decimal, obj);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint, LocalDate date) throws Exception {
        return this.typedParameterGenerationGet(bigint, date, null, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint, LocalDate date, org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        return this.typedParameterGenerationGet(bigint, date, null, obj);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint, LocalDate date, Double decimal) throws Exception {
        return this.typedParameterGenerationGet(bigint, date, decimal, null);
    }

    public org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse typedParameterGenerationGet(Long bigint, LocalDate date, Double decimal, org.openapis.openapi.models.operations.TypedParameterGenerationGetObj obj) throws Exception {
        org.openapis.openapi.models.operations.TypedParameterGenerationGetRequest request = new org.openapis.openapi.models.operations.TypedParameterGenerationGetRequest();
        request.bigint=bigint;
        request.date=date;
        request.decimal=decimal;
        request.obj=obj;
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/typedParameterGeneration");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "*/*");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TypedParameterGenerationGetRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse res = new org.openapis.openapi.models.operations.TypedParameterGenerationGetResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    /**
     * An operation used for testing usage examples
     * An operation used for testing usage examples that includes a large array of parameters and input types to ensure that all are handled correctly
     * https://docs.example.com - Usage example docs
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.UsageExamplePostResponse usageExamplePost(org.openapis.openapi.models.operations.UsageExamplePostRequest request, org.openapis.openapi.models.operations.UsageExamplePostSecurity security) throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(this.sdkConfiguration.serverUrl, this.sdkConfiguration.getServerVariableDefaults());
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/anything/usageExample");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.UsageExamplePostRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this.sdkConfiguration.defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.UsageExamplePostResponse res = new org.openapis.openapi.models.operations.UsageExamplePostResponse(contentType, httpRes.statusCode()) {{
            usageExamplePost200ApplicationJSONObject = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.UsageExamplePost200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.UsageExamplePost200ApplicationJSON.class);
                res.usageExamplePost200ApplicationJSONObject = out;
            }
        }

        return res;
    }
}