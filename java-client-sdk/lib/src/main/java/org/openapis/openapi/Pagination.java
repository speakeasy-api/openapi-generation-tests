/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

/**
 * Endpoints for testing the pagination extension
 */
public class Pagination {
	
    /**
	 * PAGINATION_CURSOR_BODY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] PAGINATION_CURSOR_BODY_SERVERS = {
        "http://localhost:35456",
    };
	
    /**
	 * PAGINATION_CURSOR_PARAMS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] PAGINATION_CURSOR_PARAMS_SERVERS = {
        "http://localhost:35456",
    };
	
    /**
	 * PAGINATION_LIMIT_OFFSET_OFFSET_BODY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] PAGINATION_LIMIT_OFFSET_OFFSET_BODY_SERVERS = {
        "http://localhost:35456",
    };
	
    /**
	 * PAGINATION_LIMIT_OFFSET_OFFSET_PARAMS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] PAGINATION_LIMIT_OFFSET_OFFSET_PARAMS_SERVERS = {
        "http://localhost:35456",
    };
	
    /**
	 * PAGINATION_LIMIT_OFFSET_PAGE_BODY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] PAGINATION_LIMIT_OFFSET_PAGE_BODY_SERVERS = {
        "http://localhost:35456",
    };
	
    /**
	 * PAGINATION_LIMIT_OFFSET_PAGE_PARAMS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] PAGINATION_LIMIT_OFFSET_PAGE_PARAMS_SERVERS = {
        "http://localhost:35456",
    };
	
	private SDKConfiguration sdkConfiguration;

	public Pagination(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    public org.openapis.openapi.models.operations.PaginationCursorBodyResponse paginationCursorBody(org.openapis.openapi.models.operations.PaginationCursorBodyRequestBody request) throws Exception {
        return this.paginationCursorBody(request, null);
    }

    public org.openapis.openapi.models.operations.PaginationCursorBodyResponse paginationCursorBody(org.openapis.openapi.models.operations.PaginationCursorBodyRequestBody request, String serverURL) throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(PAGINATION_CURSOR_BODY_SERVERS[0], new java.util.HashMap<String, String>());
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pagination/cursor");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaginationCursorBodyResponse res = new org.openapis.openapi.models.operations.PaginationCursorBodyResponse(contentType, httpRes.statusCode()) {{
            res = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PaginationCursorBodyRes out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PaginationCursorBodyRes.class);
                res.res = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.PaginationCursorParamsResponse paginationCursorParams(Long cursor) throws Exception {
        return this.paginationCursorParams(cursor, null);
    }

    public org.openapis.openapi.models.operations.PaginationCursorParamsResponse paginationCursorParams(Long cursor, String serverURL) throws Exception {
        org.openapis.openapi.models.operations.PaginationCursorParamsRequest request = new org.openapis.openapi.models.operations.PaginationCursorParamsRequest(cursor);
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(PAGINATION_CURSOR_PARAMS_SERVERS[0], new java.util.HashMap<String, String>());
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pagination/cursor");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaginationCursorParamsRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaginationCursorParamsResponse res = new org.openapis.openapi.models.operations.PaginationCursorParamsResponse(contentType, httpRes.statusCode()) {{
            res = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PaginationCursorParamsRes out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PaginationCursorParamsRes.class);
                res.res = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetBodyResponse paginationLimitOffsetOffsetBody(org.openapis.openapi.models.shared.LimitOffsetConfig request) throws Exception {
        return this.paginationLimitOffsetOffsetBody(request, null);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetBodyResponse paginationLimitOffsetOffsetBody(org.openapis.openapi.models.shared.LimitOffsetConfig request, String serverURL) throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(PAGINATION_LIMIT_OFFSET_OFFSET_BODY_SERVERS[0], new java.util.HashMap<String, String>());
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pagination/limitoffset/offset");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetBodyResponse res = new org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetBodyResponse(contentType, httpRes.statusCode()) {{
            res = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetBodyRes out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetBodyRes.class);
                res.res = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse paginationLimitOffsetOffsetParams() throws Exception {
        return this.paginationLimitOffsetOffsetParams(null, null, null);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse paginationLimitOffsetOffsetParams(String serverURL) throws Exception {
        return this.paginationLimitOffsetOffsetParams(null, null, serverURL);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse paginationLimitOffsetOffsetParams(Long limit) throws Exception {
        return this.paginationLimitOffsetOffsetParams(limit, null, null);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse paginationLimitOffsetOffsetParams(Long limit, String serverURL) throws Exception {
        return this.paginationLimitOffsetOffsetParams(limit, null, serverURL);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse paginationLimitOffsetOffsetParams(Long limit, Long offset) throws Exception {
        return this.paginationLimitOffsetOffsetParams(limit, offset, null);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse paginationLimitOffsetOffsetParams(Long limit, Long offset, String serverURL) throws Exception {
        org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsRequest request = new org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsRequest();
        request.limit=limit;
        request.offset=offset;
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(PAGINATION_LIMIT_OFFSET_OFFSET_PARAMS_SERVERS[0], new java.util.HashMap<String, String>());
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pagination/limitoffset/offset");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse res = new org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsResponse(contentType, httpRes.statusCode()) {{
            res = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsRes out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PaginationLimitOffsetOffsetParamsRes.class);
                res.res = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetPageBodyResponse paginationLimitOffsetPageBody(org.openapis.openapi.models.shared.LimitOffsetConfig request) throws Exception {
        return this.paginationLimitOffsetPageBody(request, null);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetPageBodyResponse paginationLimitOffsetPageBody(org.openapis.openapi.models.shared.LimitOffsetConfig request, String serverURL) throws Exception {
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(PAGINATION_LIMIT_OFFSET_PAGE_BODY_SERVERS[0], new java.util.HashMap<String, String>());
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pagination/limitoffset/page");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaginationLimitOffsetPageBodyResponse res = new org.openapis.openapi.models.operations.PaginationLimitOffsetPageBodyResponse(contentType, httpRes.statusCode()) {{
            res = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PaginationLimitOffsetPageBodyRes out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PaginationLimitOffsetPageBodyRes.class);
                res.res = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsResponse paginationLimitOffsetPageParams(Long page) throws Exception {
        return this.paginationLimitOffsetPageParams(page, null);
    }

    public org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsResponse paginationLimitOffsetPageParams(Long page, String serverURL) throws Exception {
        org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsRequest request = new org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsRequest(page);
        
        String baseUrl = org.openapis.openapi.utils.Utils.templateUrl(PAGINATION_LIMIT_OFFSET_PAGE_PARAMS_SERVERS[0], new java.util.HashMap<String, String>());
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pagination/limitoffset/page");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("x-speakeasy-user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsRequest.class, request, this.sdkConfiguration.globals);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsResponse res = new org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsResponse(contentType, httpRes.statusCode()) {{
            res = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsRes out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PaginationLimitOffsetPageParamsRes.class);
                res.res = out;
            }
        }

        return res;
    }
}