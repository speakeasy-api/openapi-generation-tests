/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;


public class DefaultsAndConstsOutput {
    @JsonProperty("constBigInt")
    public Long constBigInt;

    public DefaultsAndConstsOutput withConstBigInt(Long constBigInt) {
        this.constBigInt = constBigInt;
        return this;
    }
    
    @JsonProperty("constBigIntStr")
    public String constBigIntStr;

    public DefaultsAndConstsOutput withConstBigIntStr(String constBigIntStr) {
        this.constBigIntStr = constBigIntStr;
        return this;
    }
    
    @JsonProperty("constBool")
    public Boolean constBool;

    public DefaultsAndConstsOutput withConstBool(Boolean constBool) {
        this.constBool = constBool;
        return this;
    }
    
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("constDate")
    public LocalDate constDate;

    public DefaultsAndConstsOutput withConstDate(LocalDate constDate) {
        this.constDate = constDate;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("constDateTime")
    public OffsetDateTime constDateTime;

    public DefaultsAndConstsOutput withConstDateTime(OffsetDateTime constDateTime) {
        this.constDateTime = constDateTime;
        return this;
    }
    
    @JsonProperty("constDecimal")
    public Double constDecimal;

    public DefaultsAndConstsOutput withConstDecimal(Double constDecimal) {
        this.constDecimal = constDecimal;
        return this;
    }
    
    @JsonProperty("constDecimalStr")
    public String constDecimalStr;

    public DefaultsAndConstsOutput withConstDecimalStr(String constDecimalStr) {
        this.constDecimalStr = constDecimalStr;
        return this;
    }
    
    @JsonProperty("constEnumInt")
    public DefaultsAndConstsOutputConstEnumInt constEnumInt;

    public DefaultsAndConstsOutput withConstEnumInt(DefaultsAndConstsOutputConstEnumInt constEnumInt) {
        this.constEnumInt = constEnumInt;
        return this;
    }
    
    @JsonProperty("constEnumStr")
    public DefaultsAndConstsOutputConstEnumStr constEnumStr;

    public DefaultsAndConstsOutput withConstEnumStr(DefaultsAndConstsOutputConstEnumStr constEnumStr) {
        this.constEnumStr = constEnumStr;
        return this;
    }
    
    @JsonProperty("constInt")
    public Long constInt;

    public DefaultsAndConstsOutput withConstInt(Long constInt) {
        this.constInt = constInt;
        return this;
    }
    
    @JsonProperty("constNum")
    public Double constNum;

    public DefaultsAndConstsOutput withConstNum(Double constNum) {
        this.constNum = constNum;
        return this;
    }
    
    @JsonProperty("constStr")
    public String constStr;

    public DefaultsAndConstsOutput withConstStr(String constStr) {
        this.constStr = constStr;
        return this;
    }
    
    @JsonProperty("constStrNull")
    public String constStrNull;

    public DefaultsAndConstsOutput withConstStrNull(String constStrNull) {
        this.constStrNull = constStrNull;
        return this;
    }
    
    @JsonProperty("defaultBigInt")
    public Long defaultBigInt;

    public DefaultsAndConstsOutput withDefaultBigInt(Long defaultBigInt) {
        this.defaultBigInt = defaultBigInt;
        return this;
    }
    
    @JsonProperty("defaultBigIntStr")
    public String defaultBigIntStr;

    public DefaultsAndConstsOutput withDefaultBigIntStr(String defaultBigIntStr) {
        this.defaultBigIntStr = defaultBigIntStr;
        return this;
    }
    
    @JsonProperty("defaultBool")
    public Boolean defaultBool;

    public DefaultsAndConstsOutput withDefaultBool(Boolean defaultBool) {
        this.defaultBool = defaultBool;
        return this;
    }
    
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("defaultDate")
    public LocalDate defaultDate;

    public DefaultsAndConstsOutput withDefaultDate(LocalDate defaultDate) {
        this.defaultDate = defaultDate;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("defaultDateTime")
    public OffsetDateTime defaultDateTime;

    public DefaultsAndConstsOutput withDefaultDateTime(OffsetDateTime defaultDateTime) {
        this.defaultDateTime = defaultDateTime;
        return this;
    }
    
    @JsonProperty("defaultDecimal")
    public Double defaultDecimal;

    public DefaultsAndConstsOutput withDefaultDecimal(Double defaultDecimal) {
        this.defaultDecimal = defaultDecimal;
        return this;
    }
    
    @JsonProperty("defaultDecimalStr")
    public String defaultDecimalStr;

    public DefaultsAndConstsOutput withDefaultDecimalStr(String defaultDecimalStr) {
        this.defaultDecimalStr = defaultDecimalStr;
        return this;
    }
    
    @JsonProperty("defaultEnumInt")
    public DefaultsAndConstsOutputDefaultEnumInt defaultEnumInt;

    public DefaultsAndConstsOutput withDefaultEnumInt(DefaultsAndConstsOutputDefaultEnumInt defaultEnumInt) {
        this.defaultEnumInt = defaultEnumInt;
        return this;
    }
    
    @JsonProperty("defaultEnumStr")
    public DefaultsAndConstsOutputDefaultEnumStr defaultEnumStr;

    public DefaultsAndConstsOutput withDefaultEnumStr(DefaultsAndConstsOutputDefaultEnumStr defaultEnumStr) {
        this.defaultEnumStr = defaultEnumStr;
        return this;
    }
    
    @JsonProperty("defaultInt")
    public Long defaultInt;

    public DefaultsAndConstsOutput withDefaultInt(Long defaultInt) {
        this.defaultInt = defaultInt;
        return this;
    }
    
    @JsonProperty("defaultNum")
    public Double defaultNum;

    public DefaultsAndConstsOutput withDefaultNum(Double defaultNum) {
        this.defaultNum = defaultNum;
        return this;
    }
    
    @JsonProperty("defaultStr")
    public String defaultStr;

    public DefaultsAndConstsOutput withDefaultStr(String defaultStr) {
        this.defaultStr = defaultStr;
        return this;
    }
    
    @JsonProperty("defaultStrNullable")
    public String defaultStrNullable;

    public DefaultsAndConstsOutput withDefaultStrNullable(String defaultStrNullable) {
        this.defaultStrNullable = defaultStrNullable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultStrOptional")
    public String defaultStrOptional;

    public DefaultsAndConstsOutput withDefaultStrOptional(String defaultStrOptional) {
        this.defaultStrOptional = defaultStrOptional;
        return this;
    }
    
    @JsonProperty("normalField")
    public String normalField;

    public DefaultsAndConstsOutput withNormalField(String normalField) {
        this.normalField = normalField;
        return this;
    }
    
    @JsonProperty("singleEnumConstBool")
    public Boolean singleEnumConstBool;

    public DefaultsAndConstsOutput withSingleEnumConstBool(Boolean singleEnumConstBool) {
        this.singleEnumConstBool = singleEnumConstBool;
        return this;
    }
    
    @JsonProperty("singleEnumConstStr")
    public String singleEnumConstStr;

    public DefaultsAndConstsOutput withSingleEnumConstStr(String singleEnumConstStr) {
        this.singleEnumConstStr = singleEnumConstStr;
        return this;
    }
    
    public DefaultsAndConstsOutput(@JsonProperty("constBigInt") Long constBigInt, @JsonProperty("constBigIntStr") String constBigIntStr, @JsonProperty("constBool") Boolean constBool, @JsonProperty("constDate") LocalDate constDate, @JsonProperty("constDateTime") OffsetDateTime constDateTime, @JsonProperty("constDecimal") Double constDecimal, @JsonProperty("constDecimalStr") String constDecimalStr, @JsonProperty("constEnumInt") DefaultsAndConstsOutputConstEnumInt constEnumInt, @JsonProperty("constEnumStr") DefaultsAndConstsOutputConstEnumStr constEnumStr, @JsonProperty("constInt") Long constInt, @JsonProperty("constNum") Double constNum, @JsonProperty("constStr") String constStr, @JsonProperty("constStrNull") String constStrNull, @JsonProperty("defaultBigInt") Long defaultBigInt, @JsonProperty("defaultBigIntStr") String defaultBigIntStr, @JsonProperty("defaultBool") Boolean defaultBool, @JsonProperty("defaultDate") LocalDate defaultDate, @JsonProperty("defaultDateTime") OffsetDateTime defaultDateTime, @JsonProperty("defaultDecimal") Double defaultDecimal, @JsonProperty("defaultDecimalStr") String defaultDecimalStr, @JsonProperty("defaultEnumInt") DefaultsAndConstsOutputDefaultEnumInt defaultEnumInt, @JsonProperty("defaultEnumStr") DefaultsAndConstsOutputDefaultEnumStr defaultEnumStr, @JsonProperty("defaultInt") Long defaultInt, @JsonProperty("defaultNum") Double defaultNum, @JsonProperty("defaultStr") String defaultStr, @JsonProperty("defaultStrNullable") String defaultStrNullable, @JsonProperty("normalField") String normalField, @JsonProperty("singleEnumConstBool") Boolean singleEnumConstBool, @JsonProperty("singleEnumConstStr") String singleEnumConstStr) {
        this.constBigInt = constBigInt;
        this.constBigIntStr = constBigIntStr;
        this.constBool = constBool;
        this.constDate = constDate;
        this.constDateTime = constDateTime;
        this.constDecimal = constDecimal;
        this.constDecimalStr = constDecimalStr;
        this.constEnumInt = constEnumInt;
        this.constEnumStr = constEnumStr;
        this.constInt = constInt;
        this.constNum = constNum;
        this.constStr = constStr;
        this.constStrNull = constStrNull;
        this.defaultBigInt = defaultBigInt;
        this.defaultBigIntStr = defaultBigIntStr;
        this.defaultBool = defaultBool;
        this.defaultDate = defaultDate;
        this.defaultDateTime = defaultDateTime;
        this.defaultDecimal = defaultDecimal;
        this.defaultDecimalStr = defaultDecimalStr;
        this.defaultEnumInt = defaultEnumInt;
        this.defaultEnumStr = defaultEnumStr;
        this.defaultInt = defaultInt;
        this.defaultNum = defaultNum;
        this.defaultStr = defaultStr;
        this.defaultStrNullable = defaultStrNullable;
        this.normalField = normalField;
        this.singleEnumConstBool = singleEnumConstBool;
        this.singleEnumConstStr = singleEnumConstStr;
  }
}
