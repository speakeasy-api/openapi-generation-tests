/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class AmbiguousQueryParamRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=console")
    private Console console;

    @JsonCreator
    public AmbiguousQueryParamRequest(
            Console console) {
        Utils.checkNotNull(console, "console");
        this.console = console;
    }

    @JsonIgnore
    public Console console() {
        return console;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public AmbiguousQueryParamRequest withConsole(Console console) {
        Utils.checkNotNull(console, "console");
        this.console = console;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AmbiguousQueryParamRequest other = (AmbiguousQueryParamRequest) o;
        return 
            Objects.deepEquals(this.console, other.console);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            console);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AmbiguousQueryParamRequest.class,
                "console", console);
    }
    
    public final static class Builder {
 
        private Console console;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder console(Console console) {
            Utils.checkNotNull(console, "console");
            this.console = console;
            return this;
        }
        
        public AmbiguousQueryParamRequest build() {
            return new AmbiguousQueryParamRequest(
                console);
        }
    }
}

