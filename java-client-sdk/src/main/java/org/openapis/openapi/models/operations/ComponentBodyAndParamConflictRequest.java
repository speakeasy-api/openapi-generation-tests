/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class ComponentBodyAndParamConflictRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private org.openapis.openapi.models.shared.SimpleObject simpleObject;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=str")
    private String str;

    @JsonCreator
    public ComponentBodyAndParamConflictRequest(
            org.openapis.openapi.models.shared.SimpleObject simpleObject,
            String str) {
        Utils.checkNotNull(simpleObject, "simpleObject");
        Utils.checkNotNull(str, "str");
        this.simpleObject = simpleObject;
        this.str = str;
    }

    @JsonIgnore
    public org.openapis.openapi.models.shared.SimpleObject simpleObject() {
        return simpleObject;
    }

    @JsonIgnore
    public String str() {
        return str;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ComponentBodyAndParamConflictRequest withSimpleObject(org.openapis.openapi.models.shared.SimpleObject simpleObject) {
        Utils.checkNotNull(simpleObject, "simpleObject");
        this.simpleObject = simpleObject;
        return this;
    }

    public ComponentBodyAndParamConflictRequest withStr(String str) {
        Utils.checkNotNull(str, "str");
        this.str = str;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComponentBodyAndParamConflictRequest other = (ComponentBodyAndParamConflictRequest) o;
        return 
            java.util.Objects.deepEquals(this.simpleObject, other.simpleObject) &&
            java.util.Objects.deepEquals(this.str, other.str);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            simpleObject,
            str);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ComponentBodyAndParamConflictRequest.class,
                "simpleObject", simpleObject,
                "str", str);
    }
    
    public final static class Builder {
 
        private org.openapis.openapi.models.shared.SimpleObject simpleObject;
 
        private String str;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder simpleObject(org.openapis.openapi.models.shared.SimpleObject simpleObject) {
            Utils.checkNotNull(simpleObject, "simpleObject");
            this.simpleObject = simpleObject;
            return this;
        }

        public Builder str(String str) {
            Utils.checkNotNull(str, "str");
            this.str = str;
            return this;
        }
        
        public ComponentBodyAndParamConflictRequest build() {
            return new ComponentBodyAndParamConflictRequest(
                simpleObject,
                str);
        }
    }
}

