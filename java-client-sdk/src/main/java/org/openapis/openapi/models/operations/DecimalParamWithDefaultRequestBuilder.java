/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import java.math.BigDecimal;
import org.openapis.openapi.utils.LazySingletonValue;
import org.openapis.openapi.utils.Utils;

public class DecimalParamWithDefaultRequestBuilder {

    private BigDecimal decimalInput;
    private final SDKMethodInterfaces.MethodCallDecimalParamWithDefault sdk;

    public DecimalParamWithDefaultRequestBuilder(SDKMethodInterfaces.MethodCallDecimalParamWithDefault sdk) {
        this.sdk = sdk;
    }
               
    public DecimalParamWithDefaultRequestBuilder decimalInput(double decimalInput) {
        this.decimalInput = BigDecimal.valueOf(decimalInput);
        return this;
    }

    public DecimalParamWithDefaultRequestBuilder decimalInput(BigDecimal decimalInput) {
        Utils.checkNotNull(decimalInput, "decimalInput");
        this.decimalInput = decimalInput;
        return this;
    }

    public DecimalParamWithDefaultResponse call() throws Exception {
        if (decimalInput == null) {
            decimalInput = _SINGLETON_VALUE_DecimalInput.value();
        }
        return sdk.decimalParamWithDefault(
            decimalInput);
    }

    private static final LazySingletonValue<BigDecimal> _SINGLETON_VALUE_DecimalInput =
            new LazySingletonValue<>(
                    "decimalInput",
                    "903275809834567300000",
                    new TypeReference<BigDecimal>() {});
}
