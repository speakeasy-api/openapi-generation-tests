/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;

public class FlattenedEnvelopePaginationResponseRequest {

    /**
     * The page token used to request a specific page of the search results
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    private Optional<? extends String> cursor;

    @JsonCreator
    public FlattenedEnvelopePaginationResponseRequest(
            Optional<? extends String> cursor) {
        Utils.checkNotNull(cursor, "cursor");
        this.cursor = cursor;
    }
    
    public FlattenedEnvelopePaginationResponseRequest() {
        this(Optional.empty());
    }

    /**
     * The page token used to request a specific page of the search results
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<String> cursor() {
        return (Optional<String>) cursor;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The page token used to request a specific page of the search results
     */
    public FlattenedEnvelopePaginationResponseRequest withCursor(String cursor) {
        Utils.checkNotNull(cursor, "cursor");
        this.cursor = Optional.ofNullable(cursor);
        return this;
    }

    /**
     * The page token used to request a specific page of the search results
     */
    public FlattenedEnvelopePaginationResponseRequest withCursor(Optional<? extends String> cursor) {
        Utils.checkNotNull(cursor, "cursor");
        this.cursor = cursor;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FlattenedEnvelopePaginationResponseRequest other = (FlattenedEnvelopePaginationResponseRequest) o;
        return 
            java.util.Objects.deepEquals(this.cursor, other.cursor);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            cursor);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FlattenedEnvelopePaginationResponseRequest.class,
                "cursor", cursor);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> cursor = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The page token used to request a specific page of the search results
         */
        public Builder cursor(String cursor) {
            Utils.checkNotNull(cursor, "cursor");
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        /**
         * The page token used to request a specific page of the search results
         */
        public Builder cursor(Optional<? extends String> cursor) {
            Utils.checkNotNull(cursor, "cursor");
            this.cursor = cursor;
            return this;
        }
        
        public FlattenedEnvelopePaginationResponseRequest build() {
            return new FlattenedEnvelopePaginationResponseRequest(
                cursor);
        }
    }
}

