/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.Utils;

public class FormQueryParamsArrayArgs {

    @JsonProperty("arrParam")
    private String arrParam;

    @JsonProperty("arrParamExploded")
    private java.util.List<String> arrParamExploded;

    @JsonCreator
    public FormQueryParamsArrayArgs(
            @JsonProperty("arrParam") String arrParam,
            @JsonProperty("arrParamExploded") java.util.List<String> arrParamExploded) {
        Utils.checkNotNull(arrParam, "arrParam");
        Utils.checkNotNull(arrParamExploded, "arrParamExploded");
        this.arrParam = arrParam;
        this.arrParamExploded = arrParamExploded;
    }

    @JsonIgnore
    public String arrParam() {
        return arrParam;
    }

    @JsonIgnore
    public java.util.List<String> arrParamExploded() {
        return arrParamExploded;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public FormQueryParamsArrayArgs withArrParam(String arrParam) {
        Utils.checkNotNull(arrParam, "arrParam");
        this.arrParam = arrParam;
        return this;
    }

    public FormQueryParamsArrayArgs withArrParamExploded(java.util.List<String> arrParamExploded) {
        Utils.checkNotNull(arrParamExploded, "arrParamExploded");
        this.arrParamExploded = arrParamExploded;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FormQueryParamsArrayArgs other = (FormQueryParamsArrayArgs) o;
        return 
            java.util.Objects.deepEquals(this.arrParam, other.arrParam) &&
            java.util.Objects.deepEquals(this.arrParamExploded, other.arrParamExploded);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            arrParam,
            arrParamExploded);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FormQueryParamsArrayArgs.class,
                "arrParam", arrParam,
                "arrParamExploded", arrParamExploded);
    }
    
    public final static class Builder {
 
        private String arrParam;
 
        private java.util.List<String> arrParamExploded;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder arrParam(String arrParam) {
            Utils.checkNotNull(arrParam, "arrParam");
            this.arrParam = arrParam;
            return this;
        }

        public Builder arrParamExploded(java.util.List<String> arrParamExploded) {
            Utils.checkNotNull(arrParamExploded, "arrParamExploded");
            this.arrParamExploded = arrParamExploded;
            return this;
        }
        
        public FormQueryParamsArrayArgs build() {
            return new FormQueryParamsArrayArgs(
                arrParam,
                arrParamExploded);
        }
    }
}

