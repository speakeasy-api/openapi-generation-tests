/* 
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;

public class FormQueryParamsPrimitiveRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=boolParam")
    private boolean boolParam;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=intParam")
    private long intParam;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=numParam")
    private double numParam;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=strParam")
    private String strParam;

    @JsonCreator
    public FormQueryParamsPrimitiveRequest(
            boolean boolParam,
            long intParam,
            double numParam,
            String strParam) {
        Utils.checkNotNull(boolParam, "boolParam");
        Utils.checkNotNull(intParam, "intParam");
        Utils.checkNotNull(numParam, "numParam");
        Utils.checkNotNull(strParam, "strParam");
        this.boolParam = boolParam;
        this.intParam = intParam;
        this.numParam = numParam;
        this.strParam = strParam;
    }

    @JsonIgnore
    public boolean boolParam() {
        return boolParam;
    }

    @JsonIgnore
    public long intParam() {
        return intParam;
    }

    @JsonIgnore
    public double numParam() {
        return numParam;
    }

    @JsonIgnore
    public String strParam() {
        return strParam;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public FormQueryParamsPrimitiveRequest withBoolParam(boolean boolParam) {
        Utils.checkNotNull(boolParam, "boolParam");
        this.boolParam = boolParam;
        return this;
    }

    public FormQueryParamsPrimitiveRequest withIntParam(long intParam) {
        Utils.checkNotNull(intParam, "intParam");
        this.intParam = intParam;
        return this;
    }

    public FormQueryParamsPrimitiveRequest withNumParam(double numParam) {
        Utils.checkNotNull(numParam, "numParam");
        this.numParam = numParam;
        return this;
    }

    public FormQueryParamsPrimitiveRequest withStrParam(String strParam) {
        Utils.checkNotNull(strParam, "strParam");
        this.strParam = strParam;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FormQueryParamsPrimitiveRequest other = (FormQueryParamsPrimitiveRequest) o;
        return 
            java.util.Objects.deepEquals(this.boolParam, other.boolParam) &&
            java.util.Objects.deepEquals(this.intParam, other.intParam) &&
            java.util.Objects.deepEquals(this.numParam, other.numParam) &&
            java.util.Objects.deepEquals(this.strParam, other.strParam);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            boolParam,
            intParam,
            numParam,
            strParam);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FormQueryParamsPrimitiveRequest.class,
                "boolParam", boolParam,
                "intParam", intParam,
                "numParam", numParam,
                "strParam", strParam);
    }
    
    public final static class Builder {
 
        private Boolean boolParam;
 
        private Long intParam;
 
        private Double numParam;
 
        private String strParam;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder boolParam(boolean boolParam) {
            Utils.checkNotNull(boolParam, "boolParam");
            this.boolParam = boolParam;
            return this;
        }

        public Builder intParam(long intParam) {
            Utils.checkNotNull(intParam, "intParam");
            this.intParam = intParam;
            return this;
        }

        public Builder numParam(double numParam) {
            Utils.checkNotNull(numParam, "numParam");
            this.numParam = numParam;
            return this;
        }

        public Builder strParam(String strParam) {
            Utils.checkNotNull(strParam, "strParam");
            this.strParam = strParam;
            return this;
        }
        
        public FormQueryParamsPrimitiveRequest build() {
            return new FormQueryParamsPrimitiveRequest(
                boolParam,
                intParam,
                numParam,
                strParam);
        }
    }
}

