/* 
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;

public class FormQueryParamsRefParamObjectRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=refObjParam")
    private Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObj> refObjParam;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=refObjParamExploded")
    private Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObjExploded> refObjParamExploded;

    @JsonCreator
    public FormQueryParamsRefParamObjectRequest(
            Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObj> refObjParam,
            Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObjExploded> refObjParamExploded) {
        Utils.checkNotNull(refObjParam, "refObjParam");
        Utils.checkNotNull(refObjParamExploded, "refObjParamExploded");
        this.refObjParam = refObjParam;
        this.refObjParamExploded = refObjParamExploded;
    }
    
    public FormQueryParamsRefParamObjectRequest() {
        this(Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<org.openapis.openapi.models.shared.RefQueryParamObj> refObjParam() {
        return (Optional<org.openapis.openapi.models.shared.RefQueryParamObj>) refObjParam;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<org.openapis.openapi.models.shared.RefQueryParamObjExploded> refObjParamExploded() {
        return (Optional<org.openapis.openapi.models.shared.RefQueryParamObjExploded>) refObjParamExploded;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public FormQueryParamsRefParamObjectRequest withRefObjParam(org.openapis.openapi.models.shared.RefQueryParamObj refObjParam) {
        Utils.checkNotNull(refObjParam, "refObjParam");
        this.refObjParam = Optional.ofNullable(refObjParam);
        return this;
    }

    public FormQueryParamsRefParamObjectRequest withRefObjParam(Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObj> refObjParam) {
        Utils.checkNotNull(refObjParam, "refObjParam");
        this.refObjParam = refObjParam;
        return this;
    }

    public FormQueryParamsRefParamObjectRequest withRefObjParamExploded(org.openapis.openapi.models.shared.RefQueryParamObjExploded refObjParamExploded) {
        Utils.checkNotNull(refObjParamExploded, "refObjParamExploded");
        this.refObjParamExploded = Optional.ofNullable(refObjParamExploded);
        return this;
    }

    public FormQueryParamsRefParamObjectRequest withRefObjParamExploded(Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObjExploded> refObjParamExploded) {
        Utils.checkNotNull(refObjParamExploded, "refObjParamExploded");
        this.refObjParamExploded = refObjParamExploded;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FormQueryParamsRefParamObjectRequest other = (FormQueryParamsRefParamObjectRequest) o;
        return 
            java.util.Objects.deepEquals(this.refObjParam, other.refObjParam) &&
            java.util.Objects.deepEquals(this.refObjParamExploded, other.refObjParamExploded);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            refObjParam,
            refObjParamExploded);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FormQueryParamsRefParamObjectRequest.class,
                "refObjParam", refObjParam,
                "refObjParamExploded", refObjParamExploded);
    }
    
    public final static class Builder {
 
        private Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObj> refObjParam = Optional.empty();
 
        private Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObjExploded> refObjParamExploded = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder refObjParam(org.openapis.openapi.models.shared.RefQueryParamObj refObjParam) {
            Utils.checkNotNull(refObjParam, "refObjParam");
            this.refObjParam = Optional.ofNullable(refObjParam);
            return this;
        }

        public Builder refObjParam(Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObj> refObjParam) {
            Utils.checkNotNull(refObjParam, "refObjParam");
            this.refObjParam = refObjParam;
            return this;
        }

        public Builder refObjParamExploded(org.openapis.openapi.models.shared.RefQueryParamObjExploded refObjParamExploded) {
            Utils.checkNotNull(refObjParamExploded, "refObjParamExploded");
            this.refObjParamExploded = Optional.ofNullable(refObjParamExploded);
            return this;
        }

        public Builder refObjParamExploded(Optional<? extends org.openapis.openapi.models.shared.RefQueryParamObjExploded> refObjParamExploded) {
            Utils.checkNotNull(refObjParamExploded, "refObjParamExploded");
            this.refObjParamExploded = refObjParamExploded;
            return this;
        }
        
        public FormQueryParamsRefParamObjectRequest build() {
            return new FormQueryParamsRefParamObjectRequest(
                refObjParam,
                refObjParamExploded);
        }
    }
}

