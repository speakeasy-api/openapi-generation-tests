/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;

public class GetArrayDataSourceRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    private String filter;

    @JsonCreator
    public GetArrayDataSourceRequest(
            String filter) {
        Utils.checkNotNull(filter, "filter");
        this.filter = filter;
    }

    @JsonIgnore
    public String filter() {
        return filter;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetArrayDataSourceRequest withFilter(String filter) {
        Utils.checkNotNull(filter, "filter");
        this.filter = filter;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetArrayDataSourceRequest other = (GetArrayDataSourceRequest) o;
        return 
            java.util.Objects.deepEquals(this.filter, other.filter);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            filter);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetArrayDataSourceRequest.class,
                "filter", filter);
    }
    
    public final static class Builder {
 
        private String filter;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder filter(String filter) {
            Utils.checkNotNull(filter, "filter");
            this.filter = filter;
            return this;
        }
        
        public GetArrayDataSourceRequest build() {
            return new GetArrayDataSourceRequest(
                filter);
        }
    }
}

