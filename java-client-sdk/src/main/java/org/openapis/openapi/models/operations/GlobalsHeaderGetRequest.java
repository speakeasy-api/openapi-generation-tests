/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class GlobalsHeaderGetRequest {

    @SpeakeasyMetadata("header:style=simple,explode=false,name=globalHeaderParam")
    private Optional<Boolean> globalHeaderParam;

    @JsonCreator
    public GlobalsHeaderGetRequest(
            Optional<Boolean> globalHeaderParam) {
        Utils.checkNotNull(globalHeaderParam, "globalHeaderParam");
        this.globalHeaderParam = globalHeaderParam;
    }
    
    public GlobalsHeaderGetRequest() {
        this(Optional.empty());
    }

    @JsonIgnore
    public Optional<Boolean> globalHeaderParam() {
        return globalHeaderParam;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GlobalsHeaderGetRequest withGlobalHeaderParam(boolean globalHeaderParam) {
        Utils.checkNotNull(globalHeaderParam, "globalHeaderParam");
        this.globalHeaderParam = Optional.ofNullable(globalHeaderParam);
        return this;
    }

    public GlobalsHeaderGetRequest withGlobalHeaderParam(Optional<Boolean> globalHeaderParam) {
        Utils.checkNotNull(globalHeaderParam, "globalHeaderParam");
        this.globalHeaderParam = globalHeaderParam;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GlobalsHeaderGetRequest other = (GlobalsHeaderGetRequest) o;
        return 
            Objects.deepEquals(this.globalHeaderParam, other.globalHeaderParam);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            globalHeaderParam);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GlobalsHeaderGetRequest.class,
                "globalHeaderParam", globalHeaderParam);
    }
    
    public final static class Builder {
 
        private Optional<Boolean> globalHeaderParam = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder globalHeaderParam(boolean globalHeaderParam) {
            Utils.checkNotNull(globalHeaderParam, "globalHeaderParam");
            this.globalHeaderParam = Optional.ofNullable(globalHeaderParam);
            return this;
        }

        public Builder globalHeaderParam(Optional<Boolean> globalHeaderParam) {
            Utils.checkNotNull(globalHeaderParam, "globalHeaderParam");
            this.globalHeaderParam = globalHeaderParam;
            return this;
        }
        
        public GlobalsHeaderGetRequest build() {
            return new GlobalsHeaderGetRequest(
                globalHeaderParam);
        }
    }
}

