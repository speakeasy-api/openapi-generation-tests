/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.Utils;

/**
 * GlobalsHiddenPostRes - OK
 */

public class GlobalsHiddenPostRes {

    @JsonProperty("args")
    private Args args;

    @JsonProperty("headers")
    private java.util.Map<String, String> headers;

    @JsonProperty("json")
    private GlobalsHiddenPostJson json;

    @JsonProperty("url")
    private String url;

    @JsonCreator
    public GlobalsHiddenPostRes(
            @JsonProperty("args") Args args,
            @JsonProperty("headers") java.util.Map<String, String> headers,
            @JsonProperty("json") GlobalsHiddenPostJson json,
            @JsonProperty("url") String url) {
        Utils.checkNotNull(args, "args");
        headers = Utils.emptyMapIfNull(headers);
        Utils.checkNotNull(json, "json");
        Utils.checkNotNull(url, "url");
        this.args = args;
        this.headers = headers;
        this.json = json;
        this.url = url;
    }

    @JsonIgnore
    public Args args() {
        return args;
    }

    @JsonIgnore
    public java.util.Map<String, String> headers() {
        return headers;
    }

    @JsonIgnore
    public GlobalsHiddenPostJson json() {
        return json;
    }

    @JsonIgnore
    public String url() {
        return url;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GlobalsHiddenPostRes withArgs(Args args) {
        Utils.checkNotNull(args, "args");
        this.args = args;
        return this;
    }

    public GlobalsHiddenPostRes withHeaders(java.util.Map<String, String> headers) {
        Utils.checkNotNull(headers, "headers");
        this.headers = headers;
        return this;
    }

    public GlobalsHiddenPostRes withJson(GlobalsHiddenPostJson json) {
        Utils.checkNotNull(json, "json");
        this.json = json;
        return this;
    }

    public GlobalsHiddenPostRes withUrl(String url) {
        Utils.checkNotNull(url, "url");
        this.url = url;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GlobalsHiddenPostRes other = (GlobalsHiddenPostRes) o;
        return 
            java.util.Objects.deepEquals(this.args, other.args) &&
            java.util.Objects.deepEquals(this.headers, other.headers) &&
            java.util.Objects.deepEquals(this.json, other.json) &&
            java.util.Objects.deepEquals(this.url, other.url);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            args,
            headers,
            json,
            url);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GlobalsHiddenPostRes.class,
                "args", args,
                "headers", headers,
                "json", json,
                "url", url);
    }
    
    public final static class Builder {
 
        private Args args;
 
        private java.util.Map<String, String> headers;
 
        private GlobalsHiddenPostJson json;
 
        private String url;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder args(Args args) {
            Utils.checkNotNull(args, "args");
            this.args = args;
            return this;
        }

        public Builder headers(java.util.Map<String, String> headers) {
            Utils.checkNotNull(headers, "headers");
            this.headers = headers;
            return this;
        }

        public Builder json(GlobalsHiddenPostJson json) {
            Utils.checkNotNull(json, "json");
            this.json = json;
            return this;
        }

        public Builder url(String url) {
            Utils.checkNotNull(url, "url");
            this.url = url;
            return this;
        }
        
        public GlobalsHiddenPostRes build() {
            return new GlobalsHiddenPostRes(
                args,
                headers,
                json,
                url);
        }
    }
}

