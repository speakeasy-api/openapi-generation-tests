/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.Utils;

public class GlobalsQueryParameterGetArgs {

    @JsonProperty("globalQueryParam")
    private String globalQueryParam;

    @JsonCreator
    public GlobalsQueryParameterGetArgs(
            @JsonProperty("globalQueryParam") String globalQueryParam) {
        Utils.checkNotNull(globalQueryParam, "globalQueryParam");
        this.globalQueryParam = globalQueryParam;
    }

    @JsonIgnore
    public String globalQueryParam() {
        return globalQueryParam;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GlobalsQueryParameterGetArgs withGlobalQueryParam(String globalQueryParam) {
        Utils.checkNotNull(globalQueryParam, "globalQueryParam");
        this.globalQueryParam = globalQueryParam;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GlobalsQueryParameterGetArgs other = (GlobalsQueryParameterGetArgs) o;
        return 
            java.util.Objects.deepEquals(this.globalQueryParam, other.globalQueryParam);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            globalQueryParam);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GlobalsQueryParameterGetArgs.class,
                "globalQueryParam", globalQueryParam);
    }
    
    public final static class Builder {
 
        private String globalQueryParam;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder globalQueryParam(String globalQueryParam) {
            Utils.checkNotNull(globalQueryParam, "globalQueryParam");
            this.globalQueryParam = globalQueryParam;
            return this;
        }
        
        public GlobalsQueryParameterGetArgs build() {
            return new GlobalsQueryParameterGetArgs(
                globalQueryParam);
        }
    }
}

