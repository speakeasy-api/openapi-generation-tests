/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.utils.Utils;


public class HeaderParamsArrayHeaders {

    @JsonProperty("X-Header-Array")
    private String xHeaderArray;

    @JsonCreator
    public HeaderParamsArrayHeaders(
            @JsonProperty("X-Header-Array") String xHeaderArray) {
        Utils.checkNotNull(xHeaderArray, "xHeaderArray");
        this.xHeaderArray = xHeaderArray;
    }

    @JsonIgnore
    public String xHeaderArray() {
        return xHeaderArray;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public HeaderParamsArrayHeaders withXHeaderArray(String xHeaderArray) {
        Utils.checkNotNull(xHeaderArray, "xHeaderArray");
        this.xHeaderArray = xHeaderArray;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HeaderParamsArrayHeaders other = (HeaderParamsArrayHeaders) o;
        return 
            Objects.deepEquals(this.xHeaderArray, other.xHeaderArray);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            xHeaderArray);
    }
    
    @Override
    public String toString() {
        return Utils.toString(HeaderParamsArrayHeaders.class,
                "xHeaderArray", xHeaderArray);
    }
    
    public final static class Builder {
 
        private String xHeaderArray;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder xHeaderArray(String xHeaderArray) {
            Utils.checkNotNull(xHeaderArray, "xHeaderArray");
            this.xHeaderArray = xHeaderArray;
            return this;
        }
        
        public HeaderParamsArrayHeaders build() {
            return new HeaderParamsArrayHeaders(
                xHeaderArray);
        }
    }
}

