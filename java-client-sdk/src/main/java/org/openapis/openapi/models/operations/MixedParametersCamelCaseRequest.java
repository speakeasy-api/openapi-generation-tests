/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class MixedParametersCamelCaseRequest {

    @SpeakeasyMetadata("header:style=simple,explode=false,name=header_param")
    private String headerParam;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=path_param")
    private String pathParam;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query_string_param")
    private String queryStringParam;

    @JsonCreator
    public MixedParametersCamelCaseRequest(
            String headerParam,
            String pathParam,
            String queryStringParam) {
        Utils.checkNotNull(headerParam, "headerParam");
        Utils.checkNotNull(pathParam, "pathParam");
        Utils.checkNotNull(queryStringParam, "queryStringParam");
        this.headerParam = headerParam;
        this.pathParam = pathParam;
        this.queryStringParam = queryStringParam;
    }

    @JsonIgnore
    public String headerParam() {
        return headerParam;
    }

    @JsonIgnore
    public String pathParam() {
        return pathParam;
    }

    @JsonIgnore
    public String queryStringParam() {
        return queryStringParam;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public MixedParametersCamelCaseRequest withHeaderParam(String headerParam) {
        Utils.checkNotNull(headerParam, "headerParam");
        this.headerParam = headerParam;
        return this;
    }

    public MixedParametersCamelCaseRequest withPathParam(String pathParam) {
        Utils.checkNotNull(pathParam, "pathParam");
        this.pathParam = pathParam;
        return this;
    }

    public MixedParametersCamelCaseRequest withQueryStringParam(String queryStringParam) {
        Utils.checkNotNull(queryStringParam, "queryStringParam");
        this.queryStringParam = queryStringParam;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MixedParametersCamelCaseRequest other = (MixedParametersCamelCaseRequest) o;
        return 
            java.util.Objects.deepEquals(this.headerParam, other.headerParam) &&
            java.util.Objects.deepEquals(this.pathParam, other.pathParam) &&
            java.util.Objects.deepEquals(this.queryStringParam, other.queryStringParam);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            headerParam,
            pathParam,
            queryStringParam);
    }
    
    @Override
    public String toString() {
        return Utils.toString(MixedParametersCamelCaseRequest.class,
                "headerParam", headerParam,
                "pathParam", pathParam,
                "queryStringParam", queryStringParam);
    }
    
    public final static class Builder {
 
        private String headerParam;
 
        private String pathParam;
 
        private String queryStringParam;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder headerParam(String headerParam) {
            Utils.checkNotNull(headerParam, "headerParam");
            this.headerParam = headerParam;
            return this;
        }

        public Builder pathParam(String pathParam) {
            Utils.checkNotNull(pathParam, "pathParam");
            this.pathParam = pathParam;
            return this;
        }

        public Builder queryStringParam(String queryStringParam) {
            Utils.checkNotNull(queryStringParam, "queryStringParam");
            this.queryStringParam = queryStringParam;
            return this;
        }
        
        public MixedParametersCamelCaseRequest build() {
            return new MixedParametersCamelCaseRequest(
                headerParam,
                pathParam,
                queryStringParam);
        }
    }
}

