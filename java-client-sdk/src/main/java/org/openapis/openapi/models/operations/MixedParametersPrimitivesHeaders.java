/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.utils.Utils;


public class MixedParametersPrimitivesHeaders {

    @JsonProperty("Headerparam")
    private String headerparam;

    @JsonCreator
    public MixedParametersPrimitivesHeaders(
            @JsonProperty("Headerparam") String headerparam) {
        Utils.checkNotNull(headerparam, "headerparam");
        this.headerparam = headerparam;
    }

    @JsonIgnore
    public String headerparam() {
        return headerparam;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public MixedParametersPrimitivesHeaders withHeaderparam(String headerparam) {
        Utils.checkNotNull(headerparam, "headerparam");
        this.headerparam = headerparam;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MixedParametersPrimitivesHeaders other = (MixedParametersPrimitivesHeaders) o;
        return 
            Objects.deepEquals(this.headerparam, other.headerparam);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            headerparam);
    }
    
    @Override
    public String toString() {
        return Utils.toString(MixedParametersPrimitivesHeaders.class,
                "headerparam", headerparam);
    }
    
    public final static class Builder {
 
        private String headerparam;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder headerparam(String headerparam) {
            Utils.checkNotNull(headerparam, "headerparam");
            this.headerparam = headerparam;
            return this;
        }
        
        public MixedParametersPrimitivesHeaders build() {
            return new MixedParametersPrimitivesHeaders(
                headerparam);
        }
    }
}

