/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class PaginationAmbiguousInputRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private PaginationAmbiguousInputRequestBody requestBody;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    private Optional<Long> cursor;

    @JsonCreator
    public PaginationAmbiguousInputRequest(
            PaginationAmbiguousInputRequestBody requestBody,
            Optional<Long> cursor) {
        Utils.checkNotNull(requestBody, "requestBody");
        Utils.checkNotNull(cursor, "cursor");
        this.requestBody = requestBody;
        this.cursor = cursor;
    }
    
    public PaginationAmbiguousInputRequest(
            PaginationAmbiguousInputRequestBody requestBody) {
        this(requestBody, Optional.empty());
    }

    @JsonIgnore
    public PaginationAmbiguousInputRequestBody requestBody() {
        return requestBody;
    }

    @JsonIgnore
    public Optional<Long> cursor() {
        return cursor;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PaginationAmbiguousInputRequest withRequestBody(PaginationAmbiguousInputRequestBody requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }

    public PaginationAmbiguousInputRequest withCursor(long cursor) {
        Utils.checkNotNull(cursor, "cursor");
        this.cursor = Optional.ofNullable(cursor);
        return this;
    }

    public PaginationAmbiguousInputRequest withCursor(Optional<Long> cursor) {
        Utils.checkNotNull(cursor, "cursor");
        this.cursor = cursor;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaginationAmbiguousInputRequest other = (PaginationAmbiguousInputRequest) o;
        return 
            Objects.deepEquals(this.requestBody, other.requestBody) &&
            Objects.deepEquals(this.cursor, other.cursor);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            requestBody,
            cursor);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaginationAmbiguousInputRequest.class,
                "requestBody", requestBody,
                "cursor", cursor);
    }
    
    public final static class Builder {
 
        private PaginationAmbiguousInputRequestBody requestBody;
 
        private Optional<Long> cursor = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder requestBody(PaginationAmbiguousInputRequestBody requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }

        public Builder cursor(long cursor) {
            Utils.checkNotNull(cursor, "cursor");
            this.cursor = Optional.ofNullable(cursor);
            return this;
        }

        public Builder cursor(Optional<Long> cursor) {
            Utils.checkNotNull(cursor, "cursor");
            this.cursor = cursor;
            return this;
        }
        
        public PaginationAmbiguousInputRequest build() {
            return new PaginationAmbiguousInputRequest(
                requestBody,
                cursor);
        }
    }
}

