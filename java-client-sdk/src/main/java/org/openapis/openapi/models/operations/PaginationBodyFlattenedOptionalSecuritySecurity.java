/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class PaginationBodyFlattenedOptionalSecuritySecurity {

    @SpeakeasyMetadata("security:scheme=true,type=apiKey,subtype=header,name=x-api-key")
    private Optional<String> paginationAuth;

    @JsonCreator
    public PaginationBodyFlattenedOptionalSecuritySecurity(
            Optional<String> paginationAuth) {
        Utils.checkNotNull(paginationAuth, "paginationAuth");
        this.paginationAuth = paginationAuth;
    }
    
    public PaginationBodyFlattenedOptionalSecuritySecurity() {
        this(Optional.empty());
    }

    @JsonIgnore
    public Optional<String> paginationAuth() {
        return paginationAuth;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PaginationBodyFlattenedOptionalSecuritySecurity withPaginationAuth(String paginationAuth) {
        Utils.checkNotNull(paginationAuth, "paginationAuth");
        this.paginationAuth = Optional.ofNullable(paginationAuth);
        return this;
    }

    public PaginationBodyFlattenedOptionalSecuritySecurity withPaginationAuth(Optional<String> paginationAuth) {
        Utils.checkNotNull(paginationAuth, "paginationAuth");
        this.paginationAuth = paginationAuth;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaginationBodyFlattenedOptionalSecuritySecurity other = (PaginationBodyFlattenedOptionalSecuritySecurity) o;
        return 
            Objects.deepEquals(this.paginationAuth, other.paginationAuth);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            paginationAuth);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaginationBodyFlattenedOptionalSecuritySecurity.class,
                "paginationAuth", paginationAuth);
    }
    
    public final static class Builder {
 
        private Optional<String> paginationAuth = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder paginationAuth(String paginationAuth) {
            Utils.checkNotNull(paginationAuth, "paginationAuth");
            this.paginationAuth = Optional.ofNullable(paginationAuth);
            return this;
        }

        public Builder paginationAuth(Optional<String> paginationAuth) {
            Utils.checkNotNull(paginationAuth, "paginationAuth");
            this.paginationAuth = paginationAuth;
            return this;
        }
        
        public PaginationBodyFlattenedOptionalSecuritySecurity build() {
            return new PaginationBodyFlattenedOptionalSecuritySecurity(
                paginationAuth);
        }
    }
}

