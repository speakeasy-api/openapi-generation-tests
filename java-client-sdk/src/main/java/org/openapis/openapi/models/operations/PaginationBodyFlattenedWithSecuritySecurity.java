/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class PaginationBodyFlattenedWithSecuritySecurity {

    @SpeakeasyMetadata("security:scheme=true,type=apiKey,subtype=header,name=x-api-key")
    private String paginationAuth;

    @JsonCreator
    public PaginationBodyFlattenedWithSecuritySecurity(
            String paginationAuth) {
        Utils.checkNotNull(paginationAuth, "paginationAuth");
        this.paginationAuth = paginationAuth;
    }

    @JsonIgnore
    public String paginationAuth() {
        return paginationAuth;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PaginationBodyFlattenedWithSecuritySecurity withPaginationAuth(String paginationAuth) {
        Utils.checkNotNull(paginationAuth, "paginationAuth");
        this.paginationAuth = paginationAuth;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaginationBodyFlattenedWithSecuritySecurity other = (PaginationBodyFlattenedWithSecuritySecurity) o;
        return 
            Objects.deepEquals(this.paginationAuth, other.paginationAuth);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            paginationAuth);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PaginationBodyFlattenedWithSecuritySecurity.class,
                "paginationAuth", paginationAuth);
    }
    
    public final static class Builder {
 
        private String paginationAuth;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder paginationAuth(String paginationAuth) {
            Utils.checkNotNull(paginationAuth, "paginationAuth");
            this.paginationAuth = paginationAuth;
            return this;
        }
        
        public PaginationBodyFlattenedWithSecuritySecurity build() {
            return new PaginationBodyFlattenedWithSecuritySecurity(
                paginationAuth);
        }
    }
}

