/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapis.openapi.models.errors.SDKError;
import org.openapis.openapi.utils.Utils;

public class PaginationCursorParamsRequestBuilder {

    private Long cursor;
    private Optional<String> serverURL = Optional.empty();
    private final SDKMethodInterfaces.MethodCallPaginationCursorParams sdk;

    public PaginationCursorParamsRequestBuilder(SDKMethodInterfaces.MethodCallPaginationCursorParams sdk) {
        this.sdk = sdk;
    }

    public PaginationCursorParamsRequestBuilder cursor(long cursor) {
        Utils.checkNotNull(cursor, "cursor");
        this.cursor = cursor;
        return this;
    }
                
    public PaginationCursorParamsRequestBuilder serverURL(String serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = Optional.of(serverURL);
        return this;
    }

    public PaginationCursorParamsRequestBuilder serverURL(Optional<String> serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = serverURL;
        return this;
    }

    public PaginationCursorParamsResponse call() throws Exception {

        return sdk.paginationCursorParams(
            cursor,
            serverURL);
    }
    
    /**
     * Returns a stream that performs next page calls till no more pages
     * are returned. Unlike the {@link #call()} method this method will
     * throw an {@link SDKError} if any page retrieval has an HTTP status 
     * code >= 300 (Note that 3XX is not an error range but will need 
     * special handling by the user if for example the HTTP client is 
     * not configured to follow redirects).
     * 
     * @throws {@link SDKError} if HTTP status code >= 300 is encountered
     **/  
    public Stream<PaginationCursorParamsResponse> callAsStream() {
        return Utils.stream(() -> Optional.of(call()), x -> {
            if (x.statusCode() >= 300) {
                byte[] body = Utils.toByteArrayAndClose(x.rawResponse().body());
                throw new SDKError(x.rawResponse(), x.statusCode(), x.contentType(), body);
            } else {
                return x.next();
            }
        });
    }

    /**
     * Returns a stream that performs next page calls till no more pages
     * are returned. The elements of the stream are the list elements of
     * each response. Unlike the {@link #call()} method this method will
     * throw an {@link SDKError} if any page retrieval has an HTTP status 
     * code >= 300 (Note that 3XX is not an error range but will need 
     * special handling by the user if for example the HTTP client is 
     * not configured to follow redirects).
     * 
     * @throws {@link SDKError} if HTTP status code >= 300 is encountered
     **/         
    public Stream<Long> callAsStreamUnwrapped() {
        return callAsStream()
            .flatMap(x -> x.res()
                           .stream()
                           .flatMap(y -> y.resultArray().stream()));
    }
}
