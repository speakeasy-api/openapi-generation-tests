/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.lang.Long;
import java.util.Optional;
import java.util.stream.Stream;
import org.openapis.openapi.models.errors.SDKError;
import org.openapis.openapi.utils.Utils;

public class ReactHookCombinedOptionsRequestBuilder {

    private Long page;
    private final SDKMethodInterfaces.MethodCallReactHookCombinedOptions sdk;

    public ReactHookCombinedOptionsRequestBuilder(SDKMethodInterfaces.MethodCallReactHookCombinedOptions sdk) {
        this.sdk = sdk;
    }

    public ReactHookCombinedOptionsRequestBuilder page(long page) {
        Utils.checkNotNull(page, "page");
        this.page = page;
        return this;
    }

    public ReactHookCombinedOptionsResponse call() throws Exception {

        return sdk.reactHookCombinedOptions(
            page);
    }
    
    /**
     * Returns a stream that performs next page calls till no more pages
     * are returned. Unlike the {@link #call()} method this method will
     * throw an {@link SDKError} if any page retrieval has an HTTP status 
     * code >= 300 (Note that 3XX is not an error range but will need 
     * special handling by the user if for example the HTTP client is 
     * not configured to follow redirects).
     * 
     * @throws {@link SDKError} if HTTP status code >= 300 is encountered
     **/  
    public Stream<ReactHookCombinedOptionsResponse> callAsStream() {
        return Utils.stream(() -> Optional.of(call()), x -> {
            if (x.statusCode() >= 300) {
                byte[] body = Utils.toByteArrayAndClose(x.rawResponse().body());
                throw new SDKError(x.rawResponse(), x.statusCode(), x.contentType(), body);
            } else {
                return x.next();
            }
        });
    }
}
