/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;

/**
 * RequestBodyPostMultipleContentTypesInlineFilteredRes - OK
 */

public class RequestBodyPostMultipleContentTypesInlineFilteredRes {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("json")
    private Optional<? extends java.util.Map<String, java.lang.Object>> json;

    public RequestBodyPostMultipleContentTypesInlineFilteredRes(
            @JsonProperty("json") Optional<? extends java.util.Map<String, java.lang.Object>> json) {
        Utils.checkNotNull(json, "json");
        this.json = json;
    }

    public Optional<? extends java.util.Map<String, java.lang.Object>> json() {
        return json;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public RequestBodyPostMultipleContentTypesInlineFilteredRes withJson(java.util.Map<String, java.lang.Object> json) {
        Utils.checkNotNull(json, "json");
        this.json = Optional.ofNullable(json);
        return this;
    }

    public RequestBodyPostMultipleContentTypesInlineFilteredRes withJson(Optional<? extends java.util.Map<String, java.lang.Object>> json) {
        Utils.checkNotNull(json, "json");
        this.json = json;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RequestBodyPostMultipleContentTypesInlineFilteredRes other = (RequestBodyPostMultipleContentTypesInlineFilteredRes) o;
        return 
            java.util.Objects.deepEquals(this.json, other.json);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            json);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RequestBodyPostMultipleContentTypesInlineFilteredRes.class,
                "json", json);
    }
    
    public final static class Builder {
 
        private Optional<? extends java.util.Map<String, java.lang.Object>> json = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder json(java.util.Map<String, java.lang.Object> json) {
            Utils.checkNotNull(json, "json");
            this.json = Optional.ofNullable(json);
            return this;
        }

        public Builder json(Optional<? extends java.util.Map<String, java.lang.Object>> json) {
            Utils.checkNotNull(json, "json");
            this.json = json;
            return this;
        }
        
        public RequestBodyPostMultipleContentTypesInlineFilteredRes build() {
            return new RequestBodyPostMultipleContentTypesInlineFilteredRes(
                json);
        }
    }
}

