/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class RequestBodyPutBytesWithParamsRequest {

    @SpeakeasyMetadata("request:mediaType=application/octet-stream")
    private byte[] requestBody;

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=queryStringParam")
    private String queryStringParam;

    @JsonCreator
    public RequestBodyPutBytesWithParamsRequest(
            byte[] requestBody,
            String queryStringParam) {
        Utils.checkNotNull(requestBody, "requestBody");
        Utils.checkNotNull(queryStringParam, "queryStringParam");
        this.requestBody = requestBody;
        this.queryStringParam = queryStringParam;
    }

    @JsonIgnore
    public byte[] requestBody() {
        return requestBody;
    }

    @JsonIgnore
    public String queryStringParam() {
        return queryStringParam;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public RequestBodyPutBytesWithParamsRequest withRequestBody(byte[] requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }

    public RequestBodyPutBytesWithParamsRequest withQueryStringParam(String queryStringParam) {
        Utils.checkNotNull(queryStringParam, "queryStringParam");
        this.queryStringParam = queryStringParam;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RequestBodyPutBytesWithParamsRequest other = (RequestBodyPutBytesWithParamsRequest) o;
        return 
            java.util.Objects.deepEquals(this.requestBody, other.requestBody) &&
            java.util.Objects.deepEquals(this.queryStringParam, other.queryStringParam);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            requestBody,
            queryStringParam);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RequestBodyPutBytesWithParamsRequest.class,
                "requestBody", requestBody,
                "queryStringParam", queryStringParam);
    }
    
    public final static class Builder {
 
        private byte[] requestBody;
 
        private String queryStringParam;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder requestBody(byte[] requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }

        public Builder queryStringParam(String queryStringParam) {
            Utils.checkNotNull(queryStringParam, "queryStringParam");
            this.queryStringParam = queryStringParam;
            return this;
        }
        
        public RequestBodyPutBytesWithParamsRequest build() {
            return new RequestBodyPutBytesWithParamsRequest(
                requestBody,
                queryStringParam);
        }
    }
}

