/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class StatusGetXSpeakeasyErrorsRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=statusCode")
    private long statusCode;

    @JsonCreator
    public StatusGetXSpeakeasyErrorsRequest(
            long statusCode) {
        Utils.checkNotNull(statusCode, "statusCode");
        this.statusCode = statusCode;
    }

    @JsonIgnore
    public long statusCode() {
        return statusCode;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public StatusGetXSpeakeasyErrorsRequest withStatusCode(long statusCode) {
        Utils.checkNotNull(statusCode, "statusCode");
        this.statusCode = statusCode;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        StatusGetXSpeakeasyErrorsRequest other = (StatusGetXSpeakeasyErrorsRequest) o;
        return 
            Objects.deepEquals(this.statusCode, other.statusCode);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            statusCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(StatusGetXSpeakeasyErrorsRequest.class,
                "statusCode", statusCode);
    }
    
    public final static class Builder {
 
        private Long statusCode;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder statusCode(long statusCode) {
            Utils.checkNotNull(statusCode, "statusCode");
            this.statusCode = statusCode;
            return this;
        }
        
        public StatusGetXSpeakeasyErrorsRequest build() {
            return new StatusGetXSpeakeasyErrorsRequest(
                statusCode);
        }
    }
}

