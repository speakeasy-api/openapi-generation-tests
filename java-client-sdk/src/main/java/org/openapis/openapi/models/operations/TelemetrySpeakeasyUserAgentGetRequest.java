/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class TelemetrySpeakeasyUserAgentGetRequest {

    @SpeakeasyMetadata("header:style=simple,explode=false,name=User-Agent")
    private String userAgent;

    @JsonCreator
    public TelemetrySpeakeasyUserAgentGetRequest(
            String userAgent) {
        Utils.checkNotNull(userAgent, "userAgent");
        this.userAgent = userAgent;
    }

    @JsonIgnore
    public String userAgent() {
        return userAgent;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TelemetrySpeakeasyUserAgentGetRequest withUserAgent(String userAgent) {
        Utils.checkNotNull(userAgent, "userAgent");
        this.userAgent = userAgent;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TelemetrySpeakeasyUserAgentGetRequest other = (TelemetrySpeakeasyUserAgentGetRequest) o;
        return 
            java.util.Objects.deepEquals(this.userAgent, other.userAgent);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            userAgent);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TelemetrySpeakeasyUserAgentGetRequest.class,
                "userAgent", userAgent);
    }
    
    public final static class Builder {
 
        private String userAgent;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder userAgent(String userAgent) {
            Utils.checkNotNull(userAgent, "userAgent");
            this.userAgent = userAgent;
            return this;
        }
        
        public TelemetrySpeakeasyUserAgentGetRequest build() {
            return new TelemetrySpeakeasyUserAgentGetRequest(
                userAgent);
        }
    }
}

