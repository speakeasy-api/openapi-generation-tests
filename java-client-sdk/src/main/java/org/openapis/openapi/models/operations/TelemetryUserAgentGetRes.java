/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import org.openapis.openapi.utils.Utils;

/**
 * TelemetryUserAgentGetRes - OK
 */

public class TelemetryUserAgentGetRes {

    @JsonProperty("headers")
    private Map<String, String> headers;

    @JsonCreator
    public TelemetryUserAgentGetRes(
            @JsonProperty("headers") Map<String, String> headers) {
        headers = Utils.emptyMapIfNull(headers);
        this.headers = headers;
    }

    @JsonIgnore
    public Map<String, String> headers() {
        return headers;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TelemetryUserAgentGetRes withHeaders(Map<String, String> headers) {
        Utils.checkNotNull(headers, "headers");
        this.headers = headers;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TelemetryUserAgentGetRes other = (TelemetryUserAgentGetRes) o;
        return 
            Objects.deepEquals(this.headers, other.headers);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            headers);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TelemetryUserAgentGetRes.class,
                "headers", headers);
    }
    
    public final static class Builder {
 
        private Map<String, String> headers;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder headers(Map<String, String> headers) {
            Utils.checkNotNull(headers, "headers");
            this.headers = headers;
            return this;
        }
        
        public TelemetryUserAgentGetRes build() {
            return new TelemetryUserAgentGetRes(
                headers);
        }
    }
}

