/* 
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;

public class TestHooksRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=someParam")
    private String someParam;

    @JsonCreator
    public TestHooksRequest(
            String someParam) {
        Utils.checkNotNull(someParam, "someParam");
        this.someParam = someParam;
    }

    @JsonIgnore
    public String someParam() {
        return someParam;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TestHooksRequest withSomeParam(String someParam) {
        Utils.checkNotNull(someParam, "someParam");
        this.someParam = someParam;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TestHooksRequest other = (TestHooksRequest) o;
        return 
            java.util.Objects.deepEquals(this.someParam, other.someParam);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            someParam);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TestHooksRequest.class,
                "someParam", someParam);
    }
    
    public final static class Builder {
 
        private String someParam;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder someParam(String someParam) {
            Utils.checkNotNull(someParam, "someParam");
            this.someParam = someParam;
            return this;
        }
        
        public TestHooksRequest build() {
            return new TestHooksRequest(
                someParam);
        }
    }
}

