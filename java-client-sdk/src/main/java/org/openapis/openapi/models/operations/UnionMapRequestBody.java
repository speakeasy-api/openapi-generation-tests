/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import org.openapis.openapi.models.shared.OneOfPrimitives;
import org.openapis.openapi.utils.Utils;


public class UnionMapRequestBody {

    @JsonProperty("input")
    private Map<String, OneOfPrimitives> input;

    @JsonCreator
    public UnionMapRequestBody(
            @JsonProperty("input") Map<String, OneOfPrimitives> input) {
        input = Utils.emptyMapIfNull(input);
        this.input = input;
    }

    @JsonIgnore
    public Map<String, OneOfPrimitives> input() {
        return input;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UnionMapRequestBody withInput(Map<String, OneOfPrimitives> input) {
        Utils.checkNotNull(input, "input");
        this.input = input;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UnionMapRequestBody other = (UnionMapRequestBody) o;
        return 
            Objects.deepEquals(this.input, other.input);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            input);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UnionMapRequestBody.class,
                "input", input);
    }
    
    public final static class Builder {
 
        private Map<String, OneOfPrimitives> input;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder input(Map<String, OneOfPrimitives> input) {
            Utils.checkNotNull(input, "input");
            this.input = input;
            return this;
        }
        
        public UnionMapRequestBody build() {
            return new UnionMapRequestBody(
                input);
        }
    }
}

