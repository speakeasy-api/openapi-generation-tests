/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.utils.SpeakeasyMetadata;
import org.openapis.openapi.utils.Utils;


public class UpdateResourceRequest {

    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=augment")
    private String augment;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=resourceId")
    private String resourceId;

    @JsonCreator
    public UpdateResourceRequest(
            String augment,
            String resourceId) {
        Utils.checkNotNull(augment, "augment");
        Utils.checkNotNull(resourceId, "resourceId");
        this.augment = augment;
        this.resourceId = resourceId;
    }

    @JsonIgnore
    public String augment() {
        return augment;
    }

    @JsonIgnore
    public String resourceId() {
        return resourceId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UpdateResourceRequest withAugment(String augment) {
        Utils.checkNotNull(augment, "augment");
        this.augment = augment;
        return this;
    }

    public UpdateResourceRequest withResourceId(String resourceId) {
        Utils.checkNotNull(resourceId, "resourceId");
        this.resourceId = resourceId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateResourceRequest other = (UpdateResourceRequest) o;
        return 
            Objects.deepEquals(this.augment, other.augment) &&
            Objects.deepEquals(this.resourceId, other.resourceId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            augment,
            resourceId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateResourceRequest.class,
                "augment", augment,
                "resourceId", resourceId);
    }
    
    public final static class Builder {
 
        private String augment;
 
        private String resourceId;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder augment(String augment) {
            Utils.checkNotNull(augment, "augment");
            this.augment = augment;
            return this;
        }

        public Builder resourceId(String resourceId) {
            Utils.checkNotNull(resourceId, "resourceId");
            this.resourceId = resourceId;
            return this;
        }
        
        public UpdateResourceRequest build() {
            return new UpdateResourceRequest(
                augment,
                resourceId);
        }
    }
}

