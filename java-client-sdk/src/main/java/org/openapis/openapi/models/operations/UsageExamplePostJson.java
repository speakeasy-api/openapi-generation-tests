/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.models.shared.FakerCamelCasePropertyNameStrings;
import org.openapis.openapi.models.shared.FakerFormattedStrings;
import org.openapis.openapi.models.shared.FakerKebobCasePropertyNameStrings;
import org.openapis.openapi.models.shared.FakerPascalCasePropertyNameStrings;
import org.openapis.openapi.models.shared.FakerSnakeCasePropertyNameStrings;
import org.openapis.openapi.models.shared.SimpleObject;
import org.openapis.openapi.utils.Utils;


public class UsageExamplePostJson {

    /**
     * A set of strings with camel case fieldnames that lead to relevant examples being generated for them
     */
    @JsonProperty("fakerCamelCasePropertyNameStrings")
    private FakerCamelCasePropertyNameStrings fakerCamelCasePropertyNameStrings;

    /**
     * A set of strings with format values that lead to relevant examples being generated for them
     */
    @JsonProperty("fakerFormattedStrings")
    private FakerFormattedStrings fakerFormattedStrings;

    /**
     * A set of strings with kebob case fieldnames that lead to relevant examples being generated for them
     */
    @JsonProperty("fakerKebobCasePropertyNameStrings")
    private FakerKebobCasePropertyNameStrings fakerKebobCasePropertyNameStrings;

    /**
     * A set of strings with pascal case fieldnames that lead to relevant examples being generated for them
     */
    @JsonProperty("fakerPascalCasePropertyNameStrings")
    private FakerPascalCasePropertyNameStrings fakerPascalCasePropertyNameStrings;

    /**
     * A set of strings with snake case fieldnames that lead to relevant examples being generated for them
     */
    @JsonProperty("fakerSnakeCasePropertyNameStrings")
    private FakerSnakeCasePropertyNameStrings fakerSnakeCasePropertyNameStrings;

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * https://speakeasy.com/docs - A link to the external docs.
     */
    @JsonProperty("simpleObject")
    private SimpleObject simpleObject;

    @JsonCreator
    public UsageExamplePostJson(
            @JsonProperty("fakerCamelCasePropertyNameStrings") FakerCamelCasePropertyNameStrings fakerCamelCasePropertyNameStrings,
            @JsonProperty("fakerFormattedStrings") FakerFormattedStrings fakerFormattedStrings,
            @JsonProperty("fakerKebobCasePropertyNameStrings") FakerKebobCasePropertyNameStrings fakerKebobCasePropertyNameStrings,
            @JsonProperty("fakerPascalCasePropertyNameStrings") FakerPascalCasePropertyNameStrings fakerPascalCasePropertyNameStrings,
            @JsonProperty("fakerSnakeCasePropertyNameStrings") FakerSnakeCasePropertyNameStrings fakerSnakeCasePropertyNameStrings,
            @JsonProperty("simpleObject") SimpleObject simpleObject) {
        Utils.checkNotNull(fakerCamelCasePropertyNameStrings, "fakerCamelCasePropertyNameStrings");
        Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
        Utils.checkNotNull(fakerKebobCasePropertyNameStrings, "fakerKebobCasePropertyNameStrings");
        Utils.checkNotNull(fakerPascalCasePropertyNameStrings, "fakerPascalCasePropertyNameStrings");
        Utils.checkNotNull(fakerSnakeCasePropertyNameStrings, "fakerSnakeCasePropertyNameStrings");
        Utils.checkNotNull(simpleObject, "simpleObject");
        this.fakerCamelCasePropertyNameStrings = fakerCamelCasePropertyNameStrings;
        this.fakerFormattedStrings = fakerFormattedStrings;
        this.fakerKebobCasePropertyNameStrings = fakerKebobCasePropertyNameStrings;
        this.fakerPascalCasePropertyNameStrings = fakerPascalCasePropertyNameStrings;
        this.fakerSnakeCasePropertyNameStrings = fakerSnakeCasePropertyNameStrings;
        this.simpleObject = simpleObject;
    }

    /**
     * A set of strings with camel case fieldnames that lead to relevant examples being generated for them
     */
    @JsonIgnore
    public FakerCamelCasePropertyNameStrings fakerCamelCasePropertyNameStrings() {
        return fakerCamelCasePropertyNameStrings;
    }

    /**
     * A set of strings with format values that lead to relevant examples being generated for them
     */
    @JsonIgnore
    public FakerFormattedStrings fakerFormattedStrings() {
        return fakerFormattedStrings;
    }

    /**
     * A set of strings with kebob case fieldnames that lead to relevant examples being generated for them
     */
    @JsonIgnore
    public FakerKebobCasePropertyNameStrings fakerKebobCasePropertyNameStrings() {
        return fakerKebobCasePropertyNameStrings;
    }

    /**
     * A set of strings with pascal case fieldnames that lead to relevant examples being generated for them
     */
    @JsonIgnore
    public FakerPascalCasePropertyNameStrings fakerPascalCasePropertyNameStrings() {
        return fakerPascalCasePropertyNameStrings;
    }

    /**
     * A set of strings with snake case fieldnames that lead to relevant examples being generated for them
     */
    @JsonIgnore
    public FakerSnakeCasePropertyNameStrings fakerSnakeCasePropertyNameStrings() {
        return fakerSnakeCasePropertyNameStrings;
    }

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * https://speakeasy.com/docs - A link to the external docs.
     */
    @JsonIgnore
    public SimpleObject simpleObject() {
        return simpleObject;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * A set of strings with camel case fieldnames that lead to relevant examples being generated for them
     */
    public UsageExamplePostJson withFakerCamelCasePropertyNameStrings(FakerCamelCasePropertyNameStrings fakerCamelCasePropertyNameStrings) {
        Utils.checkNotNull(fakerCamelCasePropertyNameStrings, "fakerCamelCasePropertyNameStrings");
        this.fakerCamelCasePropertyNameStrings = fakerCamelCasePropertyNameStrings;
        return this;
    }

    /**
     * A set of strings with format values that lead to relevant examples being generated for them
     */
    public UsageExamplePostJson withFakerFormattedStrings(FakerFormattedStrings fakerFormattedStrings) {
        Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
        this.fakerFormattedStrings = fakerFormattedStrings;
        return this;
    }

    /**
     * A set of strings with kebob case fieldnames that lead to relevant examples being generated for them
     */
    public UsageExamplePostJson withFakerKebobCasePropertyNameStrings(FakerKebobCasePropertyNameStrings fakerKebobCasePropertyNameStrings) {
        Utils.checkNotNull(fakerKebobCasePropertyNameStrings, "fakerKebobCasePropertyNameStrings");
        this.fakerKebobCasePropertyNameStrings = fakerKebobCasePropertyNameStrings;
        return this;
    }

    /**
     * A set of strings with pascal case fieldnames that lead to relevant examples being generated for them
     */
    public UsageExamplePostJson withFakerPascalCasePropertyNameStrings(FakerPascalCasePropertyNameStrings fakerPascalCasePropertyNameStrings) {
        Utils.checkNotNull(fakerPascalCasePropertyNameStrings, "fakerPascalCasePropertyNameStrings");
        this.fakerPascalCasePropertyNameStrings = fakerPascalCasePropertyNameStrings;
        return this;
    }

    /**
     * A set of strings with snake case fieldnames that lead to relevant examples being generated for them
     */
    public UsageExamplePostJson withFakerSnakeCasePropertyNameStrings(FakerSnakeCasePropertyNameStrings fakerSnakeCasePropertyNameStrings) {
        Utils.checkNotNull(fakerSnakeCasePropertyNameStrings, "fakerSnakeCasePropertyNameStrings");
        this.fakerSnakeCasePropertyNameStrings = fakerSnakeCasePropertyNameStrings;
        return this;
    }

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * https://speakeasy.com/docs - A link to the external docs.
     */
    public UsageExamplePostJson withSimpleObject(SimpleObject simpleObject) {
        Utils.checkNotNull(simpleObject, "simpleObject");
        this.simpleObject = simpleObject;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UsageExamplePostJson other = (UsageExamplePostJson) o;
        return 
            Objects.deepEquals(this.fakerCamelCasePropertyNameStrings, other.fakerCamelCasePropertyNameStrings) &&
            Objects.deepEquals(this.fakerFormattedStrings, other.fakerFormattedStrings) &&
            Objects.deepEquals(this.fakerKebobCasePropertyNameStrings, other.fakerKebobCasePropertyNameStrings) &&
            Objects.deepEquals(this.fakerPascalCasePropertyNameStrings, other.fakerPascalCasePropertyNameStrings) &&
            Objects.deepEquals(this.fakerSnakeCasePropertyNameStrings, other.fakerSnakeCasePropertyNameStrings) &&
            Objects.deepEquals(this.simpleObject, other.simpleObject);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            fakerCamelCasePropertyNameStrings,
            fakerFormattedStrings,
            fakerKebobCasePropertyNameStrings,
            fakerPascalCasePropertyNameStrings,
            fakerSnakeCasePropertyNameStrings,
            simpleObject);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UsageExamplePostJson.class,
                "fakerCamelCasePropertyNameStrings", fakerCamelCasePropertyNameStrings,
                "fakerFormattedStrings", fakerFormattedStrings,
                "fakerKebobCasePropertyNameStrings", fakerKebobCasePropertyNameStrings,
                "fakerPascalCasePropertyNameStrings", fakerPascalCasePropertyNameStrings,
                "fakerSnakeCasePropertyNameStrings", fakerSnakeCasePropertyNameStrings,
                "simpleObject", simpleObject);
    }
    
    public final static class Builder {
 
        private FakerCamelCasePropertyNameStrings fakerCamelCasePropertyNameStrings;
 
        private FakerFormattedStrings fakerFormattedStrings;
 
        private FakerKebobCasePropertyNameStrings fakerKebobCasePropertyNameStrings;
 
        private FakerPascalCasePropertyNameStrings fakerPascalCasePropertyNameStrings;
 
        private FakerSnakeCasePropertyNameStrings fakerSnakeCasePropertyNameStrings;
 
        private SimpleObject simpleObject;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * A set of strings with camel case fieldnames that lead to relevant examples being generated for them
         */
        public Builder fakerCamelCasePropertyNameStrings(FakerCamelCasePropertyNameStrings fakerCamelCasePropertyNameStrings) {
            Utils.checkNotNull(fakerCamelCasePropertyNameStrings, "fakerCamelCasePropertyNameStrings");
            this.fakerCamelCasePropertyNameStrings = fakerCamelCasePropertyNameStrings;
            return this;
        }

        /**
         * A set of strings with format values that lead to relevant examples being generated for them
         */
        public Builder fakerFormattedStrings(FakerFormattedStrings fakerFormattedStrings) {
            Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
            this.fakerFormattedStrings = fakerFormattedStrings;
            return this;
        }

        /**
         * A set of strings with kebob case fieldnames that lead to relevant examples being generated for them
         */
        public Builder fakerKebobCasePropertyNameStrings(FakerKebobCasePropertyNameStrings fakerKebobCasePropertyNameStrings) {
            Utils.checkNotNull(fakerKebobCasePropertyNameStrings, "fakerKebobCasePropertyNameStrings");
            this.fakerKebobCasePropertyNameStrings = fakerKebobCasePropertyNameStrings;
            return this;
        }

        /**
         * A set of strings with pascal case fieldnames that lead to relevant examples being generated for them
         */
        public Builder fakerPascalCasePropertyNameStrings(FakerPascalCasePropertyNameStrings fakerPascalCasePropertyNameStrings) {
            Utils.checkNotNull(fakerPascalCasePropertyNameStrings, "fakerPascalCasePropertyNameStrings");
            this.fakerPascalCasePropertyNameStrings = fakerPascalCasePropertyNameStrings;
            return this;
        }

        /**
         * A set of strings with snake case fieldnames that lead to relevant examples being generated for them
         */
        public Builder fakerSnakeCasePropertyNameStrings(FakerSnakeCasePropertyNameStrings fakerSnakeCasePropertyNameStrings) {
            Utils.checkNotNull(fakerSnakeCasePropertyNameStrings, "fakerSnakeCasePropertyNameStrings");
            this.fakerSnakeCasePropertyNameStrings = fakerSnakeCasePropertyNameStrings;
            return this;
        }

        /**
         * A simple object that uses all our supported primitive types and enums and has optional properties.
         * https://speakeasy.com/docs - A link to the external docs.
         */
        public Builder simpleObject(SimpleObject simpleObject) {
            Utils.checkNotNull(simpleObject, "simpleObject");
            this.simpleObject = simpleObject;
            return this;
        }
        
        public UsageExamplePostJson build() {
            return new UsageExamplePostJson(
                fakerCamelCasePropertyNameStrings,
                fakerFormattedStrings,
                fakerKebobCasePropertyNameStrings,
                fakerPascalCasePropertyNameStrings,
                fakerSnakeCasePropertyNameStrings,
                simpleObject);
        }
    }
}

