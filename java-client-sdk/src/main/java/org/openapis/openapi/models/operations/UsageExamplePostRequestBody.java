/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;

/**
 * UsageExamplePostRequestBody - A request body that contains fields with different formats for testing example generation
 */

public class UsageExamplePostRequestBody {

    /**
     * A set of strings with format values that lead to relevant examples being generated for them
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fakerFormattedStrings")
    private Optional<? extends org.openapis.openapi.models.shared.FakerFormattedStrings> fakerFormattedStrings;

    /**
     * A set of strings with fieldnames that lead to relevant examples being generated for them
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fakerStrings")
    private Optional<? extends org.openapis.openapi.models.shared.FakerStrings> fakerStrings;

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * https://docs.speakeasyapi.dev - A link to the external docs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("simpleObject")
    private Optional<? extends org.openapis.openapi.models.shared.SimpleObject> simpleObject;

    public UsageExamplePostRequestBody(
            @JsonProperty("fakerFormattedStrings") Optional<? extends org.openapis.openapi.models.shared.FakerFormattedStrings> fakerFormattedStrings,
            @JsonProperty("fakerStrings") Optional<? extends org.openapis.openapi.models.shared.FakerStrings> fakerStrings,
            @JsonProperty("simpleObject") Optional<? extends org.openapis.openapi.models.shared.SimpleObject> simpleObject) {
        Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
        Utils.checkNotNull(fakerStrings, "fakerStrings");
        Utils.checkNotNull(simpleObject, "simpleObject");
        this.fakerFormattedStrings = fakerFormattedStrings;
        this.fakerStrings = fakerStrings;
        this.simpleObject = simpleObject;
    }

    /**
     * A set of strings with format values that lead to relevant examples being generated for them
     */
    public Optional<? extends org.openapis.openapi.models.shared.FakerFormattedStrings> fakerFormattedStrings() {
        return fakerFormattedStrings;
    }

    /**
     * A set of strings with fieldnames that lead to relevant examples being generated for them
     */
    public Optional<? extends org.openapis.openapi.models.shared.FakerStrings> fakerStrings() {
        return fakerStrings;
    }

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * https://docs.speakeasyapi.dev - A link to the external docs.
     */
    public Optional<? extends org.openapis.openapi.models.shared.SimpleObject> simpleObject() {
        return simpleObject;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * A set of strings with format values that lead to relevant examples being generated for them
     */
    public UsageExamplePostRequestBody withFakerFormattedStrings(org.openapis.openapi.models.shared.FakerFormattedStrings fakerFormattedStrings) {
        Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
        this.fakerFormattedStrings = Optional.ofNullable(fakerFormattedStrings);
        return this;
    }

    /**
     * A set of strings with format values that lead to relevant examples being generated for them
     */
    public UsageExamplePostRequestBody withFakerFormattedStrings(Optional<? extends org.openapis.openapi.models.shared.FakerFormattedStrings> fakerFormattedStrings) {
        Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
        this.fakerFormattedStrings = fakerFormattedStrings;
        return this;
    }

    /**
     * A set of strings with fieldnames that lead to relevant examples being generated for them
     */
    public UsageExamplePostRequestBody withFakerStrings(org.openapis.openapi.models.shared.FakerStrings fakerStrings) {
        Utils.checkNotNull(fakerStrings, "fakerStrings");
        this.fakerStrings = Optional.ofNullable(fakerStrings);
        return this;
    }

    /**
     * A set of strings with fieldnames that lead to relevant examples being generated for them
     */
    public UsageExamplePostRequestBody withFakerStrings(Optional<? extends org.openapis.openapi.models.shared.FakerStrings> fakerStrings) {
        Utils.checkNotNull(fakerStrings, "fakerStrings");
        this.fakerStrings = fakerStrings;
        return this;
    }

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * https://docs.speakeasyapi.dev - A link to the external docs.
     */
    public UsageExamplePostRequestBody withSimpleObject(org.openapis.openapi.models.shared.SimpleObject simpleObject) {
        Utils.checkNotNull(simpleObject, "simpleObject");
        this.simpleObject = Optional.ofNullable(simpleObject);
        return this;
    }

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * https://docs.speakeasyapi.dev - A link to the external docs.
     */
    public UsageExamplePostRequestBody withSimpleObject(Optional<? extends org.openapis.openapi.models.shared.SimpleObject> simpleObject) {
        Utils.checkNotNull(simpleObject, "simpleObject");
        this.simpleObject = simpleObject;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UsageExamplePostRequestBody other = (UsageExamplePostRequestBody) o;
        return 
            java.util.Objects.deepEquals(this.fakerFormattedStrings, other.fakerFormattedStrings) &&
            java.util.Objects.deepEquals(this.fakerStrings, other.fakerStrings) &&
            java.util.Objects.deepEquals(this.simpleObject, other.simpleObject);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            fakerFormattedStrings,
            fakerStrings,
            simpleObject);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UsageExamplePostRequestBody.class,
                "fakerFormattedStrings", fakerFormattedStrings,
                "fakerStrings", fakerStrings,
                "simpleObject", simpleObject);
    }
    
    public final static class Builder {
 
        private Optional<? extends org.openapis.openapi.models.shared.FakerFormattedStrings> fakerFormattedStrings = Optional.empty();
 
        private Optional<? extends org.openapis.openapi.models.shared.FakerStrings> fakerStrings = Optional.empty();
 
        private Optional<? extends org.openapis.openapi.models.shared.SimpleObject> simpleObject = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * A set of strings with format values that lead to relevant examples being generated for them
         */
        public Builder fakerFormattedStrings(org.openapis.openapi.models.shared.FakerFormattedStrings fakerFormattedStrings) {
            Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
            this.fakerFormattedStrings = Optional.ofNullable(fakerFormattedStrings);
            return this;
        }

        /**
         * A set of strings with format values that lead to relevant examples being generated for them
         */
        public Builder fakerFormattedStrings(Optional<? extends org.openapis.openapi.models.shared.FakerFormattedStrings> fakerFormattedStrings) {
            Utils.checkNotNull(fakerFormattedStrings, "fakerFormattedStrings");
            this.fakerFormattedStrings = fakerFormattedStrings;
            return this;
        }

        /**
         * A set of strings with fieldnames that lead to relevant examples being generated for them
         */
        public Builder fakerStrings(org.openapis.openapi.models.shared.FakerStrings fakerStrings) {
            Utils.checkNotNull(fakerStrings, "fakerStrings");
            this.fakerStrings = Optional.ofNullable(fakerStrings);
            return this;
        }

        /**
         * A set of strings with fieldnames that lead to relevant examples being generated for them
         */
        public Builder fakerStrings(Optional<? extends org.openapis.openapi.models.shared.FakerStrings> fakerStrings) {
            Utils.checkNotNull(fakerStrings, "fakerStrings");
            this.fakerStrings = fakerStrings;
            return this;
        }

        /**
         * A simple object that uses all our supported primitive types and enums and has optional properties.
         * https://docs.speakeasyapi.dev - A link to the external docs.
         */
        public Builder simpleObject(org.openapis.openapi.models.shared.SimpleObject simpleObject) {
            Utils.checkNotNull(simpleObject, "simpleObject");
            this.simpleObject = Optional.ofNullable(simpleObject);
            return this;
        }

        /**
         * A simple object that uses all our supported primitive types and enums and has optional properties.
         * https://docs.speakeasyapi.dev - A link to the external docs.
         */
        public Builder simpleObject(Optional<? extends org.openapis.openapi.models.shared.SimpleObject> simpleObject) {
            Utils.checkNotNull(simpleObject, "simpleObject");
            this.simpleObject = simpleObject;
            return this;
        }
        
        public UsageExamplePostRequestBody build() {
            return new UsageExamplePostRequestBody(
                fakerFormattedStrings,
                fakerStrings,
                simpleObject);
        }
    }
}

