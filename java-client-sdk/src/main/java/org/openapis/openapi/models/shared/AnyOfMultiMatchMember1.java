/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapis.openapi.utils.Utils;


public class AnyOfMultiMatchMember1 {

    @JsonProperty("description")
    private String description;

    @JsonProperty("name")
    private String name;

    @JsonCreator
    public AnyOfMultiMatchMember1(
            @JsonProperty("description") String description,
            @JsonProperty("name") String name) {
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(name, "name");
        this.description = description;
        this.name = name;
    }

    @JsonIgnore
    public String description() {
        return description;
    }

    @JsonIgnore
    public String name() {
        return name;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public AnyOfMultiMatchMember1 withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public AnyOfMultiMatchMember1 withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AnyOfMultiMatchMember1 other = (AnyOfMultiMatchMember1) o;
        return 
            Objects.deepEquals(this.description, other.description) &&
            Objects.deepEquals(this.name, other.name);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            description,
            name);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AnyOfMultiMatchMember1.class,
                "description", description,
                "name", name);
    }
    
    public final static class Builder {
 
        private String description;
 
        private String name;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }
        
        public AnyOfMultiMatchMember1 build() {
            return new AnyOfMultiMatchMember1(
                description,
                name);
        }
    }
}

