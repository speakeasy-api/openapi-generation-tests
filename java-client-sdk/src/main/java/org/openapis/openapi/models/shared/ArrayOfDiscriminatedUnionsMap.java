/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.openapis.openapi.utils.Utils;


public class ArrayOfDiscriminatedUnionsMap {

    @JsonProperty("arrayMap")
    private Map<String, List<StronglyTypedOneOfObject>> arrayMap;

    @JsonCreator
    public ArrayOfDiscriminatedUnionsMap(
            @JsonProperty("arrayMap") Map<String, List<StronglyTypedOneOfObject>> arrayMap) {
        arrayMap = Utils.emptyMapIfNull(arrayMap);
        this.arrayMap = arrayMap;
    }

    @JsonIgnore
    public Map<String, List<StronglyTypedOneOfObject>> arrayMap() {
        return arrayMap;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ArrayOfDiscriminatedUnionsMap withArrayMap(Map<String, List<StronglyTypedOneOfObject>> arrayMap) {
        Utils.checkNotNull(arrayMap, "arrayMap");
        this.arrayMap = arrayMap;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ArrayOfDiscriminatedUnionsMap other = (ArrayOfDiscriminatedUnionsMap) o;
        return 
            Objects.deepEquals(this.arrayMap, other.arrayMap);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            arrayMap);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ArrayOfDiscriminatedUnionsMap.class,
                "arrayMap", arrayMap);
    }
    
    public final static class Builder {
 
        private Map<String, List<StronglyTypedOneOfObject>> arrayMap;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder arrayMap(Map<String, List<StronglyTypedOneOfObject>> arrayMap) {
            Utils.checkNotNull(arrayMap, "arrayMap");
            this.arrayMap = arrayMap;
            return this;
        }
        
        public ArrayOfDiscriminatedUnionsMap build() {
            return new ArrayOfDiscriminatedUnionsMap(
                arrayMap);
        }
    }
}

