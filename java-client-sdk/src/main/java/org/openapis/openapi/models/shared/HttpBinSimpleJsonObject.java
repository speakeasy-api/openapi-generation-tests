/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapis.openapi.utils.Utils;


public class HttpBinSimpleJsonObject {

    @JsonProperty("slideshow")
    private Slideshow slideshow;

    @JsonCreator
    public HttpBinSimpleJsonObject(
            @JsonProperty("slideshow") Slideshow slideshow) {
        Utils.checkNotNull(slideshow, "slideshow");
        this.slideshow = slideshow;
    }

    @JsonIgnore
    public Slideshow slideshow() {
        return slideshow;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public HttpBinSimpleJsonObject withSlideshow(Slideshow slideshow) {
        Utils.checkNotNull(slideshow, "slideshow");
        this.slideshow = slideshow;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HttpBinSimpleJsonObject other = (HttpBinSimpleJsonObject) o;
        return 
            java.util.Objects.deepEquals(this.slideshow, other.slideshow);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            slideshow);
    }
    
    @Override
    public String toString() {
        return Utils.toString(HttpBinSimpleJsonObject.class,
                "slideshow", slideshow);
    }
    
    public final static class Builder {
 
        private Slideshow slideshow;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder slideshow(Slideshow slideshow) {
            Utils.checkNotNull(slideshow, "slideshow");
            this.slideshow = slideshow;
            return this;
        }
        
        public HttpBinSimpleJsonObject build() {
            return new HttpBinSimpleJsonObject(
                slideshow);
        }
    }
}

