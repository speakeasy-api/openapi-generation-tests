/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.utils.LazySingletonValue;
import org.openapis.openapi.utils.Utils;
import org.openapitools.jackson.nullable.JsonNullable;


public class ObjectWithNullEnums {

    @JsonInclude(Include.ALWAYS)
    @JsonProperty("nullEnum")
    private Optional<? extends Object> nullEnum;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optNullEnum")
    private JsonNullable<? extends Object> optNullEnum;

    @JsonCreator
    public ObjectWithNullEnums() {
        
        this.nullEnum = Builder._SINGLETON_VALUE_NullEnum.value();
        this.optNullEnum = Builder._SINGLETON_VALUE_OptNullEnum.value();
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Object> nullEnum() {
        return (Optional<Object>) nullEnum;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Object> optNullEnum() {
        return (JsonNullable<Object>) optNullEnum;
    }

    public final static Builder builder() {
        return new Builder();
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ObjectWithNullEnums other = (ObjectWithNullEnums) o;
        return 
            Objects.deepEquals(this.nullEnum, other.nullEnum) &&
            Objects.deepEquals(this.optNullEnum, other.optNullEnum);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            nullEnum,
            optNullEnum);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ObjectWithNullEnums.class,
                "nullEnum", nullEnum,
                "optNullEnum", optNullEnum);
    }
    
    public final static class Builder {  
        
        private Builder() {
          // force use of static builder() method
        }
        
        public ObjectWithNullEnums build() {
            return new ObjectWithNullEnums(
                );
        }

        private static final LazySingletonValue<Optional<? extends Object>> _SINGLETON_VALUE_NullEnum =
                new LazySingletonValue<>(
                        "nullEnum",
                        "null",
                        new TypeReference<Optional<? extends Object>>() {});

        private static final LazySingletonValue<JsonNullable<? extends Object>> _SINGLETON_VALUE_OptNullEnum =
                new LazySingletonValue<>(
                        "optNullEnum",
                        "null",
                        new TypeReference<JsonNullable<? extends Object>>() {});
    }
}

