/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Objects;
import java.util.Optional;

/**
 * SimpleObjectWithNonStandardTypeNameIntEnum - An integer enum property.
 */
public enum SimpleObjectWithNonStandardTypeNameIntEnum {
    First(1L),
    Second(2L),
    Third(3L);

    @JsonValue
    private final long value;

    private SimpleObjectWithNonStandardTypeNameIntEnum(long value) {
        this.value = value;
    }
    
    public long value() {
        return value;
    }
    
    public static Optional<SimpleObjectWithNonStandardTypeNameIntEnum> fromValue(long value) {
        for (SimpleObjectWithNonStandardTypeNameIntEnum o: SimpleObjectWithNonStandardTypeNameIntEnum.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}
