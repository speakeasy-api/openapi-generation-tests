/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;
import org.openapis.openapi.models.operations.BasicAuthResponse;
import org.openapis.openapi.models.operations.NoAuthResponse;
import org.openapis.openapi.models.operations.ApiKeyAuthHoistedResponse;
import org.openapis.openapi.models.operations.ApiKeyOrBearerAuthResponse;
import org.openapis.openapi.models.operations.ApiKeyOrBearerAuthSecurity;
import org.openapis.openapi.models.operations.BasicAuthSecurity;
import org.openapis.openapi.models.components.Security;

public class AuthTests {
    @Test
    void testNoAuth() throws Exception {
        CommonHelpers.recordTest("auth-no-auth");

        SDK s = SDK.builder().build();
        assertNotNull(s);

        NoAuthResponse res = s.auth().noAuthDirect();

        assertNotNull(res);
        assertEquals(200, res.statusCode());
    }

    @Test
    void testBasicAuth() throws Exception {
        CommonHelpers.recordTest("auth-basic-auth");

        SDK s = SDK.builder().build();
        assertNotNull(s);

        BasicAuthResponse res = s.auth().basicAuth()
                .security(BasicAuthSecurity.builder()
                        .username("testUser")
                        .password("testPass")
                        .build())
                .user("testUser")
                .passwd("testPass")
                .call();

        assertNotNull(res);
        assertEquals(200, res.statusCode());
        assertTrue(res.user().get().authenticated());
    }

    @Test
    void testApiKeyAuthGlobal() throws Exception {
        CommonHelpers.recordTest("auth-api-key-auth-global");

        SDK s = SDK.builder()
                .security(Security.builder()
                                .apiKeyAuth("Bearer testToken")
                                .build())
                .build();
        assertNotNull(s);

        ApiKeyAuthHoistedResponse res = s.auth().apiKeyAuthHoistedDirect();

        assertNotNull(res);
        assertEquals(200, res.statusCode());
        assertTrue(res.token().get().authenticated());
        assertEquals("testToken", res.token().get().token());
    }

    @Test
    void testApiKeyAuthOperation() throws Exception {
        CommonHelpers.recordTest("auth-api-key-auth-operation");

        SDK s = SDK.builder().build();
        assertNotNull(s);

        ApiKeyOrBearerAuthResponse res = s.auth().apiKeyOrBearerAuth()
                .security(ApiKeyOrBearerAuthSecurity.builder()
                        .apiKeyAuth("Bearer testToken")
                        .build())
                .call();

        assertNotNull(res);
        assertEquals(200, res.statusCode());
        assertTrue(res.token().get().authenticated());
        assertEquals("testToken", res.token().get().token());
    }
}
