/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.charset.StandardCharsets;

import org.junit.jupiter.api.Test;
import org.openapis.openapi.utils.EventStreamLineReader;

public class EventStreamLineReaderTests {

    @Test
    public void testNewLineConversion() throws IOException {
        assertEquals("", convert(""));
        assertEquals("a", convert("a"));
        assertEquals("ab", convert("ab"));
        assertEquals("abc", convert("abc"));
        assertEquals("\n", convert("\n"));
        assertEquals("a\n", convert("a\n"));
        assertEquals("ab\n", convert("ab\n"));
        assertEquals("abc\n", convert("abc\n"));
        assertEquals("\na", convert("\na"));
        assertEquals("\nab", convert("\nab"));
        assertEquals("\nabc", convert("\nabc"));
        assertEquals("\n\n", convert("\n\n"));
        assertEquals("\n", convert("\r"));
        assertEquals("\n", convert("\r\n"));
        assertEquals("\na", convert("\ra"));
        assertEquals("\n\n", convert("\r\r"));
        assertEquals("\n\n", convert("\r\n\r"));
        assertEquals("a\n\n\n", convert("a\n\n\n"));
    }
    
    @Test
    public void testUnsupportedOperation() throws IOException {
        try (Reader r = new EventStreamLineReader(
                new InputStreamReader(new ByteArrayInputStream("hello there".getBytes(StandardCharsets.UTF_8))))) {
            assertThrows(UnsupportedOperationException.class, () -> r.read(new char[3]));
        }
    }

    private static String convert(String s) throws IOException {
        try (Reader r = new EventStreamLineReader(
                new InputStreamReader(new ByteArrayInputStream(s.getBytes(StandardCharsets.UTF_8))))) {
            StringBuilder b = new StringBuilder();
            int ch;
            while ((ch = r.read()) != -1) {
                b.append((char) ch);
            }
            return b.toString();
        }
    }

}
