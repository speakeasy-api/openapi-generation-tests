<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Tests;

use OpenAPI\OpenAPI\Tests\CommonHelpers;
use OpenAPI\OpenAPI\Tests\Helpers\Helpers;
use PHPUnit\Framework\TestCase;

final class GlobalsAdditionalTest extends TestCase
{
    public function testGlobalsQueryParameterGetUsesGlobal(): void
    {
        CommonHelpers::recordTest('globals-query-parameter-get-uses-global');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setGlobalQueryParam('test')->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->globals->globalsQueryParameterGet();

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->httpMeta->response->getStatusCode());
        $this->assertEquals('test', $response->res->args->globalQueryParam);
    }

    public function testGlobalsQueryParameterGetUsesLocal(): void
    {
        CommonHelpers::recordTest('globals-query-parameter-get-uses-local');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setGlobalQueryParam('test')->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->globals->globalsQueryParameterGet('local');

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->httpMeta->response->getStatusCode());
        $this->assertEquals('local', $response->res->args->globalQueryParam);
    }

    public function testGlobalPathParameterGetUsesGlobal(): void
    {
        CommonHelpers::recordTest('globals-path-parameter-get-uses-global');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setGlobalPathParam(1)->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->globals->globalPathParameterGet();

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->httpMeta->response->getStatusCode());
        $this->assertEquals('http://localhost:35123/anything/globals/pathParameter/1', $response->res->url);
    }

    public function testGlobalPathParameterGetUsesLocal(): void
    {
        CommonHelpers::recordTest('globals-path-parameter-get-uses-local');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setGlobalPathParam(1)->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->globals->globalPathParameterGet(2);

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->httpMeta->response->getStatusCode());
        $this->assertEquals('http://localhost:35123/anything/globals/pathParameter/2', $response->res->url);
    }

    public function testGlobalHeaderGetUsesGlobal(): void
    {
        CommonHelpers::recordTest('globals-header-get-uses-global');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setGlobalHeaderParam(true)->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->globals->globalsHeaderGet();

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->httpMeta->response->getStatusCode());
        $this->assertEquals('true', $response->res->headers['Globalheaderparam']);
    }

    public function testGlobalHeaderGetUsesLocal(): void
    {
        CommonHelpers::recordTest('globals-header-get-uses-local');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setGlobalHeaderParam(true)->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->globals->globalsHeaderGet(false);

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->httpMeta->response->getStatusCode());
        $this->assertEquals('false', $response->res->headers['Globalheaderparam']);
    }
}
