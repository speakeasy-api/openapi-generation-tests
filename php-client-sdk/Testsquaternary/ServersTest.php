<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Tests;

use OpenAPI\OpenAPI\Tests\CommonHelpers;
use OpenAPI\OpenAPI\Utils;
use PHPUnit\Framework\TestCase;

final class ServersTest extends TestCase
{

    public function testSelectGlobalServerByNameDefault(): void
    {
        CommonHelpers::recordTest('servers-select-global-server-by-name-default');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->build();

        $response = $sdk->servers->selectGlobalServer();
        $this->assertNotNull($response);
    }

    public function testSelectGlobalServerByNameValid(): void
    {
        CommonHelpers::recordTest('servers-select-global-server-by-name-valid');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setServer(\OpenAPI\OpenAPI\SDK::SERVER_DEFAULT)->build();

        $response = $sdk->servers->selectGlobalServer();
        $this->assertNotNull($response);
    }

    public function testSelectGlobalServerByNameInvalid()
    {
        CommonHelpers::recordTest('servers-select-global-server-by-name-invalid');
        /** Noop - guaranteed by enums*/
        $this->assertTrue(true);
    }

    public function testSelectGlobalServerByNameBroken(): void
    {
        CommonHelpers::recordTest('servers-select-global-server-by-name-broken');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setServerUrl(\OpenAPI\OpenAPI\SDK::SERVER_BROKEN)->build();

        $this->expectException(\GuzzleHttp\Exception\ConnectException::class);
        $sdk->servers->selectGlobalServer();
    }

    public function testSelectGlobalServerByNameWithTemplatesDefaults(): void
    {
        CommonHelpers::recordTest('servers-select-global-server-by-name-with-templates-defaults');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setServer(\OpenAPI\OpenAPI\SDK::SERVER_TEMPLATED)->build();

        $response = $sdk->servers->selectGlobalServer();
        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
    }

    public function testSelectGlobalServerByNameWithTemplatesValid(): void
    {
        CommonHelpers::recordTest('servers-select-global-server-by-name-with-templates-valid');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()
            ->setServer(\OpenAPI\OpenAPI\SDK::SERVER_TEMPLATED)
            ->setHostname('127.0.0.1')
            ->setPort('35123')
            ->build();
        
        $this->assertEquals('http://127.0.0.1:35123', Utils\Utils::templateUrl($sdk->sdkConfiguration->getServerUrl(), $sdk->sdkConfiguration->getServerDefaults()));

        $response = $sdk->servers->selectGlobalServer();
        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
    }

    public function testSelectGlobalServerByNameWithTemplatesBroken(): void
    {
        CommonHelpers::recordTest('servers-select-global-server-by-name-with-templates-broken');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()
            ->setServer(\OpenAPI\OpenAPI\SDK::SERVER_TEMPLATED)
            ->setHostname('broken')
            ->setPort('12345')
            ->build();
        
        $this->assertEquals('http://broken:12345', Utils\Utils::templateUrl($sdk->sdkConfiguration->getServerUrl(), $sdk->sdkConfiguration->getServerDefaults()));

        $this->expectException(\GuzzleHttp\Exception\ConnectException::class);
        $sdk->servers->selectGlobalServer();
    }

}
