<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace alphabetically\early\Tests;

use alphabetically\early\Tests\CommonHelpers;
use PHPUnit\Framework\TestCase;

final class AuthTest extends TestCase
{
    public function testNoAuth(): void
    {
        CommonHelpers::recordTest('auth-hoisted-no-auth-retained');

        $sdk = \alphabetically\early\SDK::builder()->build();

        $this->assertInstanceOf(\alphabetically\early\SDK::class, $sdk);

        $response = $sdk->auth->noAuth();
    }

    public function testBasicAuth(): void
    {
        CommonHelpers::recordTest('auth-hoisted-basic-auth');

        $security = new \alphabetically\early\Models\Shared\Security();
        $security->username = 'testUser';
        $security->password = 'testPass';

        $sdk = \alphabetically\early\SDK::builder()->setSecurity($security)->build();

        $this->assertInstanceOf(\alphabetically\early\SDK::class, $sdk);

        $response = $sdk->auth->basicAuth('testPass', 'testUser');

        $this->assertNotNull($response);
        $this->assertTrue($response->authenticated);
    }

    public function testMultipleMixedOptionsAuth(): void
    {
        CommonHelpers::recordTest('auth-hoisted-operation-auth-retained');
        $sdk = \alphabetically\early\SDK::builder()->build();

        $this->assertInstanceOf(\alphabetically\early\SDK::class, $sdk);

        $request = new \alphabetically\early\Models\Shared\AuthServiceRequestBody();
        $request->basicAuth = new \alphabetically\early\Models\Shared\BasicAuth(
            username: 'testUser',
            password: 'testPass',
        );

        $security = new \alphabetically\early\Models\Operations\MultipleMixedOptionsAuthSecurity();
        $security->basicAuth = new \alphabetically\early\Models\Shared\SchemeBasicAuth(
            username: 'testUser',
            password: 'testPass',
        );

        $response = $sdk->authNew->multipleMixedOptionsAuth($request, $security);
    }
}
