<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class CustomClient
{
    private SDKConfiguration $sdkConfiguration;

    /**
     * @param  SDKConfiguration  $sdkConfig
     */
    public function __construct(SDKConfiguration $sdkConfig)
    {
        $this->sdkConfiguration = $sdkConfig;
    }

    /**
     * customClientPost
     *
     * @param  string  $headerParam
     * @param  string  $pathParam
     * @param  string  $queryStringParam
     * @param  ?\OpenAPI\OpenAPI\Models\Shared\SimpleObject  $simpleObject
     * @return \OpenAPI\OpenAPI\Models\Operations\CustomClientPostResponse
     */
    public function customClientPost(
        string $headerParam,
        string $pathParam,
        string $queryStringParam,
        ?\OpenAPI\OpenAPI\Models\Shared\SimpleObject $simpleObject = null,
    ): \OpenAPI\OpenAPI\Models\Operations\CustomClientPostResponse {
        $request = new \OpenAPI\OpenAPI\Models\Operations\CustomClientPostRequest();
        $request->headerParam = $headerParam;
        $request->pathParam = $pathParam;
        $request->queryStringParam = $queryStringParam;
        $request->simpleObject = $simpleObject;
        $baseUrl = Utils\Utils::templateUrl($this->sdkConfiguration->getServerUrl(), $this->sdkConfiguration->getServerDefaults());
        $url = Utils\Utils::generateUrl($baseUrl, '/anything/customClient/{pathParam}', \OpenAPI\OpenAPI\Models\Operations\CustomClientPostRequest::class, $request, $this->sdkConfiguration->globals);
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, 'simpleObject', 'json');
        if ($body !== null) {
            $options = array_merge_recursive($options, $body);
        }
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CustomClientPostRequest::class, $request, $this->sdkConfiguration->globals));
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request, $this->sdkConfiguration->globals));
        if (! array_key_exists('headers', $options)) {
            $options['headers'] = [];
        }
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['x-speakeasy-user-agent'] = $this->sdkConfiguration->userAgent;

        $httpResponse = $this->sdkConfiguration->securityClient->request('POST', $url, $options);
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \OpenAPI\OpenAPI\Models\Operations\CustomClientPostResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->res = $serializer->deserialize((string) $httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\CustomClientPostRes', 'json');
            }
        }

        return $response;
    }
}