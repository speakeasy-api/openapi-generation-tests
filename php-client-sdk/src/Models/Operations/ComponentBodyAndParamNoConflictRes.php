<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * ComponentBodyAndParamNoConflictRes - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class ComponentBodyAndParamNoConflictRes
{
    /**
     * $args
     * 
     * @var array<string, string> $args
     */
	#[\JMS\Serializer\Annotation\SerializedName('args')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $args;
    
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleObject $json
     */
	#[\JMS\Serializer\Annotation\SerializedName('json')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleObject')]
    public \OpenAPI\OpenAPI\Models\Shared\SimpleObject $json;
    
	public function __construct()
	{
		$this->args = [];
		$this->json = new \OpenAPI\OpenAPI\Models\Shared\SimpleObject();
	}
}
