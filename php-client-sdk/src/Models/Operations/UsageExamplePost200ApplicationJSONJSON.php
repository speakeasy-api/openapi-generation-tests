<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UsageExamplePost200ApplicationJSONJSON
{
    /**
     * A field called email that will have emails generated as examples
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * A field formatted as an email that will have emails generated as examples
     * 
     * @var ?string $formatEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('formatEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formatEmail = null;
    
    /**
     * A field formatted as a uri that will have uris generated as examples
     * 
     * @var ?string $formatUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('formatUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formatUri = null;
    
    /**
     * A field formatted as a uuid that will have uuids generated as examples
     * 
     * @var ?string $formatUuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('formatUuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formatUuid = null;
    
    /**
     * A field formatted as a hostname that will have hostnames generated as examples
     * 
     * @var ?string $hostname
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostname = null;
    
    /**
     * A field formatted as an ipv4 that will have ipv4s generated as examples
     * 
     * @var ?string $ipv4
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv4')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipv4 = null;
    
    /**
     * A field formatted as an ipv6 that will have ipv6s generated as examples
     * 
     * @var ?string $ipv6
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv6')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipv6 = null;
    
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SimpleObject $simpleObject
     */
	#[\JMS\Serializer\Annotation\SerializedName('simpleObject')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleObject')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\OpenAPI\OpenAPI\Models\Shared\SimpleObject $simpleObject = null;
    
    /**
     * A field formatted as an unknown that will have random strings generated as examples
     * 
     * @var ?string $unknown
     */
	#[\JMS\Serializer\Annotation\SerializedName('unknown')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unknown = null;
    
    /**
     * A field called uri that will have uris generated as examples
     * 
     * @var ?string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uri = null;
    
    /**
     * A field called uuid that will have uuids generated as examples
     * 
     * @var ?string $uuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uuid = null;
    
	public function __construct()
	{
		$this->email = null;
		$this->formatEmail = null;
		$this->formatUri = null;
		$this->formatUuid = null;
		$this->hostname = null;
		$this->ipv4 = null;
		$this->ipv6 = null;
		$this->simpleObject = null;
		$this->unknown = null;
		$this->uri = null;
		$this->uuid = null;
	}
}
