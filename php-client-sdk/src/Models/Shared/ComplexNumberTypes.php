<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ComplexNumberTypes
{
    /**
     *
     * @var \Brick\Math\BigInteger $bigint
     */
    #[\JMS\Serializer\Annotation\SerializedName('bigint')]
    public \Brick\Math\BigInteger $bigint;

    /**
     *
     * @var \Brick\Math\BigInteger $bigintStr
     */
    #[\JMS\Serializer\Annotation\SerializedName('bigintStr')]
    #[\JMS\Serializer\Annotation\Accessor(getter: 'bigintStrAccessor')]
    public \Brick\Math\BigInteger $bigintStr;

    /**
     *
     * @var \Brick\Math\BigDecimal $decimal
     */
    #[\JMS\Serializer\Annotation\SerializedName('decimal')]
    public \Brick\Math\BigDecimal $decimal;

    /**
     *
     * @var \Brick\Math\BigDecimal $decimalStr
     */
    #[\JMS\Serializer\Annotation\SerializedName('decimalStr')]
    #[\JMS\Serializer\Annotation\Accessor(getter: 'decimalStrAccessor')]
    public \Brick\Math\BigDecimal $decimalStr;

    /**
     * @param  \Brick\Math\BigInteger  $bigint
     * @param  \Brick\Math\BigInteger  $bigintStr
     * @param  \Brick\Math\BigDecimal  $decimal
     * @param  \Brick\Math\BigDecimal  $decimalStr
     */
    public function __construct(\Brick\Math\BigInteger $bigint, \Brick\Math\BigInteger $bigintStr, \Brick\Math\BigDecimal $decimal, \Brick\Math\BigDecimal $decimalStr)
    {
        $this->bigint = $bigint;
        $this->bigintStr = $bigintStr;
        $this->decimal = $decimal;
        $this->decimalStr = $decimalStr;
    }
    public function bigintStrAccessor(): ?string
    {
        if ($this->bigintStr != null) {
            return $this->bigintStr->toBase(10);
        }

        return null;
    }
    public function decimalStrAccessor(): ?string
    {
        if ($this->decimalStr != null) {
            return $this->decimalStr->__toString();
        }

        return null;
    }
}