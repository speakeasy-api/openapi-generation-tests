<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class DeepObject
{
    /**
     *
     * @var SimpleObject|string $any
     */
    #[\JMS\Serializer\Annotation\SerializedName('any')]
    #[\JMS\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Shared\SimpleObject|string')]
    #[SpeakeasyMetadata('form:name=any,json=true')]
    #[SpeakeasyMetadata('multipartForm:name=any,json=true')]
    public SimpleObject|string $any;

    /**
     * $arr
     *
     * @var array<SimpleObject> $arr
     */
    #[\JMS\Serializer\Annotation\SerializedName('arr')]
    #[\JMS\Serializer\Annotation\Type('array<\OpenAPI\OpenAPI\Models\Shared\SimpleObject>')]
    #[SpeakeasyMetadata('form:name=arr,json=true')]
    #[SpeakeasyMetadata('multipartForm:name=arr,json=true')]
    public array $arr;

    /**
     *
     * @var bool $bool
     */
    #[\JMS\Serializer\Annotation\SerializedName('bool')]
    #[SpeakeasyMetadata('form:name=bool')]
    #[SpeakeasyMetadata('multipartForm:name=bool')]
    public bool $bool;

    /**
     *
     * @var int $int
     */
    #[\JMS\Serializer\Annotation\SerializedName('int')]
    #[SpeakeasyMetadata('form:name=int')]
    #[SpeakeasyMetadata('multipartForm:name=int')]
    public int $int;

    /**
     * $map
     *
     * @var array<string, SimpleObject> $map
     */
    #[\JMS\Serializer\Annotation\SerializedName('map')]
    #[\JMS\Serializer\Annotation\Type('array<string, \OpenAPI\OpenAPI\Models\Shared\SimpleObject>')]
    #[SpeakeasyMetadata('form:name=map,json=true')]
    #[SpeakeasyMetadata('multipartForm:name=map,json=true')]
    public array $map;

    /**
     *
     * @var float $num
     */
    #[\JMS\Serializer\Annotation\SerializedName('num')]
    #[SpeakeasyMetadata('form:name=num')]
    #[SpeakeasyMetadata('multipartForm:name=num')]
    public float $num;

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     *
     * @var SimpleObject $obj
     */
    #[\JMS\Serializer\Annotation\SerializedName('obj')]
    #[\JMS\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Shared\SimpleObject')]
    #[SpeakeasyMetadata('form:name=obj,json=true')]
    #[SpeakeasyMetadata('multipartForm:name=obj,json=true')]
    public SimpleObject $obj;

    /**
     *
     * @var string $str
     */
    #[\JMS\Serializer\Annotation\SerializedName('str')]
    #[SpeakeasyMetadata('form:name=str')]
    #[SpeakeasyMetadata('multipartForm:name=str')]
    public string $str;

    /**
     *
     * @var ?string $type
     */
    #[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=type')]
    #[SpeakeasyMetadata('multipartForm:name=type')]
    public ?string $type = null;

    /**
     * @param  SimpleObject|string|null  $any
     * @param  ?array<SimpleObject>  $arr
     * @param  ?bool  $bool
     * @param  ?int  $int
     * @param  ?array<string, SimpleObject>  $map
     * @param  ?float  $num
     * @param  ?SimpleObject  $obj
     * @param  ?string  $str
     * @param  ?string  $type
     */
    public function __construct(SimpleObject|string|null $any = null, ?array $arr = null, ?bool $bool = null, ?int $int = null, ?array $map = null, ?float $num = null, ?SimpleObject $obj = null, ?string $str = null, ?string $type = null)
    {
        $this->any = $any;
        $this->arr = $arr;
        $this->bool = $bool;
        $this->int = $int;
        $this->map = $map;
        $this->num = $num;
        $this->obj = $obj;
        $this->str = $str;
        $this->type = $type;
    }
}