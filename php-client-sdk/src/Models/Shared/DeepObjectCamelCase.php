<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DeepObjectCamelCase
{
    #[\JMS\Serializer\Annotation\SerializedName('any_val')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $anyVal;

    /**
     * $arrVal
     *
     * @var array<\OpenAPI\OpenAPI\Models\Shared\SimpleObjectCamelCase> $arrVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('arr_val')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SimpleObjectCamelCase>')]
    public array $arrVal;

    #[\JMS\Serializer\Annotation\SerializedName('bool_val')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $boolVal;

    #[\JMS\Serializer\Annotation\SerializedName('int_val')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $intVal;

    /**
     * $mapVal
     *
     * @var array<string, \OpenAPI\OpenAPI\Models\Shared\SimpleObjectCamelCase> $mapVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('map_val')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\SimpleObjectCamelCase>')]
    public array $mapVal;

    #[\JMS\Serializer\Annotation\SerializedName('num_val')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $numVal;

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     *
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleObjectCamelCase $objVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('obj_val')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleObjectCamelCase')]
    public SimpleObjectCamelCase $objVal;

    #[\JMS\Serializer\Annotation\SerializedName('str_val')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $strVal;

    #[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;

    public function __construct()
    {
        $this->anyVal = null;
        $this->arrVal = [];
        $this->boolVal = false;
        $this->intVal = 0;
        $this->mapVal = [];
        $this->numVal = 0;
        $this->objVal = new \OpenAPI\OpenAPI\Models\Shared\SimpleObjectCamelCase();
        $this->strVal = '';
        $this->type = null;
    }
}