<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use Brick\DateTime\LocalDate;
/**
 * SimpleObjectCamelCase - A simple object that uses all our supported primitive types and enums and has optional properties.
 *
 * https://speakeasy.com/docs - A link to the external docs.
 *
 * @see https://speakeasy.com/docs
 */
class SimpleObjectCamelCase
{
    /**
     * An any property.
     *
     * @var mixed $anyVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('any_val')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $anyVal;

    /**
     *
     * @var ?string $bigintStrVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('bigint_str_val')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $bigintStrVal = null;

    /**
     *
     * @var ?int $bigintVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('bigint_val')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $bigintVal = null;

    /**
     * An optional boolean property.
     *
     * @var ?bool $boolOptVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('bool_opt_val')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $boolOptVal = null;

    /**
     * A boolean property.
     *
     * @var bool $boolVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('bool_val')]
    public bool $boolVal;

    /**
     * A date-time property.
     *
     * @var \DateTime $dateTimeVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('date_time_val')]
    public \DateTime $dateTimeVal;

    /**
     * A date property.
     *
     * @var LocalDate $dateVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('date_val')]
    public LocalDate $dateVal;

    /**
     *
     * @var ?float $decimalVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('decimal_val')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?float $decimalVal = null;

    /**
     * A string based enum
     *
     * @var Enum $enumVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('enum_val')]
    #[\JMS\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Shared\Enum')]
    public Enum $enumVal;

    /**
     * A float32 property.
     *
     * @var float $float32Val
     */
    #[\JMS\Serializer\Annotation\SerializedName('float32_val')]
    public float $float32Val;

    /**
     * An int32 enum property.
     *
     * @var Int32EnumVal $int32EnumVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('int32_enum_val')]
    #[\JMS\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Shared\Int32EnumVal')]
    public Int32EnumVal $int32EnumVal;

    /**
     * An int32 property.
     *
     * @var int $int32Val
     */
    #[\JMS\Serializer\Annotation\SerializedName('int32_val')]
    public int $int32Val;

    /**
     * An integer enum property.
     *
     * @var IntEnumVal $intEnumVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('int_enum_val')]
    #[\JMS\Serializer\Annotation\Type('\OpenAPI\OpenAPI\Models\Shared\IntEnumVal')]
    public IntEnumVal $intEnumVal;

    /**
     * An optional integer property will be null for tests.
     *
     * @var ?int $intOptNullVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('int_opt_null_val')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $intOptNullVal = null;

    /**
     * An integer property.
     *
     * @var int $intVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('int_val')]
    public int $intVal;

    /**
     * An optional number property will be null for tests.
     *
     * @var ?float $numOptNullVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('num_opt_null_val')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?float $numOptNullVal = null;

    /**
     * A number property.
     *
     * @var float $numVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('num_val')]
    public float $numVal;

    /**
     * An optional string property.
     *
     * @var ?string $strOptVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('str_opt_val')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $strOptVal = null;

    /**
     * A string property.
     *
     * @var string $strVal
     */
    #[\JMS\Serializer\Annotation\SerializedName('str_val')]
    public string $strVal;

    /**
     * @param  mixed  $anyVal
     * @param  bool  $boolVal
     * @param  \DateTime  $dateTimeVal
     * @param  LocalDate  $dateVal
     * @param  Enum  $enumVal
     * @param  float  $float32Val
     * @param  Int32EnumVal  $int32EnumVal
     * @param  int  $int32Val
     * @param  IntEnumVal  $intEnumVal
     * @param  int  $intVal
     * @param  float  $numVal
     * @param  string  $strVal
     * @param  ?string  $bigintStrVal
     * @param  ?int  $bigintVal
     * @param  ?bool  $boolOptVal
     * @param  ?float  $decimalVal
     * @param  ?int  $intOptNullVal
     * @param  ?float  $numOptNullVal
     * @param  ?string  $strOptVal
     */
    public function __construct(mixed $anyVal, bool $boolVal, \DateTime $dateTimeVal, LocalDate $dateVal, Enum $enumVal, float $float32Val, Int32EnumVal $int32EnumVal, int $int32Val, IntEnumVal $intEnumVal, int $intVal, float $numVal, string $strVal, ?string $bigintStrVal = null, ?int $bigintVal = null, ?bool $boolOptVal = null, ?float $decimalVal = null, ?int $intOptNullVal = null, ?float $numOptNullVal = null, ?string $strOptVal = null)
    {
        $this->anyVal = $anyVal;
        $this->boolVal = $boolVal;
        $this->dateTimeVal = $dateTimeVal;
        $this->dateVal = $dateVal;
        $this->enumVal = $enumVal;
        $this->float32Val = $float32Val;
        $this->int32EnumVal = $int32EnumVal;
        $this->int32Val = $int32Val;
        $this->intEnumVal = $intEnumVal;
        $this->intVal = $intVal;
        $this->numVal = $numVal;
        $this->strVal = $strVal;
        $this->bigintStrVal = $bigintStrVal;
        $this->bigintVal = $bigintVal;
        $this->boolOptVal = $boolOptVal;
        $this->decimalVal = $decimalVal;
        $this->intOptNullVal = $intOptNullVal;
        $this->numOptNullVal = $numOptNullVal;
        $this->strOptVal = $strOptVal;
    }
}