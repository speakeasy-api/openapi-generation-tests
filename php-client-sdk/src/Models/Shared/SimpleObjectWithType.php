<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SimpleObjectWithType - A simple object that uses all our supported primitive types and enums and has optional properties.
 * 
 * https://docs.speakeasyapi.dev - A link to the external docs.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 * @see https://docs.speakeasyapi.dev
 */
class SimpleObjectWithType
{
    /**
     * An any property.
     * 
     * @var mixed $any
     */
	#[\JMS\Serializer\Annotation\SerializedName('any')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $any;
    
	#[\JMS\Serializer\Annotation\SerializedName('bigint')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bigint = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('bigintStr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bigintStr = null;
    
    /**
     * A boolean property.
     * 
     * @var bool $bool
     */
	#[\JMS\Serializer\Annotation\SerializedName('bool')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $bool;
    
    /**
     * An optional boolean property.
     * 
     * @var ?bool $boolOpt
     */
	#[\JMS\Serializer\Annotation\SerializedName('boolOpt')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $boolOpt = null;
    
    /**
     * A date property.
     * 
     * @var \DateTime $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $date;
    
    /**
     * A date-time property.
     * 
     * @var \DateTime $dateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('dateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $dateTime;
    
    /**
     * An string based enum
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Enum $enum
     */
	#[\JMS\Serializer\Annotation\SerializedName('enum')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\Enum>')]
    public Enum $enum;
    
    /**
     * A float32 property.
     * 
     * @var float $float32
     */
	#[\JMS\Serializer\Annotation\SerializedName('float32')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $float32;
    
    /**
     * An integer property.
     * 
     * @var int $int
     */
	#[\JMS\Serializer\Annotation\SerializedName('int')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $int;
    
    /**
     * An int32 property.
     * 
     * @var int $int32
     */
	#[\JMS\Serializer\Annotation\SerializedName('int32')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $int32;
    
    /**
     * An int32 enum property.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleObjectWithTypeInt32Enum $int32Enum
     */
	#[\JMS\Serializer\Annotation\SerializedName('int32Enum')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SimpleObjectWithTypeInt32Enum>')]
    public SimpleObjectWithTypeInt32Enum $int32Enum;
    
    /**
     * An integer enum property.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleObjectWithTypeIntEnum $intEnum
     */
	#[\JMS\Serializer\Annotation\SerializedName('intEnum')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SimpleObjectWithTypeIntEnum>')]
    public SimpleObjectWithTypeIntEnum $intEnum;
    
    /**
     * An optional integer property will be null for tests.
     * 
     * @var ?int $intOptNull
     */
	#[\JMS\Serializer\Annotation\SerializedName('intOptNull')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $intOptNull = null;
    
    /**
     * A number property.
     * 
     * @var float $num
     */
	#[\JMS\Serializer\Annotation\SerializedName('num')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $num;
    
    /**
     * An optional number property will be null for tests.
     * 
     * @var ?float $numOptNull
     */
	#[\JMS\Serializer\Annotation\SerializedName('numOptNull')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $numOptNull = null;
    
    /**
     * A string property.
     * 
     * @var string $str
     */
	#[\JMS\Serializer\Annotation\SerializedName('str')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $str;
    
    /**
     * An optional string property.
     * 
     * @var ?string $strOpt
     */
	#[\JMS\Serializer\Annotation\SerializedName('strOpt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $strOpt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->any = null;
		$this->bigint = null;
		$this->bigintStr = null;
		$this->bool = false;
		$this->boolOpt = null;
		$this->date = new \DateTime();
		$this->dateTime = new \DateTime();
		$this->enum = \OpenAPI\OpenAPI\Models\Shared\Enum::One;
		$this->float32 = 0;
		$this->int = 0;
		$this->int32 = 0;
		$this->int32Enum = \OpenAPI\OpenAPI\Models\Shared\SimpleObjectWithTypeInt32Enum::FiftyFive;
		$this->intEnum = \OpenAPI\OpenAPI\Models\Shared\SimpleObjectWithTypeIntEnum::First;
		$this->intOptNull = null;
		$this->num = 0;
		$this->numOptNull = null;
		$this->str = "";
		$this->strOpt = null;
		$this->type = "";
	}
}
