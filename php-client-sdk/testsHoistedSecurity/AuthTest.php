<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

<?php

declare(strict_types=1);
require_once 'vendor/autoload.php';

use OpenAPI\OpenAPI\Tests\CommonHelpers;
use PHPUnit\Framework\TestCase;

final class AuthTest extends TestCase
{
    public function testNoAuth(): void
    {
        CommonHelpers::recordTest('auth-no-auth');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->auth->noAuth();

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
    }

    public function testBasicAuth(): void
    {
        CommonHelpers::recordTest('auth-basic-auth');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $security = new \OpenAPI\OpenAPI\Models\Operations\BasicAuthSecurity();
        $security->username = 'testUser';
        $security->password = 'testPass';

        $response = $sdk->auth->basicAuth($security, 'testPass', 'testUser');

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
        $this->assertTrue($response->user->authenticated);
    }

    public function testApiKeyAuthGlobal(): void
    {
        CommonHelpers::recordTest('auth-api-key-auth-global');

        $security = new \OpenAPI\OpenAPI\Models\Shared\Security();
        $security->apiKeyAuth = 'Bearer testToken';
        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setSecurity($security)->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->auth->apiKeyAuthHoisted();

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
        $this->assertTrue($response->token->authenticated);
        $this->assertEquals('testToken', $response->token->token);
    }

    public function testApiKeyAuthOperation(): void
    {
        CommonHelpers::recordTest('auth-api-key-auth-operation');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->build();
        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $security = new \OpenAPI\OpenAPI\Models\Operations\ApiKeyOrBearerAuthSecurity();
        $security->apiKeyAuth = 'Bearer testToken';

        $response = $sdk->auth->apiKeyOrBearerAuth($security);

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
        $this->assertTrue($response->token->authenticated);
        $this->assertEquals('testToken', $response->token->token);
    }
}
