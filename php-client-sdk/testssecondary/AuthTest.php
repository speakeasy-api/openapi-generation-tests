<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

<?php

declare(strict_types=1);
require_once 'vendor/autoload.php';

use OpenAPI\OpenAPI\Tests\CommonHelpers;
use PHPUnit\Framework\TestCase;

final class AuthTest extends TestCase
{
    public function testNoAuth(): void
    {
        CommonHelpers::recordTest('auth-hoisted-no-auth-retained');

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->auth->noAuth();

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
    }

    public function testBasicAuth(): void
    {
        CommonHelpers::recordTest('auth-hoisted-basic-auth');

        $security = new \OpenAPI\OpenAPI\Models\Shared\Security();
        $security->username = 'testUser';
        $security->password = 'testPass';

        $sdk = \OpenAPI\OpenAPI\SDK::builder()->setSecurity($security)->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $response = $sdk->auth->basicAuth('testPass', 'testUser');

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
        $this->assertTrue($response->user->authenticated);
    }

    public function testMultipleMixedOptionsAuth(): void
    {
        CommonHelpers::recordTest('auth-hoisted-operation-auth-retained');
        $sdk = \OpenAPI\OpenAPI\SDK::builder()->build();

        $this->assertInstanceOf(\OpenAPI\OpenAPI\SDK::class, $sdk);

        $request = new \OpenAPI\OpenAPI\Models\Shared\AuthServiceRequestBody();
        $request->basicAuth = new \OpenAPI\OpenAPI\Models\Shared\BasicAuth();
        $request->basicAuth->username = 'testUser';
        $request->basicAuth->password = 'testPass';

        $security = new \OpenAPI\OpenAPI\Models\Operations\MultipleMixedOptionsAuthSecurity();
        $security->basicAuth = new \OpenAPI\OpenAPI\Models\Shared\SchemeBasicAuth();
        $security->basicAuth->username = 'testUser';
        $security->basicAuth->password = 'testPass';

        $response = $sdk->authNew->multipleMixedOptionsAuth($request, $security);

        $this->assertNotNull($response);
        $this->assertEquals(200, $response->statusCode);
    }
}
