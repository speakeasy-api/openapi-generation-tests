lockVersion: 2.0.0
id: 1f7219fd-261e-403c-a9de-c935260e7592
management:
  docChecksum: d267e9fedde3289c28293343e03c4261
  docVersion: 0.1.0
  speakeasyVersion: 1.453.0
  generationVersion: 2.472.1
  releaseVersion: 4.0.0
  configChecksum: c1e90ab11b9f10106d242b7e579ca21a
  repoURL: https://github.com/speakeasy-api/openapi-generation-tests.git
  repoSubDirectory: python-client-sdk
  installationURL: https://github.com/speakeasy-api/openapi-generation-tests.git#subdirectory=python-client-sdk
features:
  python:
    acceptHeaders: 3.0.0
    additionalDependencies: 1.0.0
    additionalProperties: 1.0.1
    bigint: 1.0.0
    callbacks: 2.0.0
    constsAndDefaults: 1.0.5
    core: 5.6.9
    customSecuritySchemes: 0.1.0
    decimal: 1.0.0
    deepObjectParams: 0.1.0
    defaultEnabledRetries: 0.2.0
    deprecations: 3.0.0
    docs: 1.2.0
    downloadStreams: 1.0.1
    enumUnions: 0.1.0
    enums: 3.1.1
    envVarSecurityUsage: 0.3.2
    errorUnions: 1.0.2
    errors: 3.2.0
    examples: 3.0.0
    flatRequests: 1.0.1
    flattening: 3.1.0
    getRequestBodies: 3.0.0
    globalSecurity: 3.0.2
    globalSecurityCallbacks: 1.0.0
    globalServerURLs: 3.0.0
    globals: 3.0.0
    groups: 3.0.0
    hiddenGlobals: 1.0.0
    ignores: 3.0.0
    includes: 3.0.0
    inputOutputModels: 3.0.0
    methodArguments: 1.0.2
    methodSecurity: 3.0.0
    methodServerURLs: 3.0.0
    multipartFileContentType: 1.0.0
    nameOverrides: 3.0.0
    nullables: 1.0.0
    openEnums: 1.0.0
    pagination: 3.0.1
    responseFormat: 1.0.1
    retries: 3.0.2
    sdkHooks: 1.0.0
    serverEvents: 1.0.7
    serverEventsSentinels: 0.1.0
    serverIDs: 3.0.0
    stringNumberFormats: 1.0.0
    tests: 1.8.0
    typeOverrides: 3.0.0
    unions: 3.0.4
    uploadStreams: 1.0.0
    webhooks: 2.0.0
generatedFiles:
  - .gitattributes
  - .python-version
  - .vscode/settings.json
  - CONTRIBUTING.md
  - USAGE.md
  - docs/models/callbacks/ignoredgenerationgetnotignoredcallbackrequestbody.md
  - docs/models/callbacks/ignoredgenerationgetsingledignoredcallbackoperationrequestbody.md
  - docs/models/errors/error.md
  - docs/models/errors/errortype1.md
  - docs/models/errors/errortype2.md
  - docs/models/errors/erroruniondiscriminatedpostresponsebody.md
  - docs/models/errors/errorunionpostresponsebody.md
  - docs/models/errors/schemaserror.md
  - docs/models/errors/schemastaggederror2error.md
  - docs/models/errors/statusgetxspeakeasyerrorsresponsebody.md
  - docs/models/errors/tag.md
  - docs/models/errors/taggederror1.md
  - docs/models/errors/taggederror2.md
  - docs/models/errors/teapotjsonerror.md
  - docs/models/internal/globals.md
  - docs/models/operations/ambiguousqueryparamrequest.md
  - docs/models/operations/anchortypesgettypefromanchor.md
  - docs/models/operations/apikeyauthglobaltoken.md
  - docs/models/operations/apikeyauthtoken.md
  - docs/models/operations/args.md
  - docs/models/operations/arrayofdiscriminatedunionsmapres.md
  - docs/models/operations/arrayofdiscriminatedunionsres.md
  - docs/models/operations/authenticatedrequestrequestbody.md
  - docs/models/operations/authenticatedrequestsecurity.md
  - docs/models/operations/authorizationheadermodificationtoken.md
  - docs/models/operations/basicauthnewsecurity.md
  - docs/models/operations/basicauthrequest.md
  - docs/models/operations/basicauthsecurity.md
  - docs/models/operations/basicauthuser.md
  - docs/models/operations/bearerauthsecurity.md
  - docs/models/operations/bearerauthtoken.md
  - docs/models/operations/chatrequestbody.md
  - docs/models/operations/chatresponse.md
  - docs/models/operations/chatskipsentinelrequestbody.md
  - docs/models/operations/circularreferenceonedegreeresponsebody.md
  - docs/models/operations/collectiononeofpostres.md
  - docs/models/operations/componentbodyandparamconflictrequest.md
  - docs/models/operations/componentbodyandparamconflictres.md
  - docs/models/operations/componentbodyandparamnoconflictrequest.md
  - docs/models/operations/componentbodyandparamnoconflictres.md
  - docs/models/operations/conflictingparamsrequest.md
  - docs/models/operations/conflictingparamsres.md
  - docs/models/operations/console.md
  - docs/models/operations/constdiscriminatedoneofres.md
  - docs/models/operations/createfilefile.md
  - docs/models/operations/createfilerequestbody.md
  - docs/models/operations/customclientpostrequest.md
  - docs/models/operations/customclientpostres.md
  - docs/models/operations/customschemeappidsecurity.md
  - docs/models/operations/dateparamwithdefaultrequest.md
  - docs/models/operations/datetimeparamwithdefaultrequest.md
  - docs/models/operations/decimalparamwithdefaultrequest.md
  - docs/models/operations/deepobjectqueryparamsdeepobjectargs.md
  - docs/models/operations/deepobjectqueryparamsdeepobjectrequest.md
  - docs/models/operations/deepobjectqueryparamsdeepobjectres.md
  - docs/models/operations/deepobjectqueryparamsmapargs.md
  - docs/models/operations/deepobjectqueryparamsmaprequest.md
  - docs/models/operations/deepobjectqueryparamsmapres.md
  - docs/models/operations/deepobjectqueryparamsobjectargs.md
  - docs/models/operations/deepobjectqueryparamsobjectrequest.md
  - docs/models/operations/deepobjectqueryparamsobjectres.md
  - docs/models/operations/deepoverriddenallof.md
  - docs/models/operations/deleteresourcerequest.md
  - docs/models/operations/deprecatedobjectinschemagetresponsebody.md
  - docs/models/operations/deprecatedoperationnocommentsgetrequest.md
  - docs/models/operations/deprecatedoperationwithcommentsgetrequest.md
  - docs/models/operations/differentfilename.md
  - docs/models/operations/discriminatedonemultiplemembershipshaswheelsres.md
  - docs/models/operations/discriminatedonemultiplemembershipsres.md
  - docs/models/operations/duplicateparamduplicateparamresponse.md
  - docs/models/operations/duplicateparamrequest.md
  - docs/models/operations/empty.md
  - docs/models/operations/emptyobjectgetrequest.md
  - docs/models/operations/emptyresponseobjectwithcommentgetresponsebody.md
  - docs/models/operations/emptyrespwithemptyproperies.md
  - docs/models/operations/emptywithemptyproperties.md
  - docs/models/operations/enumnameoverride.md
  - docs/models/operations/enumparameter.md
  - docs/models/operations/enums.md
  - docs/models/operations/errortype1requestbody.md
  - docs/models/operations/errortype2message.md
  - docs/models/operations/errortype2requestbody.md
  - docs/models/operations/erroruniondiscriminatedpostrequestbody.md
  - docs/models/operations/errorunionpostrequestbody.md
  - docs/models/operations/file.md
  - docs/models/operations/flattenedenvelopepaginationresponserequest.md
  - docs/models/operations/flattenedenvelopepaginationresponseres.md
  - docs/models/operations/flattenedenvelopepaginationresponseresponse.md
  - docs/models/operations/flattenedenveloperesponseresponse.md
  - docs/models/operations/flattenedenveloperesponseresponsebody.md
  - docs/models/operations/flattenedenvelopeunionresponseresponse.md
  - docs/models/operations/flattenedenvelopeunionresponseresponsebodiesresponsebody.md
  - docs/models/operations/flattenedenvelopeunionresponseresponsebody.md
  - docs/models/operations/flattenedenvelopeunionresponseresponseresult.md
  - docs/models/operations/flattenedtypedobjectpostres.md
  - docs/models/operations/flattenedunionresponseresponse.md
  - docs/models/operations/flattenedunionresponseresponsebodiesresponsebody.md
  - docs/models/operations/flattenedunionresponseresponsebody.md
  - docs/models/operations/form.md
  - docs/models/operations/formqueryparamsarrayargs.md
  - docs/models/operations/formqueryparamsarrayrequest.md
  - docs/models/operations/formqueryparamsarrayres.md
  - docs/models/operations/formqueryparamscamelobjectargs.md
  - docs/models/operations/formqueryparamscamelobjectrequest.md
  - docs/models/operations/formqueryparamscamelobjectres.md
  - docs/models/operations/formqueryparamsmaprequest.md
  - docs/models/operations/formqueryparamsmapres.md
  - docs/models/operations/formqueryparamsobjectargs.md
  - docs/models/operations/formqueryparamsobjectrequest.md
  - docs/models/operations/formqueryparamsobjectres.md
  - docs/models/operations/formqueryparamsprimitiveargs.md
  - docs/models/operations/formqueryparamsprimitiverequest.md
  - docs/models/operations/formqueryparamsprimitiveres.md
  - docs/models/operations/formqueryparamsrefparamobjectargs.md
  - docs/models/operations/formqueryparamsrefparamobjectrequest.md
  - docs/models/operations/formqueryparamsrefparamobjectres.md
  - docs/models/operations/getarraydatasourcerequest.md
  - docs/models/operations/getdocumentationperlanguagerequest.md
  - docs/models/operations/getglobalnameoverrideresponsebody.md
  - docs/models/operations/getresourcerequest.md
  - docs/models/operations/globalbearerauthtoken.md
  - docs/models/operations/globalpathparametergetglobals.md
  - docs/models/operations/globalpathparametergetrequest.md
  - docs/models/operations/globalpathparametergetres.md
  - docs/models/operations/globalsheadergetglobals.md
  - docs/models/operations/globalsheadergetrequest.md
  - docs/models/operations/globalsheadergetres.md
  - docs/models/operations/globalshiddenpostargs.md
  - docs/models/operations/globalshiddenpostglobals.md
  - docs/models/operations/globalshiddenpostjson.md
  - docs/models/operations/globalshiddenpostrequestbody.md
  - docs/models/operations/globalshiddenpostres.md
  - docs/models/operations/globalsqueryparametergetargs.md
  - docs/models/operations/globalsqueryparametergetglobals.md
  - docs/models/operations/globalsqueryparametergetrequest.md
  - docs/models/operations/globalsqueryparametergetres.md
  - docs/models/operations/headerparamsarrayheaders.md
  - docs/models/operations/headerparamsarrayrequest.md
  - docs/models/operations/headerparamsarrayres.md
  - docs/models/operations/headerparamsmapheaders.md
  - docs/models/operations/headerparamsmaprequest.md
  - docs/models/operations/headerparamsmapres.md
  - docs/models/operations/headerparamsobjectheaders.md
  - docs/models/operations/headerparamsobjectrequest.md
  - docs/models/operations/headerparamsobjectres.md
  - docs/models/operations/headerparamsprimitiveheaders.md
  - docs/models/operations/headerparamsprimitiverequest.md
  - docs/models/operations/headerparamsprimitiveres.md
  - docs/models/operations/headers.md
  - docs/models/operations/ignoredgenerationgetresponsebody.md
  - docs/models/operations/ignoredgenerationputresponsebody.md
  - docs/models/operations/ignorespostrequest.md
  - docs/models/operations/ignorespostrequestbody.md
  - docs/models/operations/infectedwithanyres.md
  - docs/models/operations/inlinebodyandparamconflictrequest.md
  - docs/models/operations/inlinebodyandparamconflictrequestbody.md
  - docs/models/operations/inlinebodyandparamconflictres.md
  - docs/models/operations/inlinebodyandparamnoconflictjson.md
  - docs/models/operations/inlinebodyandparamnoconflictrequest.md
  - docs/models/operations/inlinebodyandparamnoconflictrequestbody.md
  - docs/models/operations/inlinebodyandparamnoconflictres.md
  - docs/models/operations/json.md
  - docs/models/operations/jsonqueryparamsobjectargs.md
  - docs/models/operations/jsonqueryparamsobjectrequest.md
  - docs/models/operations/jsonqueryparamsobjectres.md
  - docs/models/operations/jsonqueryparamsobjectsmallerargs.md
  - docs/models/operations/jsonqueryparamsobjectsmallerrequest.md
  - docs/models/operations/jsonqueryparamsobjectsmallerres.md
  - docs/models/operations/jsonresponse.md
  - docs/models/operations/methoddeleterequestbody.md
  - docs/models/operations/methoddeleteresponsebody.md
  - docs/models/operations/methodgetresponsebody.md
  - docs/models/operations/methodoptionsresponse.md
  - docs/models/operations/methodpatchrequestbody.md
  - docs/models/operations/methodpatchresponsebody.md
  - docs/models/operations/methodpostrequestbody.md
  - docs/models/operations/methodpostresponsebody.md
  - docs/models/operations/methodputrequestbody.md
  - docs/models/operations/methodputresponsebody.md
  - docs/models/operations/mixedparameterscamelcaseargs.md
  - docs/models/operations/mixedparameterscamelcaseheaders.md
  - docs/models/operations/mixedparameterscamelcaserequest.md
  - docs/models/operations/mixedparameterscamelcaseres.md
  - docs/models/operations/mixedparametersprimitivesargs.md
  - docs/models/operations/mixedparametersprimitivesheaders.md
  - docs/models/operations/mixedparametersprimitivesrequest.md
  - docs/models/operations/mixedparametersprimitivesres.md
  - docs/models/operations/mixedqueryparamsrequest.md
  - docs/models/operations/mixedqueryparamsres.md
  - docs/models/operations/mixedtypeoneofpostjson.md
  - docs/models/operations/mixedtypeoneofpostrequestbody.md
  - docs/models/operations/mixedtypeoneofpostres.md
  - docs/models/operations/mixeduniontypesres.md
  - docs/models/operations/multilineexamplerequestbody.md
  - docs/models/operations/multiplemixedoptionsauthsecurity.md
  - docs/models/operations/multiplemixedschemeauthsecurity.md
  - docs/models/operations/multipleoptionswithmixedschemesauthsecurity.md
  - docs/models/operations/multipleoptionswithmixedschemesauthsecurityoption1.md
  - docs/models/operations/multipleoptionswithmixedschemesauthsecurityoption2.md
  - docs/models/operations/multipleoptionswithsimpleschemesauthsecurity.md
  - docs/models/operations/multipleoptionswithsimpleschemesauthsecurityoption1.md
  - docs/models/operations/multipleoptionswithsimpleschemesauthsecurityoption2.md
  - docs/models/operations/multiplesimpleoptionsauthsecurity.md
  - docs/models/operations/multiplesimpleschemeauthsecurity.md
  - docs/models/operations/nameoverridegetoverriddenresponse.md
  - docs/models/operations/nameoverridegetrequest.md
  - docs/models/operations/nestedarrayofdiscriminatedunionsres.md
  - docs/models/operations/nullableobjectpostres.md
  - docs/models/operations/nullableoneofrefinobjectpostres.md
  - docs/models/operations/nullableoneofschemapostjson.md
  - docs/models/operations/nullableoneofschemapostrequestbody.md
  - docs/models/operations/nullableoneofschemapostres.md
  - docs/models/operations/nullableoneoftypeinobjectpostres.md
  - docs/models/operations/nullableoptionalfieldspostjson.md
  - docs/models/operations/nullableoptionalfieldspostrequestbody.md
  - docs/models/operations/nullableoptionalfieldspostresponsebody.md
  - docs/models/operations/nullableoptionalobj.md
  - docs/models/operations/nullablerequiredemptyobjectpostjson.md
  - docs/models/operations/nullablerequiredemptyobjectpostnullableoptionalobj.md
  - docs/models/operations/nullablerequiredemptyobjectpostnullablerequiredobj.md
  - docs/models/operations/nullablerequiredemptyobjectpostrequestbody.md
  - docs/models/operations/nullablerequiredemptyobjectpostrequiredobj.md
  - docs/models/operations/nullablerequiredemptyobjectpostresponsebody.md
  - docs/models/operations/nullablerequiredenum.md
  - docs/models/operations/nullablerequiredobj.md
  - docs/models/operations/nullablerequiredpropertypostjson.md
  - docs/models/operations/nullablerequiredpropertypostnullablerequiredenum.md
  - docs/models/operations/nullablerequiredpropertypostrequestbody.md
  - docs/models/operations/nullablerequiredpropertypostresponsebody.md
  - docs/models/operations/nullablerequiredsharedobjectpostjson.md
  - docs/models/operations/nullablerequiredsharedobjectpostrequestbody.md
  - docs/models/operations/nullablerequiredsharedobjectpostresponsebody.md
  - docs/models/operations/nullabletypedobjectpostres.md
  - docs/models/operations/nullenumpostres.md
  - docs/models/operations/oauth2authtoken.md
  - docs/models/operations/oauth2overridetoken.md
  - docs/models/operations/obj.md
  - docs/models/operations/objarrparam.md
  - docs/models/operations/objparam.md
  - docs/models/operations/objparamexploded.md
  - docs/models/operations/oneofoverlappingobjectsrequestbody.md
  - docs/models/operations/oneofoverlappingobjectsres.md
  - docs/models/operations/openidconnectauthnewsecurity.md
  - docs/models/operations/openidconnectauthsecurity.md
  - docs/models/operations/openidconnectauthtoken.md
  - docs/models/operations/optenumparameter.md
  - docs/models/operations/overriddenallof.md
  - docs/models/operations/overriddenfieldnamespostjson.md
  - docs/models/operations/overriddenfieldnamespostrequestbody.md
  - docs/models/operations/overriddenfieldnamespostresponsebody.md
  - docs/models/operations/overriddennormal.md
  - docs/models/operations/pageinfo.md
  - docs/models/operations/paginationambiguousinputrequest.md
  - docs/models/operations/paginationambiguousinputrequestbody.md
  - docs/models/operations/paginationambiguousinputres.md
  - docs/models/operations/paginationambiguousinputresponse.md
  - docs/models/operations/paginationbodyflattenedoptionalsecurityrequest.md
  - docs/models/operations/paginationbodyflattenedoptionalsecurityres.md
  - docs/models/operations/paginationbodyflattenedoptionalsecurityresponse.md
  - docs/models/operations/paginationbodyflattenedoptionalsecuritysecurity.md
  - docs/models/operations/paginationbodyflattenedwithsecurityrequest.md
  - docs/models/operations/paginationbodyflattenedwithsecurityres.md
  - docs/models/operations/paginationbodyflattenedwithsecurityresponse.md
  - docs/models/operations/paginationbodyflattenedwithsecuritysecurity.md
  - docs/models/operations/paginationbodywrappedrequestrequest.md
  - docs/models/operations/paginationbodywrappedrequestres.md
  - docs/models/operations/paginationbodywrappedrequestresponse.md
  - docs/models/operations/paginationcursorbodyrequestbody.md
  - docs/models/operations/paginationcursorbodyres.md
  - docs/models/operations/paginationcursorbodyresponse.md
  - docs/models/operations/paginationcursornonnumericrequest.md
  - docs/models/operations/paginationcursornonnumericres.md
  - docs/models/operations/paginationcursornonnumericresponse.md
  - docs/models/operations/paginationcursorparamsrequest.md
  - docs/models/operations/paginationcursorparamsres.md
  - docs/models/operations/paginationcursorparamsresponse.md
  - docs/models/operations/paginationlimitoffsetdeepoutputspagebodyres.md
  - docs/models/operations/paginationlimitoffsetdeepoutputspagebodyresponse.md
  - docs/models/operations/paginationlimitoffsetoffsetbodyres.md
  - docs/models/operations/paginationlimitoffsetoffsetbodyresponse.md
  - docs/models/operations/paginationlimitoffsetoffsetparamsrequest.md
  - docs/models/operations/paginationlimitoffsetoffsetparamsres.md
  - docs/models/operations/paginationlimitoffsetoffsetparamsresponse.md
  - docs/models/operations/paginationlimitoffsetpagebodyres.md
  - docs/models/operations/paginationlimitoffsetpagebodyresponse.md
  - docs/models/operations/paginationlimitoffsetpageparamsrequest.md
  - docs/models/operations/paginationlimitoffsetpageparamsres.md
  - docs/models/operations/paginationlimitoffsetpageparamsresponse.md
  - docs/models/operations/paginationurlparamsrequest.md
  - docs/models/operations/paginationurlparamsres.md
  - docs/models/operations/paginationurlparamsresponse.md
  - docs/models/operations/paginationwithretriesrequest.md
  - docs/models/operations/paginationwithretriesres.md
  - docs/models/operations/paginationwithretriesresponse.md
  - docs/models/operations/paginationwrappedoptionalbodyrequest.md
  - docs/models/operations/paginationwrappedoptionalbodyres.md
  - docs/models/operations/paginationwrappedoptionalbodyresponse.md
  - docs/models/operations/paginationwrappedoptionalbodysecurity.md
  - docs/models/operations/pathparameterjsonrequest.md
  - docs/models/operations/pathparameterjsonres.md
  - docs/models/operations/pipedelimitedqueryparamsarrayargs.md
  - docs/models/operations/pipedelimitedqueryparamsarrayrequest.md
  - docs/models/operations/pipedelimitedqueryparamsarrayres.md
  - docs/models/operations/postadditionalpropertieswithnullablefieldsrequestbody.md
  - docs/models/operations/postadditionalpropertieswithnullablefieldsresponsebody.md
  - docs/models/operations/primitivetypeoneofpostjson.md
  - docs/models/operations/primitivetypeoneofpostrequestbody.md
  - docs/models/operations/primitivetypeoneofpostres.md
  - docs/models/operations/reacthookcombinedoptionsrequest.md
  - docs/models/operations/reacthookcombinedoptionsresponse.md
  - docs/models/operations/requestbodydeprecatedrequestbodyrefpostresponsebody.md
  - docs/models/operations/requestbodygetinferredoptionalrequestwrapperargs.md
  - docs/models/operations/requestbodygetinferredoptionalrequestwrapperrequest.md
  - docs/models/operations/requestbodygetinferredoptionalrequestwrapperresponsebody.md
  - docs/models/operations/requestbodypostapplicationjsonarrayofunionsrequestbody.md
  - docs/models/operations/requestbodypostapplicationjsondeepcamelcaseres.md
  - docs/models/operations/requestbodypostapplicationjsondeepres.md
  - docs/models/operations/requestbodypostapplicationjsonmultiplejsonfilteredres.md
  - docs/models/operations/requestbodypostapplicationjsonsimplecamelcaseres.md
  - docs/models/operations/requestbodypostapplicationjsonsimpleres.md
  - docs/models/operations/requestbodypostcomplexnumbertypesrequest.md
  - docs/models/operations/requestbodypostcomplexnumbertypesresponsebody.md
  - docs/models/operations/requestbodypostdefaultsandconstsresponsebody.md
  - docs/models/operations/requestbodypostemptybodyretainedwithalloptionalfieldsjson.md
  - docs/models/operations/requestbodypostemptybodyretainedwithalloptionalfieldsrequestbody.md
  - docs/models/operations/requestbodypostemptybodyretainedwithalloptionalfieldsresponsebody.md
  - docs/models/operations/requestbodypostemptyobjectempty.md
  - docs/models/operations/requestbodypostemptyobjectrequestbody.md
  - docs/models/operations/requestbodypostemptyobjectresponsebody.md
  - docs/models/operations/requestbodypostformdeepres.md
  - docs/models/operations/requestbodypostformmapprimitiveres.md
  - docs/models/operations/requestbodypostformsimpleform.md
  - docs/models/operations/requestbodypostformsimpleheaders.md
  - docs/models/operations/requestbodypostformsimpleres.md
  - docs/models/operations/requestbodypostjsondatatypesarraybigintresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesarraydateresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesarraydecimalstrresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesbigintresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesbigintstrresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesbooleanresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypescomplexnumberarraysres.md
  - docs/models/operations/requestbodypostjsondatatypescomplexnumbermapsres.md
  - docs/models/operations/requestbodypostjsondatatypesdateresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesdatetimeresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesdecimalresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesdecimalstrresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesfloat32responsebody.md
  - docs/models/operations/requestbodypostjsondatatypesint32responsebody.md
  - docs/models/operations/requestbodypostjsondatatypesintegerresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesmapbigintstrresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesmapdatetimeresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesmapdecimalresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesnumberresponsebody.md
  - docs/models/operations/requestbodypostjsondatatypesstringresponsebody.md
  - docs/models/operations/requestbodypostmultiplecontenttypescomponentfiltereddefaulttestres.md
  - docs/models/operations/requestbodypostmultiplecontenttypescomponentfilteredres.md
  - docs/models/operations/requestbodypostmultiplecontenttypesinlinefilteredrequestbody.md
  - docs/models/operations/requestbodypostmultiplecontenttypesinlinefilteredres.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitformrequestbody.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitformres.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitjsonrequestbody.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitjsonres.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitmultipartrequestbody.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitmultipartres.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparamformrequest.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparamformrequestbody.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparamformres.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparamjsonrequest.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparamjsonrequestbody.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparamjsonres.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparammultipartrequest.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparammultipartrequestbody.md
  - docs/models/operations/requestbodypostmultiplecontenttypessplitparammultipartres.md
  - docs/models/operations/requestbodypostnotnullablenotrequiredstringbodyresponsebody.md
  - docs/models/operations/requestbodypostnullablenotrequiredstringbodyresponsebody.md
  - docs/models/operations/requestbodypostnullablerequiredstringbodyresponsebody.md
  - docs/models/operations/requestbodypostnullarrayresponsebody.md
  - docs/models/operations/requestbodypostnulldictionaryresponsebody.md
  - docs/models/operations/requestbodyputbytesres.md
  - docs/models/operations/requestbodyputbyteswithparamsargs.md
  - docs/models/operations/requestbodyputbyteswithparamsrequest.md
  - docs/models/operations/requestbodyputbyteswithparamsres.md
  - docs/models/operations/requestbodyputmultipartdeepform.md
  - docs/models/operations/requestbodyputmultipartdeepres.md
  - docs/models/operations/requestbodyputmultipartdifferentfilenamerequestbody.md
  - docs/models/operations/requestbodyputmultipartdifferentfilenameres.md
  - docs/models/operations/requestbodyputmultipartfilerequestbody.md
  - docs/models/operations/requestbodyputmultipartfileres.md
  - docs/models/operations/requestbodyputmultipartoptionalrequestbodyform.md
  - docs/models/operations/requestbodyputmultipartoptionalrequestbodyrequestbody.md
  - docs/models/operations/requestbodyputmultipartoptionalrequestbodyres.md
  - docs/models/operations/requestbodyputmultipartsimpleform.md
  - docs/models/operations/requestbodyputmultipartsimpleheaders.md
  - docs/models/operations/requestbodyputmultipartsimpleres.md
  - docs/models/operations/requestbodyputstringres.md
  - docs/models/operations/requestbodyputstringwithparamsargs.md
  - docs/models/operations/requestbodyputstringwithparamsrequest.md
  - docs/models/operations/requestbodyputstringwithparamsres.md
  - docs/models/operations/requiredbodyalloptionalres.md
  - docs/models/operations/requiredobj.md
  - docs/models/operations/responsebodyadditionalpropertiesanypostresponsebody.md
  - docs/models/operations/responsebodyadditionalpropertiescomplexnumberspostresponsebody.md
  - docs/models/operations/responsebodyadditionalpropertiesdatepostresponsebody.md
  - docs/models/operations/responsebodyadditionalpropertiesobjectpostresponsebody.md
  - docs/models/operations/responsebodyadditionalpropertiespostresponsebody.md
  - docs/models/operations/responsebodybytesgetrequest.md
  - docs/models/operations/responsebodyemptywithheadersrequest.md
  - docs/models/operations/responsebodyemptywithheadersresponse.md
  - docs/models/operations/responsebodymultilinestringpostjson.md
  - docs/models/operations/responsebodymultilinestringpostrequestbody.md
  - docs/models/operations/responsebodymultilinestringpostresponsebody.md
  - docs/models/operations/responsebodyoptionalgetresponse.md
  - docs/models/operations/retriesafterrequest.md
  - docs/models/operations/retriesafterretries.md
  - docs/models/operations/retriesconnecterrorgetretries.md
  - docs/models/operations/retriesflatemptyresponsepostrequest.md
  - docs/models/operations/retriesflatemptyresponsepostrequestbody.md
  - docs/models/operations/retriesgetrequest.md
  - docs/models/operations/retriesgetretries.md
  - docs/models/operations/retriespostrequest.md
  - docs/models/operations/retriespostrequestbody.md
  - docs/models/operations/retriespostretries.md
  - docs/models/operations/samplefile.md
  - docs/models/operations/selectglobalserverresponse.md
  - docs/models/operations/simplepathparameterarraysrequest.md
  - docs/models/operations/simplepathparameterarraysres.md
  - docs/models/operations/simplepathparametermapsrequest.md
  - docs/models/operations/simplepathparametermapsres.md
  - docs/models/operations/simplepathparameterobjectsrequest.md
  - docs/models/operations/simplepathparameterobjectsres.md
  - docs/models/operations/simplepathparameterprimitivesrequest.md
  - docs/models/operations/simplepathparameterprimitivesres.md
  - docs/models/operations/statusgeterrorrequest.md
  - docs/models/operations/statusgetxspeakeasyerrorsrequest.md
  - docs/models/operations/stronglytypedoneofdiscriminatedpostres.md
  - docs/models/operations/stronglytypedoneofpostres.md
  - docs/models/operations/stronglytypedoneofpostwithnonstandarddiscriminatornameres.md
  - docs/models/operations/taggederror1requestbody.md
  - docs/models/operations/taggederror2message.md
  - docs/models/operations/taggederror2requestbody.md
  - docs/models/operations/telemetryspeakeasyuseragentgetrequest.md
  - docs/models/operations/telemetryspeakeasyuseragentgetres.md
  - docs/models/operations/telemetryuseragentgetres.md
  - docs/models/operations/testhooksargs.md
  - docs/models/operations/testhooksbeforecreaterequestpathsheaders.md
  - docs/models/operations/testhooksbeforecreaterequestpathsrequest.md
  - docs/models/operations/testhooksbeforecreaterequestpathsres.md
  - docs/models/operations/testhooksrequest.md
  - docs/models/operations/testhooksres.md
  - docs/models/operations/typedobjectnullableoneofpostres.md
  - docs/models/operations/typedobjectoneofpostres.md
  - docs/models/operations/typedparametergenerationgetrequest.md
  - docs/models/operations/unionbigintstrdecimaljson.md
  - docs/models/operations/unionbigintstrdecimalrequestbody.md
  - docs/models/operations/unionbigintstrdecimalres.md
  - docs/models/operations/uniondatenullres.md
  - docs/models/operations/uniondatetimebigintjson.md
  - docs/models/operations/uniondatetimebigintrequestbody.md
  - docs/models/operations/uniondatetimebigintres.md
  - docs/models/operations/uniondatetimenullres.md
  - docs/models/operations/unionmapjson.md
  - docs/models/operations/unionmapoptionaljson.md
  - docs/models/operations/unionmapoptionalrequestbody.md
  - docs/models/operations/unionmapoptionalres.md
  - docs/models/operations/unionmaprequestbody.md
  - docs/models/operations/unionmapres.md
  - docs/models/operations/unionnestedenumsformrequestbody.md
  - docs/models/operations/unionnestedenumsformres.md
  - docs/models/operations/unionnestedenumsmultipartrequestbody.md
  - docs/models/operations/unionnestedenumsmultipartres.md
  - docs/models/operations/unionofarrayspostres.md
  - docs/models/operations/updateresourcerequest.md
  - docs/models/operations/usageexamplepostjson.md
  - docs/models/operations/usageexamplepostrequest.md
  - docs/models/operations/usageexamplepostrequestbody.md
  - docs/models/operations/usageexamplepostresponsebody.md
  - docs/models/operations/usageexamplepostsecurity.md
  - docs/models/operations/weaklytypedoneofnullenumpostres.md
  - docs/models/operations/weaklytypedoneofpostres.md
  - docs/models/shared/alloftoallof.md
  - docs/models/shared/anyofmultimatch.md
  - docs/models/shared/anyofmultimatchmember1.md
  - docs/models/shared/anyofmultimatchmember2.md
  - docs/models/shared/anyt.md
  - docs/models/shared/anyval.md
  - docs/models/shared/arraycircularreferenceobject.md
  - docs/models/shared/arrayofdiscriminatedunionsmap.md
  - docs/models/shared/arrobjvalue.md
  - docs/models/shared/arrobjvaluecamelcase.md
  - docs/models/shared/authservicerequestbody.md
  - docs/models/shared/basicauth.md
  - docs/models/shared/bike.md
  - docs/models/shared/car.md
  - docs/models/shared/chatcompletionevent.md
  - docs/models/shared/chatcompletionresult.md
  - docs/models/shared/chatcompletionstream.md
  - docs/models/shared/child.md
  - docs/models/shared/chocolates.md
  - docs/models/shared/collectiononeofobject.md
  - docs/models/shared/color.md
  - docs/models/shared/complexnumberarrays.md
  - docs/models/shared/complexnumbermaps.md
  - docs/models/shared/complexnumbertypes.md
  - docs/models/shared/conflictingenum.md
  - docs/models/shared/constdiscriminatedoneof.md
  - docs/models/shared/constenumint.md
  - docs/models/shared/constenumstr.md
  - docs/models/shared/constobject1.md
  - docs/models/shared/constobject2.md
  - docs/models/shared/data.md
  - docs/models/shared/deepobject.md
  - docs/models/shared/deepobjectcamelcase.md
  - docs/models/shared/deepobjectqueryparams.md
  - docs/models/shared/deepobjectsmaller.md
  - docs/models/shared/deepobjectsmallerany.md
  - docs/models/shared/deepobjectwithnonstandardtypename.md
  - docs/models/shared/deepobjectwithnonstandardtypenameany.md
  - docs/models/shared/deepobjectwithtype.md
  - docs/models/shared/deepobjectwithtypeany.md
  - docs/models/shared/defaultenumint.md
  - docs/models/shared/defaultenumstr.md
  - docs/models/shared/defaultsandconsts.md
  - docs/models/shared/deprecatedenum.md
  - docs/models/shared/deprecatedfieldinobject.md
  - docs/models/shared/deprecatedobject.md
  - docs/models/shared/deprecatedobjectwithexample.md
  - docs/models/shared/differentdataschemas.md
  - docs/models/shared/differentdataschemasdata.md
  - docs/models/shared/emptyobjectparam.md
  - docs/models/shared/enumnumber.md
  - docs/models/shared/enumstr.md
  - docs/models/shared/enumt.md
  - docs/models/shared/errortype.md
  - docs/models/shared/event.md
  - docs/models/shared/exampleboat.md
  - docs/models/shared/examplecar.md
  - docs/models/shared/examplecartype.md
  - docs/models/shared/exampleresource.md
  - docs/models/shared/examplevehicle.md
  - docs/models/shared/fakerformattedstrings.md
  - docs/models/shared/fakerstrings.md
  - docs/models/shared/figmabooleanoperationnode.md
  - docs/models/shared/figmacomponentnode.md
  - docs/models/shared/figmasubcanvasnode.md
  - docs/models/shared/fileresource.md
  - docs/models/shared/flattenedtypedobject1.md
  - docs/models/shared/haswheels.md
  - docs/models/shared/headerauth.md
  - docs/models/shared/heartbeatevent.md
  - docs/models/shared/herowidth.md
  - docs/models/shared/httpbinsimplejsonobject.md
  - docs/models/shared/icon.md
  - docs/models/shared/infectedwithany.md
  - docs/models/shared/infectedwithanydata.md
  - docs/models/shared/inlineobject.md
  - docs/models/shared/int32enum.md
  - docs/models/shared/int32enumval.md
  - docs/models/shared/intenum.md
  - docs/models/shared/intenumval.md
  - docs/models/shared/jsonevent.md
  - docs/models/shared/jsoneventdata.md
  - docs/models/shared/limitoffsetconfig.md
  - docs/models/shared/mapobjvalue.md
  - docs/models/shared/mapobjvaluecamelcase.md
  - docs/models/shared/messageevent.md
  - docs/models/shared/mixeduniontypes.md
  - docs/models/shared/nestedarrayofdiscriminatedunions.md
  - docs/models/shared/nestedenumarray.md
  - docs/models/shared/nestedenummap.md
  - docs/models/shared/nullableobject.md
  - docs/models/shared/nullableoneofrefinobject.md
  - docs/models/shared/nullableoneoftwo.md
  - docs/models/shared/nullableoneoftypeinobject.md
  - docs/models/shared/nullableoneoftypeinobjectnullableoneoftwo.md
  - docs/models/shared/nullableoptionalobject.md
  - docs/models/shared/numericunion.md
  - docs/models/shared/obj1.md
  - docs/models/shared/obj2.md
  - docs/models/shared/object.md
  - docs/models/shared/objectcircularreferenceobject.md
  - docs/models/shared/objectwithnullenums.md
  - docs/models/shared/objwithanyadditionalproperties.md
  - docs/models/shared/objwithcomplexnumbersadditionalproperties.md
  - docs/models/shared/objwithdateadditionalproperties.md
  - docs/models/shared/objwithobjadditionalproperties.md
  - docs/models/shared/objwithoptionalproperties.md
  - docs/models/shared/objwithstringadditionalproperties.md
  - docs/models/shared/one.md
  - docs/models/shared/oneofcircularreferenceobject.md
  - docs/models/shared/oneoffromarrayoftypes.md
  - docs/models/shared/oneofgenerationstresstest.md
  - docs/models/shared/oneofone.md
  - docs/models/shared/oneofoverlappingobjects.md
  - docs/models/shared/oneofprimitives.md
  - docs/models/shared/oneofsametype.md
  - docs/models/shared/primitivetypeunion.md
  - docs/models/shared/readonlyobject.md
  - docs/models/shared/readonlyobjectinput.md
  - docs/models/shared/readwriteobject.md
  - docs/models/shared/readwriteobjectoutput.md
  - docs/models/shared/refqueryparamobj.md
  - docs/models/shared/refqueryparamobjexploded.md
  - docs/models/shared/richcompletionevent.md
  - docs/models/shared/richcompletioneventdata.md
  - docs/models/shared/richstream.md
  - docs/models/shared/schemebasicauth.md
  - docs/models/shared/security.md
  - docs/models/shared/sentinelevent.md
  - docs/models/shared/simpleobject.md
  - docs/models/shared/simpleobjectcamelcase.md
  - docs/models/shared/simpleobjectwithnonstandardtypename.md
  - docs/models/shared/simpleobjectwithnonstandardtypenameint32enum.md
  - docs/models/shared/simpleobjectwithnonstandardtypenameintenum.md
  - docs/models/shared/simpleobjectwithtype.md
  - docs/models/shared/simpleobjectwithtypeint32enum.md
  - docs/models/shared/simpleobjectwithtypeintenum.md
  - docs/models/shared/slides.md
  - docs/models/shared/slideshow.md
  - docs/models/shared/stopreason.md
  - docs/models/shared/stronglytypedoneofdiscriminatedobject.md
  - docs/models/shared/stronglytypedoneofobject.md
  - docs/models/shared/stronglytypedoneofobjectwithnonstandarddiscriminatorname.md
  - docs/models/shared/tag.md
  - docs/models/shared/taggedobject1.md
  - docs/models/shared/taggedobject2.md
  - docs/models/shared/taggedobject2tag.md
  - docs/models/shared/taggedobject3.md
  - docs/models/shared/textevent.md
  - docs/models/shared/theme.md
  - docs/models/shared/themerequestopaque.md
  - docs/models/shared/themeresponse.md
  - docs/models/shared/three.md
  - docs/models/shared/two.md
  - docs/models/shared/type.md
  - docs/models/shared/typedobject1.md
  - docs/models/shared/typedobject1type.md
  - docs/models/shared/typedobject2.md
  - docs/models/shared/typedobject2type.md
  - docs/models/shared/typedobject3.md
  - docs/models/shared/typedobject3type.md
  - docs/models/shared/typedobjectnullableoneof.md
  - docs/models/shared/typedobjectoneof.md
  - docs/models/shared/unionofarrays.md
  - docs/models/shared/unionofarrays2.md
  - docs/models/shared/unsupportedenums.md
  - docs/models/shared/urlevent.md
  - docs/models/shared/validcircularreferenceobject.md
  - docs/models/shared/vehicle.md
  - docs/models/shared/weaklytypedoneofnullenumobject.md
  - docs/models/shared/weaklytypedoneofobject.md
  - docs/models/shared/weaklytypedoneofreadonlyobject.md
  - docs/models/shared/weaklytypedoneofreadonlyobjectinput.md
  - docs/models/shared/weaklytypedoneofreadwriteobject.md
  - docs/models/shared/weaklytypedoneofreadwriteobjectoutput.md
  - docs/models/shared/weaklytypedoneofwriteonlyobject.md
  - docs/models/shared/weaklytypedoneofwriteonlyobjectoutput.md
  - docs/models/shared/webhookrequestcreated.md
  - docs/models/shared/webhookrequestcreatedtype.md
  - docs/models/shared/webhookrequestupdated.md
  - docs/models/shared/webhookrequestupdatedtype.md
  - docs/models/shared/writeonlyobject.md
  - docs/models/shared/writeonlyobjectoutput.md
  - docs/models/utils/retryconfig.md
  - docs/sdks/auth/README.md
  - docs/sdks/authnew/README.md
  - docs/sdks/customclient/README.md
  - docs/sdks/documentation/README.md
  - docs/sdks/errors/README.md
  - docs/sdks/eventstreams/README.md
  - docs/sdks/first/README.md
  - docs/sdks/flattening/README.md
  - docs/sdks/generation/README.md
  - docs/sdks/globals/README.md
  - docs/sdks/hooks/README.md
  - docs/sdks/methods/README.md
  - docs/sdks/nest/README.md
  - docs/sdks/nested/README.md
  - docs/sdks/openenums/README.md
  - docs/sdks/pagination/README.md
  - docs/sdks/parameters/README.md
  - docs/sdks/requestbodies/README.md
  - docs/sdks/resource/README.md
  - docs/sdks/responsebodies/README.md
  - docs/sdks/retries/README.md
  - docs/sdks/sdk/README.md
  - docs/sdks/sdkfirst/README.md
  - docs/sdks/sdknestedfirst/README.md
  - docs/sdks/sdksecond/README.md
  - docs/sdks/second/README.md
  - docs/sdks/servers/README.md
  - docs/sdks/statuscode/README.md
  - docs/sdks/telemetry/README.md
  - docs/sdks/unions/README.md
  - poetry.toml
  - py.typed
  - pylintrc
  - pyproject.toml
  - scripts/prepare-readme.py
  - scripts/publish.sh
  - src/openapi/__init__.py
  - src/openapi/_hooks/__init__.py
  - src/openapi/_hooks/sdkhooks.py
  - src/openapi/_hooks/types.py
  - src/openapi/_version.py
  - src/openapi/auth.py
  - src/openapi/authnew.py
  - src/openapi/basesdk.py
  - src/openapi/customclient.py
  - src/openapi/documentation.py
  - src/openapi/errors.py
  - src/openapi/eventstreams.py
  - src/openapi/first.py
  - src/openapi/flattening.py
  - src/openapi/generation.py
  - src/openapi/globals.py
  - src/openapi/hooks.py
  - src/openapi/httpclient.py
  - src/openapi/methods.py
  - src/openapi/models/callbacks/__init__.py
  - src/openapi/models/callbacks/ignoredgenerationget.py
  - src/openapi/models/errors/__init__.py
  - src/openapi/models/errors/error.py
  - src/openapi/models/errors/errortype1.py
  - src/openapi/models/errors/errortype2.py
  - src/openapi/models/errors/erroruniondiscriminatedpost.py
  - src/openapi/models/errors/errorunionpost.py
  - src/openapi/models/errors/sdkerror.py
  - src/openapi/models/errors/statusgetxspeakeasyerrors.py
  - src/openapi/models/errors/taggederror1.py
  - src/openapi/models/errors/taggederror2.py
  - src/openapi/models/errors/teapotjsonerror.py
  - src/openapi/models/internal/__init__.py
  - src/openapi/models/internal/globals.py
  - src/openapi/models/operations/__init__.py
  - src/openapi/models/operations/ambiguousqueryparam.py
  - src/openapi/models/operations/anchortypesget.py
  - src/openapi/models/operations/apikeyauth.py
  - src/openapi/models/operations/apikeyauthglobal.py
  - src/openapi/models/operations/arrayofdiscriminatedunions.py
  - src/openapi/models/operations/arrayofdiscriminatedunionsmap.py
  - src/openapi/models/operations/authenticatedrequest.py
  - src/openapi/models/operations/authglobal.py
  - src/openapi/models/operations/authorizationheadermodification.py
  - src/openapi/models/operations/basicauth.py
  - src/openapi/models/operations/basicauthnew.py
  - src/openapi/models/operations/bearerauth.py
  - src/openapi/models/operations/chat.py
  - src/openapi/models/operations/chatskipsentinel.py
  - src/openapi/models/operations/circularreferenceonedegree.py
  - src/openapi/models/operations/collectiononeofpost.py
  - src/openapi/models/operations/componentbodyandparamconflict.py
  - src/openapi/models/operations/componentbodyandparamnoconflict.py
  - src/openapi/models/operations/conflictingparams.py
  - src/openapi/models/operations/connectionerrorget.py
  - src/openapi/models/operations/constdiscriminatedoneof.py
  - src/openapi/models/operations/createfile.py
  - src/openapi/models/operations/customclientpost.py
  - src/openapi/models/operations/customschemeappid.py
  - src/openapi/models/operations/dateparamwithdefault.py
  - src/openapi/models/operations/datetimeparamwithdefault.py
  - src/openapi/models/operations/decimalparamwithdefault.py
  - src/openapi/models/operations/deepobjectqueryparamsdeepobject.py
  - src/openapi/models/operations/deepobjectqueryparamsmap.py
  - src/openapi/models/operations/deepobjectqueryparamsobject.py
  - src/openapi/models/operations/deleteresource.py
  - src/openapi/models/operations/deprecatedobjectinschemaget.py
  - src/openapi/models/operations/deprecatedoperationnocommentsget.py
  - src/openapi/models/operations/deprecatedoperationwithcommentsget.py
  - src/openapi/models/operations/differentdataschemas.py
  - src/openapi/models/operations/discriminatedonemultiplememberships.py
  - src/openapi/models/operations/discriminatedonemultiplemembershipshaswheels.py
  - src/openapi/models/operations/duplicateparam.py
  - src/openapi/models/operations/emptyobjectget.py
  - src/openapi/models/operations/emptyresponseobjectwithcommentget.py
  - src/openapi/models/operations/erroruniondiscriminatedpost.py
  - src/openapi/models/operations/errorunionpost.py
  - src/openapi/models/operations/flattenedenvelopepaginationresponse.py
  - src/openapi/models/operations/flattenedenveloperesponse.py
  - src/openapi/models/operations/flattenedenvelopeunionresponse.py
  - src/openapi/models/operations/flattenedtypedobjectpost.py
  - src/openapi/models/operations/flattenedunionresponse.py
  - src/openapi/models/operations/formqueryparamsarray.py
  - src/openapi/models/operations/formqueryparamscamelobject.py
  - src/openapi/models/operations/formqueryparamsmap.py
  - src/openapi/models/operations/formqueryparamsobject.py
  - src/openapi/models/operations/formqueryparamsprimitive.py
  - src/openapi/models/operations/formqueryparamsrefparamobject.py
  - src/openapi/models/operations/getarraydatasource.py
  - src/openapi/models/operations/getdocumentationperlanguage.py
  - src/openapi/models/operations/getglobalnameoverride.py
  - src/openapi/models/operations/getresource.py
  - src/openapi/models/operations/globalbearerauth.py
  - src/openapi/models/operations/globalpathparameterget.py
  - src/openapi/models/operations/globalsheaderget.py
  - src/openapi/models/operations/globalshiddenpost.py
  - src/openapi/models/operations/globalsqueryparameterget.py
  - src/openapi/models/operations/headerparamsarray.py
  - src/openapi/models/operations/headerparamsmap.py
  - src/openapi/models/operations/headerparamsobject.py
  - src/openapi/models/operations/headerparamsprimitive.py
  - src/openapi/models/operations/ignoredgenerationget.py
  - src/openapi/models/operations/ignoredgenerationput.py
  - src/openapi/models/operations/ignorespost.py
  - src/openapi/models/operations/infectedwithany.py
  - src/openapi/models/operations/inlinebodyandparamconflict.py
  - src/openapi/models/operations/inlinebodyandparamnoconflict.py
  - src/openapi/models/operations/json.py
  - src/openapi/models/operations/jsonqueryparamsobject.py
  - src/openapi/models/operations/jsonqueryparamsobjectsmaller.py
  - src/openapi/models/operations/methoddelete.py
  - src/openapi/models/operations/methodget.py
  - src/openapi/models/operations/methodhead.py
  - src/openapi/models/operations/methodoptions.py
  - src/openapi/models/operations/methodpatch.py
  - src/openapi/models/operations/methodpost.py
  - src/openapi/models/operations/methodput.py
  - src/openapi/models/operations/methodtrace.py
  - src/openapi/models/operations/mixedparameterscamelcase.py
  - src/openapi/models/operations/mixedparametersprimitives.py
  - src/openapi/models/operations/mixedqueryparams.py
  - src/openapi/models/operations/mixedtypeoneofpost.py
  - src/openapi/models/operations/mixeduniontypes.py
  - src/openapi/models/operations/multiline.py
  - src/openapi/models/operations/multilineexample.py
  - src/openapi/models/operations/multiplemixedoptionsauth.py
  - src/openapi/models/operations/multiplemixedschemeauth.py
  - src/openapi/models/operations/multipleoptionswithmixedschemesauth.py
  - src/openapi/models/operations/multipleoptionswithsimpleschemesauth.py
  - src/openapi/models/operations/multiplesimpleoptionsauth.py
  - src/openapi/models/operations/multiplesimpleschemeauth.py
  - src/openapi/models/operations/nameoverrideget.py
  - src/openapi/models/operations/nestedarrayofdiscriminatedunions.py
  - src/openapi/models/operations/nullableobjectpost.py
  - src/openapi/models/operations/nullableoneofrefinobjectpost.py
  - src/openapi/models/operations/nullableoneofschemapost.py
  - src/openapi/models/operations/nullableoneoftypeinobjectpost.py
  - src/openapi/models/operations/nullableoptionalfieldspost.py
  - src/openapi/models/operations/nullablerequiredemptyobjectpost.py
  - src/openapi/models/operations/nullablerequiredpropertypost.py
  - src/openapi/models/operations/nullablerequiredsharedobjectpost.py
  - src/openapi/models/operations/nullabletypedobjectpost.py
  - src/openapi/models/operations/nullenumpost.py
  - src/openapi/models/operations/oauth2auth.py
  - src/openapi/models/operations/oauth2authnew.py
  - src/openapi/models/operations/oauth2override.py
  - src/openapi/models/operations/oneofoverlappingobjects.py
  - src/openapi/models/operations/openidconnectauth.py
  - src/openapi/models/operations/openidconnectauthnew.py
  - src/openapi/models/operations/overriddenfieldnamespost.py
  - src/openapi/models/operations/paginationambiguousinput.py
  - src/openapi/models/operations/paginationbodyflattenedoptionalsecurity.py
  - src/openapi/models/operations/paginationbodyflattenedwithsecurity.py
  - src/openapi/models/operations/paginationbodywrappedrequest.py
  - src/openapi/models/operations/paginationcursorbody.py
  - src/openapi/models/operations/paginationcursornonnumeric.py
  - src/openapi/models/operations/paginationcursorparams.py
  - src/openapi/models/operations/paginationlimitoffsetdeepoutputspagebody.py
  - src/openapi/models/operations/paginationlimitoffsetoffsetbody.py
  - src/openapi/models/operations/paginationlimitoffsetoffsetparams.py
  - src/openapi/models/operations/paginationlimitoffsetpagebody.py
  - src/openapi/models/operations/paginationlimitoffsetpageparams.py
  - src/openapi/models/operations/paginationurlparams.py
  - src/openapi/models/operations/paginationwithretries.py
  - src/openapi/models/operations/paginationwrappedoptionalbody.py
  - src/openapi/models/operations/pathparameterjson.py
  - src/openapi/models/operations/pipedelimitedqueryparamsarray.py
  - src/openapi/models/operations/postadditionalpropertieswithnullablefields.py
  - src/openapi/models/operations/primitivetypeoneofpost.py
  - src/openapi/models/operations/reacthookcombinedoptions.py
  - src/openapi/models/operations/requestbodydeprecatedrequestbodyrefpost.py
  - src/openapi/models/operations/requestbodygetinferredoptionalrequestwrapper.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarray.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarraycamelcase.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarrayofarray.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarrayofarraycamelcase.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarrayofarrayofprimitive.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarrayofmap.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarrayofmapcamelcase.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarrayofprimitive.py
  - src/openapi/models/operations/requestbodypostapplicationjsonarrayofunions.py
  - src/openapi/models/operations/requestbodypostapplicationjsondeep.py
  - src/openapi/models/operations/requestbodypostapplicationjsondeepcamelcase.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmap.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmapcamelcase.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmapofarray.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmapofarraycamelcase.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmapofmap.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmapofmapcamelcase.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmapofmapofprimitive.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmapofprimitive.py
  - src/openapi/models/operations/requestbodypostapplicationjsonmultiplejsonfiltered.py
  - src/openapi/models/operations/requestbodypostapplicationjsonsimple.py
  - src/openapi/models/operations/requestbodypostapplicationjsonsimplecamelcase.py
  - src/openapi/models/operations/requestbodypostcomplexnumbertypes.py
  - src/openapi/models/operations/requestbodypostdefaultsandconsts.py
  - src/openapi/models/operations/requestbodypostemptybodyretainedwithalloptionalfields.py
  - src/openapi/models/operations/requestbodypostemptyobject.py
  - src/openapi/models/operations/requestbodypostformdeep.py
  - src/openapi/models/operations/requestbodypostformmapprimitive.py
  - src/openapi/models/operations/requestbodypostformsimple.py
  - src/openapi/models/operations/requestbodypostjsondatatypesarraybigint.py
  - src/openapi/models/operations/requestbodypostjsondatatypesarraydate.py
  - src/openapi/models/operations/requestbodypostjsondatatypesarraydecimalstr.py
  - src/openapi/models/operations/requestbodypostjsondatatypesbigint.py
  - src/openapi/models/operations/requestbodypostjsondatatypesbigintstr.py
  - src/openapi/models/operations/requestbodypostjsondatatypesboolean.py
  - src/openapi/models/operations/requestbodypostjsondatatypescomplexnumberarrays.py
  - src/openapi/models/operations/requestbodypostjsondatatypescomplexnumbermaps.py
  - src/openapi/models/operations/requestbodypostjsondatatypesdate.py
  - src/openapi/models/operations/requestbodypostjsondatatypesdatetime.py
  - src/openapi/models/operations/requestbodypostjsondatatypesdecimal.py
  - src/openapi/models/operations/requestbodypostjsondatatypesdecimalstr.py
  - src/openapi/models/operations/requestbodypostjsondatatypesfloat32.py
  - src/openapi/models/operations/requestbodypostjsondatatypesint32.py
  - src/openapi/models/operations/requestbodypostjsondatatypesinteger.py
  - src/openapi/models/operations/requestbodypostjsondatatypesmapbigintstr.py
  - src/openapi/models/operations/requestbodypostjsondatatypesmapdatetime.py
  - src/openapi/models/operations/requestbodypostjsondatatypesmapdecimal.py
  - src/openapi/models/operations/requestbodypostjsondatatypesnumber.py
  - src/openapi/models/operations/requestbodypostjsondatatypesstring.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypescomponentfiltered.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypescomponentfiltereddefaulttest.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypesinlinefiltered.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypessplit_form.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypessplit_json.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypessplit_multipart.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypessplitparam_form.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypessplitparam_json.py
  - src/openapi/models/operations/requestbodypostmultiplecontenttypessplitparam_multipart.py
  - src/openapi/models/operations/requestbodypostnotnullablenotrequiredstringbody.py
  - src/openapi/models/operations/requestbodypostnullablenotrequiredstringbody.py
  - src/openapi/models/operations/requestbodypostnullablerequiredstringbody.py
  - src/openapi/models/operations/requestbodypostnullarray.py
  - src/openapi/models/operations/requestbodypostnulldictionary.py
  - src/openapi/models/operations/requestbodyputbytes.py
  - src/openapi/models/operations/requestbodyputbyteswithparams.py
  - src/openapi/models/operations/requestbodyputmultipartdeep.py
  - src/openapi/models/operations/requestbodyputmultipartdifferentfilename.py
  - src/openapi/models/operations/requestbodyputmultipartfile.py
  - src/openapi/models/operations/requestbodyputmultipartoptionalrequestbody.py
  - src/openapi/models/operations/requestbodyputmultipartsimple.py
  - src/openapi/models/operations/requestbodyputstring.py
  - src/openapi/models/operations/requestbodyputstringwithparams.py
  - src/openapi/models/operations/requestbodyreadandwrite.py
  - src/openapi/models/operations/requestbodyreadonlyinput.py
  - src/openapi/models/operations/requestbodyreadonlyunion.py
  - src/openapi/models/operations/requestbodyreadwriteonlyunion.py
  - src/openapi/models/operations/requestbodywriteonly.py
  - src/openapi/models/operations/requestbodywriteonlyoutput.py
  - src/openapi/models/operations/requestbodywriteonlyunion.py
  - src/openapi/models/operations/requiredbodyalloptional.py
  - src/openapi/models/operations/responsebodyadditionalpropertiesanypost.py
  - src/openapi/models/operations/responsebodyadditionalpropertiescomplexnumberspost.py
  - src/openapi/models/operations/responsebodyadditionalpropertiesdatepost.py
  - src/openapi/models/operations/responsebodyadditionalpropertiesobjectpost.py
  - src/openapi/models/operations/responsebodyadditionalpropertiespost.py
  - src/openapi/models/operations/responsebodybytesget.py
  - src/openapi/models/operations/responsebodydecimalstr.py
  - src/openapi/models/operations/responsebodyemptywithheaders.py
  - src/openapi/models/operations/responsebodymultilinestringpost.py
  - src/openapi/models/operations/responsebodyoptionalget.py
  - src/openapi/models/operations/responsebodyreadonly.py
  - src/openapi/models/operations/retriesafter.py
  - src/openapi/models/operations/retriesconnecterrorget.py
  - src/openapi/models/operations/retriesflatemptyresponsepost.py
  - src/openapi/models/operations/retriesget.py
  - src/openapi/models/operations/retriespost.py
  - src/openapi/models/operations/rich.py
  - src/openapi/models/operations/selectglobalserver.py
  - src/openapi/models/operations/selectserverwithid.py
  - src/openapi/models/operations/serversbyidwithtemplates.py
  - src/openapi/models/operations/serverwithprotocoltemplate.py
  - src/openapi/models/operations/serverwithtemplates.py
  - src/openapi/models/operations/simplepathparameterarrays.py
  - src/openapi/models/operations/simplepathparametermaps.py
  - src/openapi/models/operations/simplepathparameterobjects.py
  - src/openapi/models/operations/simplepathparameterprimitives.py
  - src/openapi/models/operations/statusgeterror.py
  - src/openapi/models/operations/statusgetxspeakeasyerrors.py
  - src/openapi/models/operations/stronglytypedoneofdiscriminatedpost.py
  - src/openapi/models/operations/stronglytypedoneofpost.py
  - src/openapi/models/operations/stronglytypedoneofpostwithnonstandarddiscriminatorname.py
  - src/openapi/models/operations/telemetryspeakeasyuseragentget.py
  - src/openapi/models/operations/telemetryuseragentget.py
  - src/openapi/models/operations/testhooks.py
  - src/openapi/models/operations/testhooksbeforecreaterequestpaths.py
  - src/openapi/models/operations/text.py
  - src/openapi/models/operations/typedobjectnullableoneofpost.py
  - src/openapi/models/operations/typedobjectoneofpost.py
  - src/openapi/models/operations/typedparametergenerationget.py
  - src/openapi/models/operations/unionbigintstrdecimal.py
  - src/openapi/models/operations/uniondatenull.py
  - src/openapi/models/operations/uniondatetimebigint.py
  - src/openapi/models/operations/uniondatetimenull.py
  - src/openapi/models/operations/unionmap.py
  - src/openapi/models/operations/unionmapoptional.py
  - src/openapi/models/operations/unionnestedenums_form.py
  - src/openapi/models/operations/unionnestedenums_multipart.py
  - src/openapi/models/operations/unionofarrayspost.py
  - src/openapi/models/operations/updateresource.py
  - src/openapi/models/operations/usageexamplepost.py
  - src/openapi/models/operations/weaklytypedoneofnullenumpost.py
  - src/openapi/models/operations/weaklytypedoneofpost.py
  - src/openapi/models/shared/__init__.py
  - src/openapi/models/shared/alloftoallof.py
  - src/openapi/models/shared/anyofmultimatch.py
  - src/openapi/models/shared/anyofmultimatchmember1.py
  - src/openapi/models/shared/anyofmultimatchmember2.py
  - src/openapi/models/shared/arraycircularreferenceobject.py
  - src/openapi/models/shared/arrayofdiscriminatedunionsmap.py
  - src/openapi/models/shared/arrobjvalue.py
  - src/openapi/models/shared/arrobjvaluecamelcase.py
  - src/openapi/models/shared/authservicerequestbody.py
  - src/openapi/models/shared/bike.py
  - src/openapi/models/shared/car.py
  - src/openapi/models/shared/chatcompletionevent.py
  - src/openapi/models/shared/chatcompletionresult.py
  - src/openapi/models/shared/chatcompletionstream.py
  - src/openapi/models/shared/collectiononeofobject.py
  - src/openapi/models/shared/complexnumberarrays.py
  - src/openapi/models/shared/complexnumbermaps.py
  - src/openapi/models/shared/complexnumbertypes.py
  - src/openapi/models/shared/conflictingenum.py
  - src/openapi/models/shared/constdiscriminatedoneof.py
  - src/openapi/models/shared/constobject1.py
  - src/openapi/models/shared/constobject2.py
  - src/openapi/models/shared/deepobject.py
  - src/openapi/models/shared/deepobjectcamelcase.py
  - src/openapi/models/shared/deepobjectqueryparams.py
  - src/openapi/models/shared/deepobjectsmaller.py
  - src/openapi/models/shared/deepobjectwithnonstandardtypename.py
  - src/openapi/models/shared/deepobjectwithtype.py
  - src/openapi/models/shared/defaultsandconsts.py
  - src/openapi/models/shared/deprecatedfieldinobject.py
  - src/openapi/models/shared/deprecatedobject.py
  - src/openapi/models/shared/deprecatedobjectwithexample.py
  - src/openapi/models/shared/differentdataschemas.py
  - src/openapi/models/shared/emptyobjectparam.py
  - src/openapi/models/shared/enum.py
  - src/openapi/models/shared/errortype.py
  - src/openapi/models/shared/exampleboat.py
  - src/openapi/models/shared/examplecar.py
  - src/openapi/models/shared/exampleresource.py
  - src/openapi/models/shared/examplevehicle.py
  - src/openapi/models/shared/fakerformattedstrings.py
  - src/openapi/models/shared/fakerstrings.py
  - src/openapi/models/shared/figma_booleanoperationnode.py
  - src/openapi/models/shared/figma_componentnode.py
  - src/openapi/models/shared/figma_subcanvasnode.py
  - src/openapi/models/shared/fileresource.py
  - src/openapi/models/shared/flattenedtypedobject1.py
  - src/openapi/models/shared/haswheels.py
  - src/openapi/models/shared/heartbeatevent.py
  - src/openapi/models/shared/httpbinsimplejsonobject.py
  - src/openapi/models/shared/infectedwithany.py
  - src/openapi/models/shared/jsonevent.py
  - src/openapi/models/shared/limitoffsetconfig.py
  - src/openapi/models/shared/mapobjvalue.py
  - src/openapi/models/shared/mapobjvaluecamelcase.py
  - src/openapi/models/shared/messageevent.py
  - src/openapi/models/shared/mixeduniontypes.py
  - src/openapi/models/shared/nestedarrayofdiscriminatedunions.py
  - src/openapi/models/shared/nestedenumarray.py
  - src/openapi/models/shared/nestedenummap.py
  - src/openapi/models/shared/nullableobject.py
  - src/openapi/models/shared/nullableoneofrefinobject.py
  - src/openapi/models/shared/nullableoneoftypeinobject.py
  - src/openapi/models/shared/nullableoptionalobject.py
  - src/openapi/models/shared/numericunion.py
  - src/openapi/models/shared/objectcircularreferenceobject.py
  - src/openapi/models/shared/objectwithnullenums.py
  - src/openapi/models/shared/objwithanyadditionalproperties.py
  - src/openapi/models/shared/objwithcomplexnumbersadditionalproperties.py
  - src/openapi/models/shared/objwithdateadditionalproperties.py
  - src/openapi/models/shared/objwithobjadditionalproperties.py
  - src/openapi/models/shared/objwithoptionalproperties.py
  - src/openapi/models/shared/objwithstringadditionalproperties.py
  - src/openapi/models/shared/oneofcircularreferenceobject.py
  - src/openapi/models/shared/oneofgenerationstresstest.py
  - src/openapi/models/shared/oneofoverlappingobjects.py
  - src/openapi/models/shared/oneofprimitives.py
  - src/openapi/models/shared/primitivetypeunion.py
  - src/openapi/models/shared/readonlyobject.py
  - src/openapi/models/shared/readonlyobject_input.py
  - src/openapi/models/shared/readwriteobject.py
  - src/openapi/models/shared/readwriteobject_output.py
  - src/openapi/models/shared/refqueryparamobj.py
  - src/openapi/models/shared/refqueryparamobjexploded.py
  - src/openapi/models/shared/richcompletionevent.py
  - src/openapi/models/shared/richcompletioneventdata.py
  - src/openapi/models/shared/richstream.py
  - src/openapi/models/shared/schemebasicauth.py
  - src/openapi/models/shared/security.py
  - src/openapi/models/shared/sentinelevent.py
  - src/openapi/models/shared/simpleobject.py
  - src/openapi/models/shared/simpleobjectcamelcase.py
  - src/openapi/models/shared/simpleobjectwithnonstandardtypename.py
  - src/openapi/models/shared/simpleobjectwithtype.py
  - src/openapi/models/shared/stronglytypedoneofdiscriminatedobject.py
  - src/openapi/models/shared/stronglytypedoneofobject.py
  - src/openapi/models/shared/stronglytypedoneofobjectwithnonstandarddiscriminatorname.py
  - src/openapi/models/shared/taggedobject1.py
  - src/openapi/models/shared/taggedobject2.py
  - src/openapi/models/shared/taggedobject3.py
  - src/openapi/models/shared/textevent.py
  - src/openapi/models/shared/theme.py
  - src/openapi/models/shared/themerequestopaque.py
  - src/openapi/models/shared/themeresponse.py
  - src/openapi/models/shared/typedobject1.py
  - src/openapi/models/shared/typedobject2.py
  - src/openapi/models/shared/typedobject3.py
  - src/openapi/models/shared/typedobjectnullableoneof.py
  - src/openapi/models/shared/typedobjectoneof.py
  - src/openapi/models/shared/unionofarrays.py
  - src/openapi/models/shared/unsupportedenums.py
  - src/openapi/models/shared/urlevent.py
  - src/openapi/models/shared/validcircularreferenceobject.py
  - src/openapi/models/shared/vehicle.py
  - src/openapi/models/shared/weaklytypedoneofnullenumobject.py
  - src/openapi/models/shared/weaklytypedoneofobject.py
  - src/openapi/models/shared/weaklytypedoneofreadonlyobject.py
  - src/openapi/models/shared/weaklytypedoneofreadonlyobject_input.py
  - src/openapi/models/shared/weaklytypedoneofreadwriteobject.py
  - src/openapi/models/shared/weaklytypedoneofreadwriteobject_output.py
  - src/openapi/models/shared/weaklytypedoneofwriteonlyobject.py
  - src/openapi/models/shared/weaklytypedoneofwriteonlyobject_output.py
  - src/openapi/models/shared/webhookrequestcreated.py
  - src/openapi/models/shared/webhookrequestupdated.py
  - src/openapi/models/shared/writeonlyobject.py
  - src/openapi/models/shared/writeonlyobject_output.py
  - src/openapi/nest.py
  - src/openapi/nested.py
  - src/openapi/openenums.py
  - src/openapi/pagination.py
  - src/openapi/parameters.py
  - src/openapi/py.typed
  - src/openapi/requestbodies.py
  - src/openapi/resource.py
  - src/openapi/responsebodies.py
  - src/openapi/retries.py
  - src/openapi/sdk.py
  - src/openapi/sdk_first.py
  - src/openapi/sdk_nested_first.py
  - src/openapi/sdk_second.py
  - src/openapi/sdkconfiguration.py
  - src/openapi/second.py
  - src/openapi/servers.py
  - src/openapi/statuscode.py
  - src/openapi/telemetry.py
  - src/openapi/types/__init__.py
  - src/openapi/types/basemodel.py
  - src/openapi/unions.py
  - src/openapi/utils/__init__.py
  - src/openapi/utils/annotations.py
  - src/openapi/utils/enums.py
  - src/openapi/utils/eventstreaming.py
  - src/openapi/utils/forms.py
  - src/openapi/utils/headers.py
  - src/openapi/utils/logger.py
  - src/openapi/utils/metadata.py
  - src/openapi/utils/queryparams.py
  - src/openapi/utils/requestbodies.py
  - src/openapi/utils/retries.py
  - src/openapi/utils/security.py
  - src/openapi/utils/serializers.py
  - src/openapi/utils/url.py
  - src/openapi/utils/values.py
  - tests/__init__.py
  - tests/common_helpers.py
  - tests/test_client.py
  - tests/test_hooks.py
  - tests/test_parameters.py
  - tests/test_requestbodies.py
  - tests/test_responsebodies.py
  - tests/test_sdk.py
  - tests/test_sdk_nested_first.py
  - testsclient-credentials/test_client_credentials_hook.py
  - testscommon/common_helpers.py
  - testsoauth2-password/test_empty.py
  - testsprimary/testUpload.json
  - testsprimary/test_auth_additional.py
  - testsprimary/test_custom_client.py
  - testsprimary/test_errors.py
  - testsprimary/test_eventstreaming.py
  - testsprimary/test_flattening.py
  - testsprimary/test_globals.py
  - testsprimary/test_helpers.py
  - testsprimary/test_hooks_additional.py
  - testsprimary/test_openenums.py
  - testsprimary/test_pagination.py
  - testsprimary/test_request_bodies_additional.py
  - testsprimary/test_response_bodies_additional.py
  - testsprimary/test_retries.py
  - testsprimary/test_servers.py
  - testsprimary/test_telemetry.py
  - testsprimary/test_unions_additional.py
  - testsquaternary/test_auth_additional.py
  - testsquaternary/test_globals.py
  - testsquaternary/test_servers.py
  - testssecondary/test_auth_additional.py
  - testssecondary/test_errors.py
  - testssecondary/test_openenums.py
  - testssecondary/test_servers.py
  - teststertiary/test_auth_additional.py
  - teststertiary/test_servers.py
examples:
  ambiguousQueryParam:
    speakeasy-default-ambiguous-query-param:
      parameters:
        query:
          console: 3
  authenticatedRequest: {}
  conflictingEnum: {}
  ignoredGenerationPut:
    speakeasy-default-ignored-generation-put:
      requestBody:
        application/json: "<value>"
  multilineExample:
    speakeasy-default-multiline-example:
      requestBody:
        application/json: {"message": "hello\nthere!"}
  postAdditionalPropertiesWithNullableFields:
    test:
      requestBody:
        application/json: {"foo": "bar"}
      responses:
        "200":
          application/json: {"json": {"foo": "bar"}}
  responseBodyJsonGet:
    test:
      responses:
        "200":
          application/json: {"slideshow": {"author": "Yours Truly", "date": "date of publication", "slides": [{"title": "Wake up to WonderWidgets!", "type": "all"}, {"items": ["Why <em>WonderWidgets</em> are great", "Who <em>buys</em> WonderWidgets"], "title": "Overview", "type": "all"}], "title": "Sample Slide Show"}}
  anchorTypesGet:
    speakeasy-default-anchor-types-get:
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  arrayCircularReferenceGet:
    speakeasy-default-array-circular-reference-get:
      responses:
        "200":
          application/json: [{}, {}, {}]
  circularReferenceGet: {}
  circularReferenceOneDegree:
    speakeasy-default-circular-reference-one-degree:
      responses:
        "200":
          application/json: {}
  dateParamWithDefault:
    speakeasy-default-date-param-with-default:
      parameters:
        query:
          dateInput: "2023-10-13"
  dateTimeParamWithDefault:
    speakeasy-default-date-time-param-with-default:
      parameters:
        query:
          dateTimeInput: "2023-10-13T12:42:42.999+00:00"
  decimalParamWithDefault:
    speakeasy-default-decimal-param-with-default:
      parameters:
        query:
          decimalInput: 903275809834567300000
  deprecatedFieldInSchemaPost: {}
  deprecatedObjectInSchemaGet: {}
  deprecatedOperationNoCommentsGet: {}
  deprecatedOperationWithCommentsGet: {}
  emptyObjectGet: {}
  emptyResponseObjectWithCommentGet:
    speakeasy-default-empty-response-object-with-comment-get:
      responses:
        "200":
          application/octet-stream: "0x11DaCa408a"
  getGlobalNameOverride:
    speakeasy-default-get-global-name-override:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  ignoredGenerationGet:
    speakeasy-default-ignored-generation-get:
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  ignoresPost:
    speakeasy-default-ignores-post:
      responses:
        "200":
          application/json: {"slideshow": {"author": "<value>", "date": "2024-03-14", "slides": [], "title": "<value>"}}
  nameOverrideGet:
    speakeasy-default-name-override-get:
      parameters:
        query:
          nameOverride: "example"
          enumNameOverride: "value3"
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  objectCircularReferenceGet: {}
  oneOfCircularReferenceGet:
    speakeasy-default-one-of-circular-reference-get:
      responses:
        "200":
          application/json: {}
  reactHookCombinedOptions:
    speakeasy-default-react-hook-combined-options:
      parameters:
        query:
          page: 122236
      responses:
        "200":
          application/json: {"key": "<value>", "key1": "<value>"}
  reactHookDisabled:
    speakeasy-default-react-hook-disabled:
      responses:
        "200":
          application/json: {}
  reactHookGetAsMutation:
    speakeasy-default-react-hook-get-as-mutation:
      responses:
        "200":
          text/plain: "<value>"
  reactHookPostAsQuery:
    speakeasy-default-react-hook-post-as-query:
      responses:
        "200":
          text/plain: "<value>"
  reactHookRenamed:
    speakeasy-default-react-hook-renamed:
      responses:
        "200":
          application/json: {"key": "<value>"}
  typedParameterGenerationGet: {}
  usageExamplePost:
    speakeasy-default-usage-example-post:
      parameters:
        query:
          strParameter: "example 3"
          intParameter: 267933
          int64Parameter: 291137
          int64StringParameter: 228622
          float64StringParameter: "5669.99"
          bigintParameter: 569663
          bigintStrParameter: 352778
          floatParameter: "4819.51"
          float32Parameter: "200.82"
          decimalParameter: "1062.86"
          decimalStrParameter: "2346.83"
          doubleParameter: "2152.17"
          boolParameter: true
          dateParameter: "2022-11-22"
          dateTimeParameter: "2024-10-20T01:22:27.683Z"
          dateTimeDefaultParameter: "2022-07-01T07:46:46.050Z"
          enumParameter: "value3"
          optEnumParameter: "value3"
          falseyNumberParameter: 0
      requestBody:
        application/json: {"simpleObject": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
      responses:
        "200":
          application/json: {"json": {"simpleObject": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}}
  arrayOfDiscriminatedUnions:
    speakeasy-default-array-of-discriminated-unions:
      requestBody:
        application/json: []
      responses:
        "200":
          application/json: {"json": [{"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}]}
  arrayOfDiscriminatedUnionsMap:
    speakeasy-default-array-of-discriminated-unions-map:
      requestBody:
        application/json: {"arrayMap": {}}
      responses:
        "200":
          application/json: {"json": {"arrayMap": {"key": [], "key1": [{"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional", "type": "<value>"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional", "type": "<value>"}], "key2": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional", "type": "<value>"}, {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}]}}}
  collectionOneOfPost:
    speakeasy-default-collection-one-of-post:
      requestBody:
        application/json: []
      responses:
        "200":
          application/json: {"json": ["<value>"]}
  constDiscriminatedOneOf:
    speakeasy-default-const-discriminated-one-of:
      requestBody:
        application/json: {"imageURL": "https://austere-cow.net"}
      responses:
        "200":
          application/json: {"json": {"profileId": "<id>"}}
  discriminatedOneMultipleMemberships:
    speakeasy-default-discriminated-one-multiple-memberships:
      requestBody:
        application/json: {"colour": "<value>"}
      responses:
        "200":
          application/json: {"json": {"colour": "<value>"}}
  discriminatedOneMultipleMembershipsHasWheels:
    speakeasy-default-discriminated-one-multiple-memberships-has-wheels:
      requestBody:
        application/json: {"colour": "<value>"}
      responses:
        "200":
          application/json: {}
  flattenedTypedObjectPost:
    speakeasy-default-flattened-typed-object-post:
      requestBody:
        application/json: {"type": "obj1", "value": "<value>"}
      responses:
        "200":
          application/json: {"json": {"type": "obj1", "value": "<value>"}}
  infectedWithAny:
    speakeasy-default-infected-with-any:
      requestBody:
        application/json: {"data": "<value>"}
      responses:
        "200":
          application/json: {"json": {"data": {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}}}
  mixedTypeOneOfPost:
    speakeasy-default-mixed-type-one-of-post:
      requestBody:
        application/json: 984138
      responses:
        "200":
          application/json: {"json": "<value>"}
  mixedUnionTypes:
    speakeasy-default-mixed-union-types:
      requestBody:
        application/json: {"colour": "<value>"}
      responses:
        "200":
          application/json: {"json": {"colour": "<value>"}}
  multiMatchAnyOf:
    speakeasy-default-multi-match-any-of:
      requestBody:
        application/json: {"description": "porter unto yum merrily spherical soon crumble rebuild yahoo", "name": "<value>"}
      responses:
        "200":
          application/json: {"description": "given flat scarily splurge draw valiantly how aw via dearly", "name": "<value>"}
  nestedArrayOfDiscriminatedUnions:
    speakeasy-default-nested-array-of-discriminated-unions:
      requestBody:
        application/json: {"nestedArray": [[{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional", "type": "<value>"}], [{"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}]]}
      responses:
        "200":
          application/json: {"json": {"nestedArray": []}}
  nullableOneOfRefInObjectPost:
    speakeasy-default-nullable-one-of-ref-in-object-post:
      requestBody:
        application/json: {"NullableOneOfOne": {"type": "obj1", "value": "<value>"}, "NullableOneOfTwo": {"type": "obj2", "value": "<value>"}, "OneOfOne": {"type": "obj1", "value": "<value>"}}
      responses:
        "200":
          application/json: {"json": {"NullableOneOfOne": {"type": "obj1", "value": "<value>"}, "NullableOneOfTwo": {"type": "obj2", "value": "<value>"}, "OneOfOne": {"type": "obj1", "value": "<value>"}}}
  nullableOneOfSchemaPost:
    speakeasy-default-nullable-one-of-schema-post:
      requestBody:
        application/json: {"type": "obj2", "value": "<value>"}
      responses:
        "200":
          application/json: {"json": {"type": "obj2", "value": "<value>"}}
  nullableOneOfTypeInObjectPost:
    speakeasy-default-nullable-one-of-type-in-object-post:
      requestBody:
        application/json: {"NullableOneOfOne": false, "NullableOneOfTwo": false, "OneOfOne": false}
      responses:
        "200":
          application/json: {"json": {"NullableOneOfOne": false, "NullableOneOfTwo": true, "OneOfOne": true}}
  nullableTypedObjectPost:
    speakeasy-default-nullable-typed-object-post:
      requestBody:
        application/json: {"type": "obj1", "value": "<value>"}
      responses:
        "200":
          application/json: {"json": {"type": "obj1", "value": "<value>"}}
  oneOfOverlappingObjects:
    speakeasy-default-one-of-overlapping-objects:
      requestBody:
        application/json: {"field1": "<value>"}
      responses:
        "200":
          application/json: {"json": {"field1": "<value>"}}
  primitiveTypeOneOfPost:
    speakeasy-default-primitive-type-one-of-post:
      requestBody:
        application/json: "<value>"
      responses:
        "200":
          application/json: {"json": "2139.61"}
  stronglyTypedOneOfDiscriminatedPost:
    speakeasy-default-strongly-typed-one-of-discriminated-post:
      requestBody:
        application/json: {"imageURL": "https://simplistic-waterspout.org", "tag": "tag1"}
      responses:
        "200":
          application/json: {"json": {"imageURL": "https://vast-polyester.net/", "tag": "tag1"}}
  stronglyTypedOneOfPost:
    speakeasy-default-strongly-typed-one-of-post:
      requestBody:
        application/json: {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"json": {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}}
  stronglyTypedOneOfPostWithNonStandardDiscriminatorName:
    speakeasy-default-strongly-typed-one-of-post-with-non-standard-discriminator-name:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "obj.type": "<value>", "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}}
  typedObjectNullableOneOfPost:
    speakeasy-default-typed-object-nullable-one-of-post:
      requestBody:
        application/json: {"type": "obj2", "value": "<value>"}
      responses:
        "200":
          application/json: {"json": {"type": "obj1", "value": "<value>"}}
  typedObjectOneOfPost:
    speakeasy-default-typed-object-one-of-post:
      requestBody:
        application/json: {"type": "obj3", "value": "<value>"}
      responses:
        "200":
          application/json: {"json": {"type": "obj1", "value": "<value>"}}
  unionBigIntStrDecimal:
    speakeasy-default-union-big-int-str-decimal:
      requestBody:
        application/json: "2045.57"
      responses:
        "200":
          application/json: {"json": 523860}
  unionDateNull:
    speakeasy-default-union-date-null:
      requestBody:
        application/json: "2023-11-26"
      responses:
        "200":
          application/json: {"json": "2024-06-18"}
  unionDateTimeBigInt:
    speakeasy-default-union-date-time-big-int:
      requestBody:
        application/json: "2022-10-13T05:48:39.528Z"
      responses:
        "200":
          application/json: {"json": 760286}
  unionDateTimeNull:
    speakeasy-default-union-date-time-null:
      requestBody:
        application/json: "2023-04-13T05:53:48.181Z"
      responses:
        "200":
          application/json: {"json": "2024-08-10T21:05:46.339Z"}
  unionMap:
    speakeasy-default-union-map:
      requestBody:
        application/json: {"input": {"key": true, "key1": "<value>"}}
      responses:
        "200":
          application/json: {"json": {"input": {}}}
  unionMapOptional:
    speakeasy-default-union-map-optional:
      responses:
        "200":
          application/json: {}
  unionNestedEnums:
    speakeasy-default-union-nested-enums-form:
      requestBody:
        application/x-www-form-urlencoded: {"enums": ["one"], "tags": "<value>"}
      responses:
        "200":
          application/json: {"form": {"key": "<value>", "key1": "<value>"}}
    speakeasy-default-union-nested-enums-multipart:
      requestBody:
        multipart/form-data: {"enums": ["one"]}
      responses:
        "200":
          application/json: {"form": {"key": "<value>", "key1": "<value>"}}
  unionOfArraysPost:
    test:
      requestBody:
        application/json: [{"bar": "teststring"}]
      responses:
        "200":
          application/json: {"json": [{"bar": "teststring"}]}
  weaklyTypedOneOfNullEnumPost:
    speakeasy-default-weakly-typed-one-of-null-enum-post:
      requestBody:
        application/json: {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  weaklyTypedOneOfPost:
    speakeasy-default-weakly-typed-one-of-post:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}}
  connectionErrorGet: {}
  errorUnionDiscriminatedPost:
    speakeasy-default-error-union-discriminated-post:
      requestBody:
        application/json: {"tag": "<value>", "error": {"message": "<value>"}}
      responses:
        4XX:
          application/json: {"error": "<value>", "tag": "tag1"}
  errorUnionPost:
    speakeasy-default-error-union-post:
      requestBody:
        application/json: {"error": "<value>"}
      responses:
        "500":
          application/json: {"error": {"message": "<value>"}}
  statusGetError:
    speakeasy-default-status-get-error:
      parameters:
        path:
          statusCode: 458364
  statusGetXSpeakeasyErrors:
    speakeasy-default-status-get-X-speakeasy-errors:
      parameters:
        path:
          statusCode: 385913
  customClientPost:
    speakeasy-default-custom-client-post:
      parameters:
        path:
          pathParam: "pathValue"
        query:
          queryStringParam: "queryValue"
        header:
          headerParam: "headerValue"
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"args": {"queryStringParam": "<value>"}, "headers": {"key": "<value>", "key1": "<value>"}, "json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "url": "https://forceful-marimba.name"}
  flattenedEnvelopePaginationResponse:
    speakeasy-default-flattened-envelope-pagination-response:
      responses:
        "200":
          application/json: {"numPages": 506789, "resultArray": ["<value>", "<value>", "<value>"]}
  flattenedEnvelopeResponse:
    speakeasy-default-flattened-envelope-response:
      responses:
        "200":
          application/json: {"message": "<value>"}
  flattenedEnvelopeUnionResponse:
    speakeasy-default-flattened-envelope-union-response:
      responses:
        "200":
          application/json: {"message": "<value>"}
        "201":
          application/json: {"message": "<value>"}
  flattenedUnionResponse:
    speakeasy-default-flattened-union-response:
      responses:
        "200":
          application/json: {"message": "<value>"}
        "201":
          application/json: {"message": "<value>"}
  overriddenFieldNamesPost:
    test:
      requestBody:
        application/json: {"int": 1, "str": "test"}
      responses:
        "200":
          application/json: {"json": {"int": 1, "str": "test"}}
  responseBodyAdditionalPropertiesAnyPost:
    test:
      requestBody:
        application/json: {"normalField": "normal", "key1": "value2", "key2": "<value>", "key3": {"foo": "bar", "subkey1": {"foo": "bar"}}, "key4": ["foo", "bar"]}
      responses:
        "200":
          application/json: {"json": {"normalField": "normal", "key1": "value2", "key2": "<value>", "key3": {"foo": "bar", "subkey1": {"foo": "bar"}}, "key4": ["foo", "bar"]}}
  responseBodyAdditionalPropertiesComplexNumbersPost:
    test:
      requestBody:
        application/json: {"normalField": "normal", "key1": 1}
      responses:
        "200":
          application/json: {"json": {"normalField": "normal", "key1": 1}}
  responseBodyAdditionalPropertiesDatePost:
    test:
      requestBody:
        application/json: {"normalField": "normal", "key1": "2020-01-01"}
      responses:
        "200":
          application/json: {"json": {"normalField": "normal", "key1": "2020-01-01"}}
  responseBodyAdditionalPropertiesObjectPost:
    test:
      requestBody:
        application/json: {"AdditionalProperties": [1, 2, 3], "datetime": "2020-01-01T00:00:00.001Z", "key1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
      responses:
        "200":
          application/json: {"json": {"AdditionalProperties": [1, 2, 3], "datetime": "2020-01-01T00:00:00.001Z", "key1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}}
  responseBodyAdditionalPropertiesPost:
    string:
      requestBody:
        application/json: {"normalField": "normal", "key1": "value1"}
      responses:
        "200":
          application/json: {"json": {"normalField": "normal", "key1": "value1"}}
  responseBodyBytesGet: {}
  responseBodyDecimalStr:
    test:
      requestBody:
        application/json: 3.141592653589793
      responses:
        "200":
          application/json: 3.141592653589793
  responseBodyEmptyWithHeaders:
    speakeasy-default-response-body-empty-with-headers:
      parameters:
        query:
          X-String-Header: "<value>"
          X-Number-Header: "1751.81"
  responseBodyMissing2xxOr3xxGet: {}
  responseBodyMultilineStringPost:
    test:
      requestBody:
        application/json: {"array": ["BEGIN:VEVENT\nDTSTART:20220612T090000\nDURATION:PT8H\nRRULE:FREQ=WEEKLY;BYDAY=SU\nEND:VEVENT", "BEGIN:VEVENT\nDTSTART:20220606T090000\nDURATION:PT8H\nRRULE:FREQ=WEEKLY;BYDAY=MO\nEND:VEVENT"]}
      responses:
        "200":
          application/json: {"json": {"array": ["BEGIN:VEVENT\nDTSTART:20220612T090000\nDURATION:PT8H\nRRULE:FREQ=WEEKLY;BYDAY=SU\nEND:VEVENT", "BEGIN:VEVENT\nDTSTART:20220606T090000\nDURATION:PT8H\nRRULE:FREQ=WEEKLY;BYDAY=MO\nEND:VEVENT"]}}
  responseBodyOptionalGet:
    default:
      responses:
        "200":
          application/json: {"type": "obj1", "value": "JSON"}
    override:
      responses:
        "200":
          text/plain: "Success"
  responseBodyReadOnly:
    test:
      responses:
        "200":
          application/json: {"bool": true, "num": 1, "string": "hello"}
  responseBodyStringGet:
    test:
      responses:
        "200":
          text/html: "<!DOCTYPE html>\\n<html>\\n  <head>\\n  </head>\\n  <body>\\n      <h1>Herman Melville - Moby-Dick</h1>\\n\\n      <div>\\n        <p>\\n          Availing himself of the mild, summer-cool weather that now reigned in these latitudes, and in preparation for the peculiarly active pursuits shortly to be anticipated, Perth, the begrimed, blistered old blacksmith, had not removed his portable forge to the hold again, after concluding his contributory work for Ahab's leg, but still retained it on deck, fast lashed to ringbolts by the foremast; being now almost incessantly invoked by the headsmen, and harpooneers, and bowsmen to do some little job for them; altering, or repairing, or new shaping their various weapons and boat furniture. Often he would be surrounded by an eager circle, all waiting to be served; holding boat-spades, pike-heads, harpoons, and lances, and jealously watching his every sooty movement, as he toiled. Nevertheless, this old man's was a patient hammer wielded by a patient arm. No murmur, no impatience, no petulance did come from him. Silent, slow, and solemn; bowing over still further his chronically broken back, he toiled away, as if toil were life itself, and the heavy beating of his hammer the heavy beating of his heart. And so it was.—Most miserable! A peculiar walk in this old man, a certain slight but painful appearing yawing in his gait, had at an early period of the voyage excited the curiosity of the mariners. And to the importunity of their persisted questionings he had finally given in; and so it came to pass that every one now knew the shameful story of his wretched fate. Belated, and not innocently, one bitter winter's midnight, on the road running between two country towns, the blacksmith half-stupidly felt the deadly numbness stealing over him, and sought refuge in a leaning, dilapidated barn. The issue was, the loss of the extremities of both feet. Out of this revelation, part by part, at last came out the four acts of the gladness, and the one long, and as yet uncatastrophied fifth act of the grief of his life's drama. He was an old man, who, at the age of nearly sixty, had postponedly encountered that thing in sorrow's technicals called ruin. He had been an artisan of famed excellence, and with plenty to do; owned a house and garden; embraced a youthful, daughter-like, loving wife, and three blithe, ruddy children; every Sunday went to a cheerful-looking church, planted in a grove. But one night, under cover of darkness, and further concealed in a most cunning disguisement, a desperate burglar slid into his happy home, and robbed them all of everything. And darker yet to tell, the blacksmith himself did ignorantly conduct this burglar into his family's heart. It was the Bottle Conjuror! Upon the opening of that fatal cork, forth flew the fiend, and shrivelled up his home. Now, for prudent, most wise, and economic reasons, the blacksmith's shop was in the basement of his dwelling, but with a separate entrance to it; so that always had the young and loving healthy wife listened with no unhappy nervousness, but with vigorous pleasure, to the stout ringing of her young-armed old husband's hammer; whose reverberations, muffled by passing through the floors and walls, came up to her, not unsweetly, in her nursery; and so, to stout Labor's iron lullaby, the blacksmith's infants were rocked to slumber. Oh, woe on woe! Oh, Death, why canst thou not sometimes be timely? Hadst thou taken this old blacksmith to thyself ere his full ruin came upon him, then had the young widow had a delicious grief, and her orphans a truly venerable, legendary sire to dream of in their after years; and all of them a care-killing competency.\\n        </p>\\n      </div>\\n  </body>\\n</html>"
  responseBodyXmlGet:
    test:
      responses:
        "200":
          application/xml: "<?xml version='1.0' encoding='us-ascii'?>\\n\\n<!--  A SAMPLE set of slides  -->\\n\\n<slideshow \\n    title=\"Sample Slide Show\"\\n    date=\"Date of publication\"\\n    author=\"Yours Truly\"\\n    >\\n\\n    <!-- TITLE SLIDE -->\\n    <slide type=\"all\">\\n      <title>Wake up to WonderWidgets!</title>\\n    </slide>\\n\\n    <!-- OVERVIEW -->\\n    <slide type=\"all\">\\n        <title>Overview</title>\\n        <item>Why <em>WonderWidgets</em> are great</item>\\n        <item/>\\n        <item>Who <em>buys</em> WonderWidgets</item>\\n    </slide>\\n\\n</slideshow>"
  componentBodyAndParamConflict:
    speakeasy-default-component-body-and-param-conflict:
      parameters:
        query:
          str: "<value>"
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"args": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  componentBodyAndParamNoConflict:
    speakeasy-default-component-body-and-param-no-conflict:
      parameters:
        query:
          paramStr: "<value>"
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"args": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  conflictingParams:
    speakeasy-default-conflicting-params:
      parameters:
        path:
          str: "<value>"
        query:
          str: "<value>"
      responses:
        "200":
          application/json: {"args": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "url": "https://unfinished-hornet.biz/"}
  inlineBodyAndParamConflict:
    speakeasy-default-inline-body-and-param-conflict:
      parameters:
        query:
          str: "<value>"
      requestBody:
        application/json: {"str": "<value>"}
      responses:
        "200":
          application/json: {"args": {}, "json": {"str": "<value>"}}
  inlineBodyAndParamNoConflict:
    speakeasy-default-inline-body-and-param-no-conflict:
      parameters:
        query:
          paramStr: "<value>"
      requestBody:
        application/json: {"bodyStr": "<value>"}
      responses:
        "200":
          application/json: {"args": {"key": "<value>"}, "json": {"bodyStr": "<value>"}}
  requiredBodyAllOptional:
    speakeasy-default-required-body-all-optional:
      responses:
        "200":
          application/json: {}
  globalPathParameterGet:
    speakeasy-default-global-path-parameter-get:
      parameters:
        path:
          globalPathParam: 100
      responses:
        "200":
          application/json: {"url": "https://blond-produce.biz"}
  globalsHeaderGet:
    speakeasy-default-globals-header-get:
      parameters:
        header:
          globalHeaderParam: true
  globalsHiddenPost:
    speakeasy-default-globals-hidden-post:
      parameters:
        query:
          globalHiddenQueryParam: "hello"
        header: {}
      requestBody:
        application/json: {"other": 37, "test": "friend"}
      responses:
        "200":
          application/json: {"args": {"globalHiddenQueryParam": "<value>"}, "headers": {"key": "<value>", "key1": "<value>"}, "json": {"other": 37, "test": "friend"}, "url": "https://helpful-festival.org"}
  globalsQueryParameterGet:
    speakeasy-default-globals-query-parameter-get:
      parameters:
        query:
          globalQueryParam: "some example global query param"
      responses:
        "200":
          application/json: {"args": {"globalQueryParam": "<value>"}}
  deepObjectQueryParamsDeepObject:
    speakeasy-default-deep-object-query-params-deep-object:
      parameters:
        query:
          deepObj: {"arr": ["test1", "test2"], "bool": true, "int": 1, "map": {"testkey1": "testvalue1", "testkey2": "testvalue2"}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"args": {"deepObj[arr]": ["test1", "test2"], "deepObj[bool]": "true", "deepObj[int]": "1", "deepObj[map][testkey1]": "testvalue1", "deepObj[map][testkey2]": "testvalue2", "deepObj[num]": "1.1", "deepObj[obj][any]": "any", "deepObj[obj][bigintStr]": "9223372036854775808", "deepObj[obj][bigint]": "8821239038968084", "deepObj[obj][boolOpt]": "true", "deepObj[obj][bool]": "true", "deepObj[obj][dateTime]": "2020-01-01T00:00:00.001Z", "deepObj[obj][date]": "2020-01-01", "deepObj[obj][decimalStr]": "3.14159265358979344719667586", "deepObj[obj][decimal]": "3.141592653589793", "deepObj[obj][enum]": "one", "deepObj[obj][float32]": "1.1", "deepObj[obj][float64Str]": "1.1", "deepObj[obj][int32Enum]": "55", "deepObj[obj][int32]": "1", "deepObj[obj][int64Str]": "100", "deepObj[obj][intEnum]": "2", "deepObj[obj][int]": "1", "deepObj[obj][num]": "1.1", "deepObj[obj][strOpt]": "testOptional", "deepObj[obj][str]": "test", "deepObj[str]": "test"}, "url": "http://localhost:35123/anything/queryParams/deepObject/deepObj?deepObj[arr]=test1&deepObj[arr]=test2&deepObj[bool]=true&deepObj[int]=1&deepObj[map][testkey1]=testvalue1&deepObj[map][testkey2]=testvalue2&deepObj[num]=1.1&deepObj[obj][any]=any&deepObj[obj][bigintStr]=9223372036854775808&deepObj[obj][bigint]=8821239038968084&deepObj[obj][boolOpt]=true&deepObj[obj][bool]=true&deepObj[obj][dateTime]=2020-01-01T00%3A00%3A00.001Z&deepObj[obj][date]=2020-01-01&deepObj[obj][decimalStr]=3.14159265358979344719667586&deepObj[obj][decimal]=3.141592653589793&deepObj[obj][enum]=one&deepObj[obj][float32]=1.1&deepObj[obj][float64Str]=1.1&deepObj[obj][int32Enum]=55&deepObj[obj][int32]=1&deepObj[obj][int64Str]=100&deepObj[obj][intEnum]=2&deepObj[obj][int]=1&deepObj[obj][num]=1.1&deepObj[obj][strOpt]=testOptional&deepObj[obj][str]=test&deepObj[str]=test"}
  deepObjectQueryParamsMap:
    speakeasy-default-deep-object-query-params-map:
      parameters:
        query:
          mapParam: {"test": "value", "test2": "value2"}
          mapArrParam: {"test": ["test", "test2"], "test2": ["test3", "test4"]}
      responses:
        "200":
          application/json: {"args": {"mapArrParam[test]": ["test", "test2"], "mapArrParam[test2]": ["test3", "test4"], "mapParam[test]": "value", "mapParam[test2]": "value2"}, "url": "http://localhost:35123/anything/queryParams/deepObject/map?mapArrParam[test2]=test3&mapArrParam[test2]=test4&mapArrParam[test]=test&mapArrParam[test]=test2&mapParam[test2]=value2&mapParam[test]=value"}
  deepObjectQueryParamsObject:
    speakeasy-default-deep-object-query-params-object:
      parameters:
        query:
          objParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          objArrParam: {"arr": ["test", "test2"]}
      responses:
        "200":
          application/json: {"args": {"objArrParam[arr]": ["test", "test2"], "objParam[any]": "any", "objParam[bigintStr]": "9223372036854775808", "objParam[bigint]": "8821239038968084", "objParam[boolOpt]": "true", "objParam[bool]": "true", "objParam[dateTime]": "2020-01-01T00:00:00.001Z", "objParam[date]": "2020-01-01", "objParam[decimalStr]": "3.14159265358979344719667586", "objParam[decimal]": "3.141592653589793", "objParam[enum]": "one", "objParam[float32]": "1.1", "objParam[float64Str]": "1.1", "objParam[int32Enum]": "55", "objParam[int32]": "1", "objParam[int64Str]": "100", "objParam[intEnum]": "2", "objParam[int]": "1", "objParam[num]": "1.1", "objParam[strOpt]": "testOptional", "objParam[str]": "test"}, "url": "http://localhost:35123/anything/queryParams/deepObject/obj?objArrParam[arr]=test&objArrParam[arr]=test2&objParam[any]=any&objParam[bigintStr]=9223372036854775808&objParam[bigint]=8821239038968084&objParam[boolOpt]=true&objParam[bool]=true&objParam[dateTime]=2020-01-01T00%3A00%3A00.001Z&objParam[date]=2020-01-01&objParam[decimalStr]=3.14159265358979344719667586&objParam[decimal]=3.141592653589793&objParam[enum]=one&objParam[float32]=1.1&objParam[float64Str]=1.1&objParam[int32Enum]=55&objParam[int32]=1&objParam[int64Str]=100&objParam[intEnum]=2&objParam[int]=1&objParam[num]=1.1&objParam[strOpt]=testOptional&objParam[str]=test"}
  duplicateParam:
    speakeasy-default-duplicate-param:
      parameters:
        path:
          duplicateParamRequest: "<value>"
  formQueryParamsArray:
    speakeasy-default-form-query-params-array:
      parameters:
        query:
          arrParam: ["test", "test2"]
          arrParamExploded: [1, 2]
      responses:
        "200":
          application/json: {"args": {"arrParam": "test,test2", "arrParamExploded": ["1", "2"]}, "url": "http://localhost:35123/anything/queryParams/form/array?arrParam=test%2Ctest2&arrParamExploded=1&arrParamExploded=2"}
  formQueryParamsCamelObject:
    speakeasy-default-form-query-params-camel-object:
      parameters:
        query:
          obj_param_exploded: {"item_count": "10", "search_term": "foo"}
          obj_param: {"encoded_count": "11", "encoded_term": "bar"}
      responses:
        "200":
          application/json: {"args": {"item_count": "10", "search_term": "foo"}, "url": "http://localhost:35123/anything/queryParams/form/camelObj?item_count=10&obj_param=encoded_count%2C11%2Cencoded_term%2Cbar&search_term=foo"}
  formQueryParamsMap:
    speakeasy-default-form-query-params-map:
      parameters:
        query:
          mapParam: {"test": "value", "test2": "value2"}
          mapParamExploded: {"test": 1, "test2": 2}
      responses:
        "200":
          application/json: {"args": {"mapParam": "test,value,test2,value2", "test": "1", "test2": "2"}, "url": "http://localhost:35123/anything/queryParams/form/map?mapParam=test%2Cvalue%2Ctest2%2Cvalue2&test=1&test2=2"}
  formQueryParamsObject:
    speakeasy-default-form-query-params-object:
      parameters:
        query:
          objParamExploded: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          objParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"args": {"any": "any", "bigint": "8821239038968084", "bigintStr": "9223372036854775808", "bool": "true", "boolOpt": "true", "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": "3.141592653589793", "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": "1.1", "float64Str": "1.1", "int": "1", "int32": "1", "int32Enum": "55", "int64Str": "100", "intEnum": "2", "num": "1.1", "objParam": "any,any,bigint,8821239038968084,bigintStr,9223372036854775808,bool,true,boolOpt,true,date,2020-01-01,dateTime,2020-01-01T00:00:00.001Z,decimal,3.141592653589793,decimalStr,3.14159265358979344719667586,enum,one,float32,1.1,float64Str,1.1,int,1,int32,1,int32Enum,55,int64Str,100,intEnum,2,num,1.1,str,test,strOpt,testOptional", "str": "test", "strOpt": "testOptional"}, "url": "http://localhost:35123/anything/queryParams/form/obj?any=any&bigint=8821239038968084&bigintStr=9223372036854775808&bool=true&boolOpt=true&date=2020-01-01&dateTime=2020-01-01T00%3A00%3A00.001Z&decimal=3.141592653589793&decimalStr=3.14159265358979344719667586&enum=one&float32=1.1&float64Str=1.1&int=1&int32=1&int32Enum=55&int64Str=100&intEnum=2&num=1.1&objParam=any%2Cany%2Cbigint%2C8821239038968084%2CbigintStr%2C9223372036854775808%2Cbool%2Ctrue%2CboolOpt%2Ctrue%2Cdate%2C2020-01-01%2CdateTime%2C2020-01-01T00%3A00%3A00.001Z%2Cdecimal%2C3.141592653589793%2CdecimalStr%2C3.14159265358979344719667586%2Cenum%2Cone%2Cfloat32%2C1.1%2Cfloat64Str%2C1.1%2Cint%2C1%2Cint32%2C1%2Cint32Enum%2C55%2Cint64Str%2C100%2CintEnum%2C2%2Cnum%2C1.1%2Cstr%2Ctest%2CstrOpt%2CtestOptional&str=test&strOpt=testOptional"}
  formQueryParamsPrimitive:
    speakeasy-default-form-query-params-primitive:
      parameters:
        query:
          strParam: "test"
          boolParam: true
          intParam: 1
          numParam: 1.1
      responses:
        "200":
          application/json: {"args": {"boolParam": "true", "intParam": "1", "numParam": "1.1", "strParam": "test"}, "url": "http://localhost:35123/anything/queryParams/form/primitive?boolParam=true&intParam=1&numParam=1.1&strParam=test"}
  formQueryParamsRefParamObject:
    speakeasy-default-form-query-params-ref-param-object:
      parameters:
        query:
          refObjParamExploded: {"bool": true, "int": 1, "num": 1.1, "str": "test"}
          refObjParam: {"bool": true, "int": 1, "num": 1.1, "str": "test"}
      responses:
        "200":
          application/json: {"args": {"bool": "true", "int": "1", "num": "1.1", "refObjParam": "bool,true,int,1,num,1.1,str,test", "str": "test"}, "url": "http://localhost:35123/anything/queryParams/form/refParamObject?bool=true&int=1&num=1.1&refObjParam=bool%2Ctrue%2Cint%2C1%2Cnum%2C1.1%2Cstr%2Ctest&str=test"}
  headerParamsArray:
    speakeasy-default-header-params-array:
      parameters:
        header:
          X-Header-Array: ["test1", "test2"]
      responses:
        "200":
          application/json: {"headers": {"X-Header-Array": "test1,test2"}}
  headerParamsMap:
    speakeasy-default-header-params-map:
      parameters:
        header:
          X-Header-Map: {"key1": "value1", "key2": "value2"}
          X-Header-Map-Explode: {"test1": "val1", "test2": "val2"}
      responses:
        "200":
          application/json: {"headers": {"X-Header-Map": "key1,value1,key2,value2", "X-Header-Map-Explode": "test1=val1,test2=val2"}}
  headerParamsObject:
    speakeasy-default-header-params-object:
      parameters:
        header:
          X-Header-Obj: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          X-Header-Obj-Explode: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"headers": {"X-Header-Obj": "any,any,bigint,8821239038968084,bigintStr,9223372036854775808,bool,true,boolOpt,true,date,2020-01-01,dateTime,2020-01-01T00:00:00.001Z,decimal,3.141592653589793,decimalStr,3.14159265358979344719667586,enum,one,float32,1.1,float64Str,1.1,int,1,int32,1,int32Enum,55,int64Str,100,intEnum,2,num,1.1,str,test,strOpt,testOptional", "X-Header-Obj-Explode": "any=any,bigint=8821239038968084,bigintStr=9223372036854775808,bool=true,boolOpt=true,date=2020-01-01,dateTime=2020-01-01T00:00:00.001Z,decimal=3.141592653589793,decimalStr=3.14159265358979344719667586,enum=one,float32=1.1,float64Str=1.1,int=1,int32=1,int32Enum=55,int64Str=100,intEnum=2,num=1.1,str=test,strOpt=testOptional"}}
  headerParamsPrimitive:
    speakeasy-default-header-params-primitive:
      parameters:
        header:
          X-Header-String: "test"
          X-Header-Boolean: true
          X-Header-Integer: 1
          X-Header-Number: 1.1
      responses:
        "200":
          application/json: {"headers": {"X-Header-Boolean": "true", "X-Header-Integer": "1", "X-Header-Number": "1.1", "X-Header-String": "test"}}
  jsonQueryParamsObject:
    speakeasy-default-json-query-params-object:
      parameters:
        query:
          simpleObjParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          deepObjParam: {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"args": {"deepObjParam": "{\"any\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},\"arr\":[{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}],\"bool\":true,\"int\":1,\"map\":{\"key\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},\"key2\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}},\"num\":1.1,\"obj\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},\"str\":\"test\"}", "simpleObjParam": "{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}"}, "url": "http://localhost:35123/anything/queryParams/json/obj?deepObjParam={\"any\"%3A{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}%2C\"arr\"%3A[{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}%2C{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}]%2C\"bool\"%3Atrue%2C\"int\"%3A1%2C\"map\"%3A{\"key\"%3A{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}%2C\"key2\"%3A{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}}%2C\"num\"%3A1.1%2C\"obj\"%3A{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}%2C\"str\"%3A\"test\"}&simpleObjParam={\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}"}
  jsonQueryParamsObjectSmaller:
    speakeasy-default-json-query-params-object-smaller:
      parameters:
        query:
          simpleObjParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          deepObjParam: {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"args": {"deepObjParam": "{\"any\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},\"arr\":[{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}],\"bool\":true,\"int\":1,\"map\":{\"key\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}},\"num\":1.1,\"obj\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},\"str\":\"test\"}", "simpleObjParam": "{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}"}, "url": "http://localhost:35123/anything/queryParams/json/objsmaller?deepObjParam={\"any\"%3A{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}%2C\"arr\"%3A[{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}%2C{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}]%2C\"bool\"%3Atrue%2C\"int\"%3A1%2C\"map\"%3A{\"key\"%3A{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}}%2C\"num\"%3A1.1%2C\"obj\"%3A{\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}%2C\"str\"%3A\"test\"}&simpleObjParam={\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}"}
  mixedParametersCamelCase:
    speakeasy-default-mixed-parameters-camel-case:
      parameters:
        path:
          path_param: "pathValue"
        query:
          query_string_param: "queryValue"
        header:
          header_param: "headerValue"
      responses:
        "200":
          application/json: {"args": {"query_string_param": "queryValue"}, "headers": {"Header-Param": "headerValue"}, "url": "http://localhost:35123/anything/mixedParams/path/pathValue/camelcase?query_string_param=queryValue"}
  mixedParametersPrimitives:
    test:
      parameters:
        path:
          pathParam: "pathValue"
        query:
          queryStringParam: "queryValue"
        header:
          headerParam: "headerValue"
      responses:
        "200":
          application/json: {"args": {"queryStringParam": "queryValue"}, "headers": {"Headerparam": "headerValue"}, "url": "http://localhost:35123/anything/mixedParams/path/pathValue?queryStringParam=queryValue"}
  mixedQueryParams:
    speakeasy-default-mixed-query-params:
      parameters:
        query:
          jsonParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          formParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          deepObjectParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"args": {"any": "any", "bigint": "8821239038968084", "bigintStr": "9223372036854775808", "bool": "true", "boolOpt": "true", "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "deepObjectParam[any]": "any", "deepObjectParam[bigint]": "8821239038968084", "deepObjectParam[bigintStr]": "9223372036854775808", "deepObjectParam[boolOpt]": "true", "deepObjectParam[bool]": "true", "deepObjectParam[dateTime]": "2020-01-01T00:00:00.001Z", "deepObjectParam[date]": "2020-01-01", "deepObjectParam[enum]": "one", "deepObjectParam[float32]": "1.1", "deepObjectParam[float64Str]": "1.1", "deepObjectParam[int32]": "1", "deepObjectParam[int]": "1", "deepObjectParam[intEnum]": "2", "deepObjectParam[int32Enum]": "55", "deepObjectParam[int64Str]": "100", "deepObjectParam[num]": "1.1", "deepObjectParam[decimal]": "3.141592653589793", "deepObjectParam[decimalStr]": "3.14159265358979344719667586", "deepObjectParam[strOpt]": "testOptional", "deepObjectParam[str]": "test", "enum": "one", "float32": "1.1", "float64Str": "1.1", "int": "1", "int32": "1", "intEnum": "2", "int32Enum": "55", "int64Str": "100", "jsonParam": "{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}", "num": "1.1", "decimal": "3.141592653589793", "decimalStr": "3.14159265358979344719667586", "str": "test", "strOpt": "testOptional"}, "url": "http://localhost:35123/anything/queryParams/mixed?any=any&bigint=8821239038968084&bigintStr=9223372036854775808&bool=true&boolOpt=true&date=2020-01-01&dateTime=2020-01-01T00%3A00%3A00.001Z&decimal=3.141592653589793&decimalStr=3.14159265358979344719667586&deepObjectParam[any]=any&deepObjectParam[bigintStr]=9223372036854775808&deepObjectParam[bigint]=8821239038968084&deepObjectParam[boolOpt]=true&deepObjectParam[bool]=true&deepObjectParam[dateTime]=2020-01-01T00%3A00%3A00.001Z&deepObjectParam[date]=2020-01-01&deepObjectParam[decimalStr]=3.14159265358979344719667586&deepObjectParam[decimal]=3.141592653589793&deepObjectParam[enum]=one&deepObjectParam[float32]=1.1&deepObjectParam[float64Str]=1.1&deepObjectParam[int32Enum]=55&deepObjectParam[int32]=1&deepObjectParam[int64Str]=100&deepObjectParam[intEnum]=2&deepObjectParam[int]=1&deepObjectParam[num]=1.1&deepObjectParam[strOpt]=testOptional&deepObjectParam[str]=test&enum=one&float32=1.1&float64Str=1.1&int=1&int32=1&int32Enum=55&int64Str=100&intEnum=2&jsonParam={\"any\"%3A\"any\"%2C\"bigint\"%3A8821239038968084%2C\"bigintStr\"%3A\"9223372036854775808\"%2C\"bool\"%3Atrue%2C\"boolOpt\"%3Atrue%2C\"date\"%3A\"2020-01-01\"%2C\"dateTime\"%3A\"2020-01-01T00%3A00%3A00.001Z\"%2C\"decimal\"%3A3.141592653589793%2C\"decimalStr\"%3A\"3.14159265358979344719667586\"%2C\"enum\"%3A\"one\"%2C\"float32\"%3A1.1%2C\"float64Str\"%3A\"1.1\"%2C\"int\"%3A1%2C\"int32\"%3A1%2C\"int32Enum\"%3A55%2C\"int64Str\"%3A\"100\"%2C\"intEnum\"%3A2%2C\"num\"%3A1.1%2C\"str\"%3A\"test\"%2C\"strOpt\"%3A\"testOptional\"}&num=1.1&str=test&strOpt=testOptional"}
  pathParameterJson:
    speakeasy-default-path-parameter-json:
      parameters:
        path:
          jsonObj: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"url": "http://localhost:35123/anything/pathParams/json/{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}"}
  pipeDelimitedQueryParamsArray:
    speakeasy-default-pipe-delimited-query-params-array:
      parameters:
        query:
          arrParam: ["test", "test2"]
          arrParamExploded: [1, 2]
          objParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          mapParam: {"key1": "val1", "key2": "val2"}
      responses:
        "200":
          application/json: {"args": {"arrParam": "test|test2", "arrParamExploded": ["1", "2"]}, "url": "http://localhost:35123/anything/queryParams/pipe/array?arrParam=test|test2&arrParamExploded=1&arrParamExploded=2&mapParam=key1|val1|key2|val2&objParam=any|any|bigint|8821239038968084|bigintStr|9223372036854775808|bool|true|boolOpt|true|date|2020-01-01|dateTime|2020-01-01T00%3A00%3A00.001Z|decimal|3.141592653589793|decimalStr|3.14159265358979344719667586|enum|one|float32|1.1|float64Str|1.1|int|1|int32|1|int32Enum|55|int64Str|100|intEnum|2|num|1.1|str|test|strOpt|testOptional"}
  simplePathParameterArrays:
    speakeasy-default-simple-path-parameter-arrays:
      parameters:
        path:
          arrParam: ["test", "test2"]
      responses:
        "200":
          application/json: {"url": "http://localhost:35123/anything/pathParams/arr/test,test2"}
  simplePathParameterMaps:
    speakeasy-default-simple-path-parameter-maps:
      parameters:
        path:
          mapParam: {"test": "value", "test2": "value2"}
          mapParamExploded: {"test": 1, "test2": 2}
      responses:
        "200":
          application/json: {"url": "http://localhost:35123/anything/pathParams/map/test,value,test2,value2/mapExploded/test=1,test2=2"}
  simplePathParameterObjects:
    speakeasy-default-simple-path-parameter-objects:
      parameters:
        path:
          objParam: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
          objParamExploded: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"url": "http://localhost:35123/anything/pathParams/obj/any,any,bigint,8821239038968084,bigintStr,9223372036854775808,bool,true,boolOpt,true,date,2020-01-01,dateTime,2020-01-01T00:00:00.001Z,decimal,3.141592653589793,decimalStr,3.14159265358979344719667586,enum,one,float32,1.1,float64Str,1.1,int,1,int32,1,int32Enum,55,int64Str,100,intEnum,2,num,1.1,str,test,strOpt,testOptional/objExploded/any=any,bigint=8821239038968084,bigintStr=9223372036854775808,bool=true,boolOpt=true,date=2020-01-01,dateTime=2020-01-01T00:00:00.001Z,decimal=3.141592653589793,decimalStr=3.14159265358979344719667586,enum=one,float32=1.1,float64Str=1.1,int=1,int32=1,int32Enum=55,int64Str=100,intEnum=2,num=1.1,str=test,strOpt=testOptional"}
  simplePathParameterPrimitives:
    speakeasy-default-simple-path-parameter-primitives:
      parameters:
        path:
          strParam: "test"
          boolParam: true
          intParam: 1
          numParam: 1.1
      responses:
        "200":
          application/json: {"url": "http://localhost:35123/anything/pathParams/str/test/bool/true/int/1/num/1.1"}
  authorizationHeaderModification:
    speakeasy-default-authorization-header-modification:
      responses:
        "200":
          application/json: {"authenticated": false, "token": "<value>"}
  testHooks:
    speakeasy-default-test-hooks:
      parameters:
        query:
          someParam: "someInitialValue"
      responses:
        "200":
          application/json: {"args": {"someParam": "overriddenParam"}, "headers": {"Client-Level-Header": "added by client", "Idempotency-Key": "some-key"}, "url": "http://localhost:35123/anything/hooks?someParam=overriddenParam"}
  testHooksAfterResponse: {}
  testHooksBeforeCreateRequestPaths:
    speakeasy-default-test-hooks-before-create-request-paths:
      parameters:
        path:
          namespace: "<value>"
      responses:
        "200":
          application/json: {"url": "https://marvelous-meander.biz"}
  testHooksError: {}
  nullEnumPost:
    speakeasy-default-null-enum-post:
      responses:
        "200":
          application/json: {}
  nullableObjectPost:
    speakeasy-default-nullable-object-post:
      requestBody:
        application/json: null
      responses:
        "200":
          application/json: {"json": null}
  nullableOptionalFieldsPost:
    speakeasy-default-nullable-optional-fields-post:
      requestBody:
        application/json: {"nullableRequired": "<value>"}
      responses:
        "200":
          application/json: {"json": {"nullableRequired": "<value>"}}
  nullableRequiredEmptyObjectPost:
    speakeasy-default-nullable-required-empty-object-post:
      requestBody:
        application/json: {}
  nullableRequiredPropertyPost:
    speakeasy-default-nullable-required-property-post:
      requestBody:
        application/json: {"NullableRequiredArray": [], "NullableRequiredBigIntStr": 50266, "NullableRequiredDateTime": "2024-07-13T08:11:28.024Z", "NullableRequiredDecimalStr": "8839.33", "NullableRequiredEnum": "first", "NullableRequiredInt": 783710}
  nullableRequiredSharedObjectPost:
    speakeasy-default-nullable-required-shared-object-post:
      requestBody:
        application/json: {"NullableRequiredObj": null}
      responses:
        "200":
          application/json: {"json": {"NullableRequiredObj": null}}
  requestBodyDeprecatedRequestBodyRefPost:
    speakeasy-default-request-body-deprecated-request-body-ref-post:
      requestBody:
        application/json: {"str": "testvalue"}
      responses:
        "200":
          application/json: {"json": {"str": "testvalue"}}
  requestBodyGetInferredOptionalRequestWrapper:
    speakeasy-default-request-body-get-inferred-optional-request-wrapper:
      responses:
        "200":
          application/json: {}
  requestBodyPostApplicationJsonArray:
    speakeasy-default-request-body-post-application-json-array:
      requestBody:
        application/json: [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}]
      responses:
        "200":
          application/json: [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}]
  requestBodyPostApplicationJsonArrayCamelCase:
    speakeasy-default-request-body-post-application-json-array-camel-case:
      requestBody:
        application/json: [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]
      responses:
        "200":
          application/json: [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]
  requestBodyPostApplicationJsonArrayObj:
    speakeasy-default-request-body-post-application-json-array-obj:
      requestBody:
        application/json: [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}]
      responses:
        "200":
          application/json: {"json": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}]}
  requestBodyPostApplicationJsonArrayObjCamelCase:
    speakeasy-default-request-body-post-application-json-array-obj-camel-case:
      requestBody:
        application/json: [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]
      responses:
        "200":
          application/json: {"json": [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]}
  requestBodyPostApplicationJsonArrayOfArray:
    speakeasy-default-request-body-post-application-json-array-of-array:
      requestBody:
        application/json: [[], []]
      responses:
        "200":
          application/json: []
  requestBodyPostApplicationJsonArrayOfArrayCamelCase:
    speakeasy-default-request-body-post-application-json-array-of-array-camel-case:
      requestBody:
        application/json: [[{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]]
      responses:
        "200":
          application/json: [[{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}], [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}], [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]]
  requestBodyPostApplicationJsonArrayOfArrayOfPrimitive:
    speakeasy-default-request-body-post-application-json-array-of-array-of-primitive:
      requestBody:
        application/json: [["foo", "bar"], ["buzz", "bazz"]]
      responses:
        "200":
          application/json: [["foo", "bar"], ["buzz", "bazz"]]
  requestBodyPostApplicationJsonArrayOfMap:
    speakeasy-default-request-body-post-application-json-array-of-map:
      requestBody:
        application/json: [{"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, {"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}]
      responses:
        "200":
          application/json: [{"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, {"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}]
  requestBodyPostApplicationJsonArrayOfMapCamelCase:
    speakeasy-default-request-body-post-application-json-array-of-map-camel-case:
      requestBody:
        application/json: [{"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}, {"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}]
      responses:
        "200":
          application/json: [{"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}, {"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}]
  requestBodyPostApplicationJsonArrayOfPrimitive:
    speakeasy-default-request-body-post-application-json-array-of-primitive:
      requestBody:
        application/json: ["hello", "world"]
      responses:
        "200":
          application/json: ["hello", "world"]
  requestBodyPostApplicationJsonArrayOfUnions:
    speakeasy-default-request-body-post-application-json-array-of-unions:
      requestBody:
        application/json: {"dates": ["2022-10-04"], "unions": [{"type": "obj1", "value": "<value>"}]}
  requestBodyPostApplicationJsonDeep:
    speakeasy-default-request-body-post-application-json-deep:
      requestBody:
        application/json: {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"json": {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}}
  requestBodyPostApplicationJsonDeepCamelCase:
    speakeasy-default-request-body-post-application-json-deep-camel-case:
      requestBody:
        application/json: {"any_val": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "arr_val": [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}], "bool_val": true, "int_val": 1, "map_val": {"key": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}, "num_val": 1.1, "obj_val": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "str_val": "test"}
      responses:
        "200":
          application/json: {"json": {"any_val": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "arr_val": [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}], "bool_val": true, "int_val": 1, "map_val": {"key": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}, "num_val": 1.1, "obj_val": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "str_val": "test"}}
  requestBodyPostApplicationJsonMap:
    speakeasy-default-request-body-post-application-json-map:
      requestBody:
        application/json: {"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
      responses:
        "200":
          application/json: {"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  requestBodyPostApplicationJsonMapCamelCase:
    speakeasy-default-request-body-post-application-json-map-camel-case:
      requestBody:
        application/json: {"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}
      responses:
        "200":
          application/json: {"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}
  requestBodyPostApplicationJsonMapObj:
    speakeasy-default-request-body-post-application-json-map-obj:
      requestBody:
        application/json: {"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
      responses:
        "200":
          application/json: {"json": {"mapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "mapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}}
  requestBodyPostApplicationJsonMapObjCamelCase:
    speakeasy-default-request-body-post-application-json-map-obj-camel-case:
      requestBody:
        application/json: {"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}
      responses:
        "200":
          application/json: {"json": {"mapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "mapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}}
  requestBodyPostApplicationJsonMapOfArray:
    speakeasy-default-request-body-post-application-json-map-of-array:
      requestBody:
        application/json: {"mapElem1": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "mapElem2": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}]}
      responses:
        "200":
          application/json: {"mapElem1": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "mapElem2": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}]}
  requestBodyPostApplicationJsonMapOfArrayCamelCase:
    speakeasy-default-request-body-post-application-json-map-of-array-camel-case:
      requestBody:
        application/json: {"mapElem1": [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}], "mapElem2": [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]}
      responses:
        "200":
          application/json: {"mapElem1": [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}], "mapElem2": [{"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}]}
  requestBodyPostApplicationJsonMapOfMap:
    speakeasy-default-request-body-post-application-json-map-of-map:
      requestBody:
        application/json: {"mapElem1": {"subMapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "subMapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "mapElem2": {"subMapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "subMapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}}
      responses:
        "200":
          application/json: {"mapElem1": {"subMapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "subMapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "mapElem2": {"subMapElem1": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "subMapElem2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}}
  requestBodyPostApplicationJsonMapOfMapCamelCase:
    speakeasy-default-request-body-post-application-json-map-of-map-camel-case:
      requestBody:
        application/json: {"mapElem1": {"subMapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "subMapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}, "mapElem2": {"subMapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "subMapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}}
      responses:
        "200":
          application/json: {"mapElem1": {"subMapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "subMapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}, "mapElem2": {"subMapElem1": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}, "subMapElem2": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}}
  requestBodyPostApplicationJsonMapOfMapOfPrimitive:
    speakeasy-default-request-body-post-application-json-map-of-map-of-primitive:
      requestBody:
        application/json: {"mapElem1": {"subMapElem1": "foo", "subMapElem2": "bar"}, "mapElem2": {"subMapElem1": "buzz", "subMapElem2": "bazz"}}
      responses:
        "200":
          application/json: {"mapElem1": {"subMapElem1": "foo", "subMapElem2": "bar"}, "mapElem2": {"subMapElem1": "buzz", "subMapElem2": "bazz"}}
  requestBodyPostApplicationJsonMapOfPrimitive:
    speakeasy-default-request-body-post-application-json-map-of-primitive:
      requestBody:
        application/json: {"mapElem1": "hello", "mapElem2": "world"}
      responses:
        "200":
          application/json: {"mapElem1": "hello", "mapElem2": "world"}
  requestBodyPostApplicationJsonMultipleJsonFiltered:
    speakeasy-default-request-body-post-application-json-multiple-json-filtered:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        application/test+json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        text/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        text/json.test: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  requestBodyPostApplicationJsonSimple:
    speakeasy-default-request-body-post-application-json-simple:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  requestBodyPostApplicationJsonSimpleCamelCase:
    speakeasy-default-request-body-post-application-json-simple-camel-case:
      requestBody:
        application/json: {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}
      responses:
        "200":
          application/json: {"json": {"any_val": "any example", "bool_opt_val": true, "bool_val": true, "date_time_val": "2020-01-01T00:00:00.001Z", "date_val": "2020-01-01", "enum_val": "one", "float32_val": 2.2222222, "int32_enum_val": 69, "int32_val": 1, "int_enum_val": 3, "int_opt_null_val": 999999, "int_val": 999999, "num_opt_null_val": 1.1, "num_val": 1.1, "str_opt_val": "optional example", "str_val": "example"}}
  requestBodyPostComplexNumberTypes:
    speakeasy-default-request-body-post-complex-number-types:
      parameters:
        path:
          pathBigInt: 8821239038968084
          pathBigIntStr: "9223372036854775808"
          pathDecimal: 3.141592653589793
          pathDecimalStr: "3.14159265358979344719667586"
        query:
          queryBigInt: 8821239038968084
          queryBigIntStr: "9223372036854775808"
          queryDecimal: 3.141592653589793
          queryDecimalStr: "3.14159265358979344719667586"
      requestBody:
        application/json: {"bigint": 8821239038968084, "bigintStr": "9223372036854775808", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586"}
      responses:
        "200":
          application/json: {"json": {"bigint": 8821239038968084, "bigintStr": "9223372036854775808", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586"}, "url": "http://localhost:35123/anything/requestBodies/post/8821239038968084/9223372036854775808/3.141592653589793/3.14159265358979344719667586/complex-number-types?queryBigInt=8821239038968084&queryBigIntStr=9223372036854775808&queryDecimal=3.141592653589793&queryDecimalStr=3.14159265358979344719667586"}
  requestBodyPostDefaultsAndConsts:
    speakeasy-default-request-body-post-defaults-and-consts:
      requestBody:
        application/json: {"normalField": "test"}
      responses:
        "200":
          application/json: {"json": {"normalField": "test"}}
  requestBodyPostEmptyBodyRetainedWithAllOptionalFields:
    speakeasy-default-request-body-post-empty-body-retained-with-all-optional-fields:
      responses:
        "200":
          application/json: {}
  requestBodyPostEmptyObject: {}
  requestBodyPostFormDeep:
    speakeasy-default-request-body-post-form-deep:
      requestBody:
        application/x-www-form-urlencoded: {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"form": {"any": "{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}", "arr": "[{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}]", "bool": "true", "int": "1", "map": "{\"key\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},\"key2\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}}", "num": "1.1", "obj": "{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}", "str": "test"}}
  requestBodyPostFormMapPrimitive:
    speakeasy-default-request-body-post-form-map-primitive:
      requestBody:
        application/x-www-form-urlencoded: {"key1": "value1", "key2": "value2", "key3": "value3"}
      responses:
        "200":
          application/json: {"form": {"key1": "value1", "key2": "value2", "key3": "value3"}}
  requestBodyPostFormSimple:
    speakeasy-default-request-body-post-form-simple:
      requestBody:
        application/x-www-form-urlencoded: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"form": {"any": "any", "bigint": "8821239038968084", "bigintStr": "9223372036854775808", "bool": "true", "boolOpt": "true", "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": "3.141592653589793", "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": "1.1", "int": "1", "int32": "1", "int32Enum": "55", "intEnum": "2", "num": "1.1", "str": "test", "strOpt": "testOptional"}, "headers": {"Content-Type": "<value>"}}
  requestBodyPostJsonDataTypesArrayBigInt:
    speakeasy-default-request-body-post-json-data-types-array-big-int:
      requestBody:
        application/json: [1]
      responses:
        "200":
          application/json: {"data": "[1]", "json": [1]}
  requestBodyPostJsonDataTypesArrayDate:
    speakeasy-default-request-body-post-json-data-types-array-date:
      requestBody:
        application/json: ["2020-01-01"]
      responses:
        "200":
          application/json: {"data": "[\"2020-01-01\"]", "json": ["2020-01-01"]}
  requestBodyPostJsonDataTypesArrayDecimalStr:
    speakeasy-default-request-body-post-json-data-types-array-decimal-str:
      requestBody:
        application/json: ["3.141592653589793438462643383279"]
      responses:
        "200":
          application/json: {"data": "[\"3.141592653589793438462643383279\"]", "json": ["3.141592653589793438462643383279"]}
  requestBodyPostJsonDataTypesBigInt:
    speakeasy-default-request-body-post-json-data-types-big-int:
      requestBody:
        application/json: 1
      responses:
        "200":
          application/json: {"data": "1", "json": 1}
  requestBodyPostJsonDataTypesBigIntStr:
    speakeasy-default-request-body-post-json-data-types-big-int-str:
      requestBody:
        application/json: "1"
      responses:
        "200":
          application/json: {"data": "\"1\"", "json": "1"}
  requestBodyPostJsonDataTypesBoolean:
    speakeasy-default-request-body-post-json-data-types-boolean:
      requestBody:
        application/json: true
      responses:
        "200":
          application/json: {"json": true}
  requestBodyPostJsonDataTypesComplexNumberArrays:
    speakeasy-default-request-body-post-json-data-types-complex-number-arrays:
      responses:
        "200":
          application/json: {}
  requestBodyPostJsonDataTypesComplexNumberMaps:
    speakeasy-default-request-body-post-json-data-types-complex-number-maps:
      responses:
        "200":
          application/json: {}
  requestBodyPostJsonDataTypesDate:
    speakeasy-default-request-body-post-json-data-types-date:
      requestBody:
        application/json: "2020-01-01"
      responses:
        "200":
          application/json: {"data": "\"2020-01-01\"", "json": "2020-01-01"}
  requestBodyPostJsonDataTypesDateTime:
    speakeasy-default-request-body-post-json-data-types-date-time:
      requestBody:
        application/json: "2020-01-01T00:00:00.001Z"
      responses:
        "200":
          application/json: {"data": "\"2020-01-01T00:00:00.001Z\"", "json": "2020-01-01T00:00:00.001Z"}
  requestBodyPostJsonDataTypesDecimal:
    speakeasy-default-request-body-post-json-data-types-decimal:
      requestBody:
        application/json: 1.1
      responses:
        "200":
          application/json: {"data": "1.1", "json": 1.1}
  requestBodyPostJsonDataTypesDecimalStr:
    speakeasy-default-request-body-post-json-data-types-decimal-str:
      requestBody:
        application/json: "1.1"
      responses:
        "200":
          application/json: {"data": "\"1.1\"", "json": "1.1"}
  requestBodyPostJsonDataTypesFloat32:
    speakeasy-default-request-body-post-json-data-types-float32:
      requestBody:
        application/json: 1.1
      responses:
        "200":
          application/json: {"json": 1.1}
  requestBodyPostJsonDataTypesInt32:
    speakeasy-default-request-body-post-json-data-types-int32:
      requestBody:
        application/json: 1
      responses:
        "200":
          application/json: {"json": 1}
  requestBodyPostJsonDataTypesInteger:
    speakeasy-default-request-body-post-json-data-types-integer:
      requestBody:
        application/json: 1
      responses:
        "200":
          application/json: {"json": 1}
  requestBodyPostJsonDataTypesMapBigIntStr:
    speakeasy-default-request-body-post-json-data-types-map-big-int-str:
      requestBody:
        application/json: {"test": "1"}
      responses:
        "200":
          application/json: {"data": "{\"test\":\"1\"}", "json": {"test": "1"}}
  requestBodyPostJsonDataTypesMapDateTime:
    speakeasy-default-request-body-post-json-data-types-map-date-time:
      requestBody:
        application/json: {"test": "2020-01-01T00:00:00.001Z"}
      responses:
        "200":
          application/json: {"data": "{\"test\":\"2020-01-01T00:00:00.001Z\"}", "json": {"test": "2020-01-01T00:00:00.001Z"}}
  requestBodyPostJsonDataTypesMapDecimal:
    speakeasy-default-request-body-post-json-data-types-map-decimal:
      requestBody:
        application/json: {"test": 3.141592653589793}
      responses:
        "200":
          application/json: {"data": "{\"test\":3.141592653589793}", "json": {"test": 3.141592653589793}}
  requestBodyPostJsonDataTypesNumber:
    speakeasy-default-request-body-post-json-data-types-number:
      requestBody:
        application/json: 1.1
      responses:
        "200":
          application/json: {"json": 1.1}
  requestBodyPostJsonDataTypesString:
    speakeasy-default-request-body-post-json-data-types-string:
      requestBody:
        application/json: "test"
      responses:
        "200":
          application/json: {"json": "test"}
  requestBodyPostMultipleContentTypesComponentFiltered:
    application-json:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        application/x-www-form-urlencoded: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        multipart/form-data: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
    multipart-form-data:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        application/x-www-form-urlencoded: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        multipart/form-data: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  requestBodyPostMultipleContentTypesComponentFilteredDefaultTest:
    speakeasy-default-request-body-post-multiple-content-types-component-filtered-default-test:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        application/x-www-form-urlencoded: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
        multipart/form-data: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"json": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}
  requestBodyPostMultipleContentTypesInlineFiltered:
    speakeasy-default-request-body-post-multiple-content-types-inline-filtered:
      requestBody:
        application/json: {"bool": true, "num": 1.1, "str": "test"}
        application/x-www-form-urlencoded: {"bool": true, "num": 1.1, "str": "test"}
        multipart/form-data: {"bool": true, "num": 1.1, "str": "test"}
      responses:
        "200":
          application/json: {"json": {"bool": true, "num": 1.1, "str": "test"}}
  requestBodyPostMultipleContentTypesSplitParam:
    speakeasy-default-request-body-post-multiple-content-types-split-param-form:
      parameters:
        query:
          paramStr: "<value>"
      requestBody:
        application/x-www-form-urlencoded: {"bool3": false, "num3": "3466.17", "str3": "<value>"}
    speakeasy-default-request-body-post-multiple-content-types-split-param-json:
      parameters:
        query:
          paramStr: "<value>"
      requestBody:
        application/json: {"bool": false, "num": "961.40", "str": "<value>"}
    speakeasy-default-request-body-post-multiple-content-types-split-param-multipart:
      parameters:
        query:
          paramStr: "<value>"
      requestBody:
        multipart/form-data: {"bool2": false, "num2": "2154.07", "str2": "<value>"}
  requestBodyPostMultipleContentTypesSplit:
    speakeasy-default-request-body-post-multiple-content-types-split-form:
      requestBody:
        application/x-www-form-urlencoded: {"bool3": false, "num3": "8565.79", "str3": "<value>"}
    speakeasy-default-request-body-post-multiple-content-types-split-json:
      requestBody:
        application/json: {"bool": true, "num": "9968.15", "str": "<value>"}
    speakeasy-default-request-body-post-multiple-content-types-split-multipart:
      requestBody:
        multipart/form-data: {"bool2": true, "num2": "1739.29", "str2": "<value>"}
  requestBodyPostNotNullableNotRequiredStringBody:
    speakeasy-default-request-body-post-not-nullable-not-required-string-body:
      responses:
        "200":
          application/json: {"data": ""}
  requestBodyPostNullArray:
    speakeasy-default-request-body-post-null-array:
      requestBody:
        application/json: null
      responses:
        "200":
          application/json: {"data": "null"}
  requestBodyPostNullDictionary:
    speakeasy-default-request-body-post-null-dictionary:
      requestBody:
        application/json: null
      responses:
        "200":
          application/json: {"data": "null"}
  requestBodyPostNullableNotRequiredStringBody:
    speakeasy-default-request-body-post-nullable-not-required-string-body:
      requestBody:
        application/json: null
      responses:
        "200":
          application/json: {"data": "null"}
  requestBodyPostNullableRequiredStringBody:
    speakeasy-default-request-body-post-nullable-required-string-body:
      requestBody:
        application/json: null
      responses:
        "200":
          application/json: {"data": "null"}
  requestBodyPutBytes:
    speakeasy-default-request-body-put-bytes:
      responses:
        "200":
          application/json: {"data": "<value>"}
  requestBodyPutBytesWithParams:
    speakeasy-default-request-body-put-bytes-with-params:
      parameters:
        query:
          queryStringParam: "<value>"
      responses:
        "200":
          application/json: {"args": {"queryStringParam": "<value>"}, "data": "<value>"}
  requestBodyPutMultipartDeep:
    speakeasy-default-request-body-put-multipart-deep:
      requestBody:
        multipart/form-data: {"any": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "arr": [{"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}], "bool": true, "int": 1, "map": {"key": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "key2": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}}, "num": 1.1, "obj": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "str": "test"}
      responses:
        "200":
          application/json: {"form": {"any": "{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}", "arr": "[{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}]", "bool": "true", "int": "1", "map": "{\"key\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"},\"key2\":{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}}", "num": "1.1", "obj": "{\"any\":\"any\",\"bigint\":8821239038968084,\"bigintStr\":\"9223372036854775808\",\"bool\":true,\"boolOpt\":true,\"date\":\"2020-01-01\",\"dateTime\":\"2020-01-01T00:00:00.001Z\",\"decimal\":3.141592653589793,\"decimalStr\":\"3.14159265358979344719667586\",\"enum\":\"one\",\"float32\":1.1,\"float64Str\":\"1.1\",\"int\":1,\"int32\":1,\"int32Enum\":55,\"int64Str\":\"100\",\"intEnum\":2,\"num\":1.1,\"str\":\"test\",\"strOpt\":\"testOptional\"}", "str": "test"}}
  requestBodyPutMultipartDifferentFileName:
    speakeasy-default-request-body-put-multipart-different-file-name:
      responses:
        "200":
          application/json: {"files": {"key": "<value>", "key1": "<value>"}}
  requestBodyPutMultipartFile:
    speakeasy-default-request-body-put-multipart-file:
      responses:
        "200":
          application/json: {"files": {"key": "<value>"}}
  requestBodyPutMultipartOptionalRequestBody:
    speakeasy-default-request-body-put-multipart-optional-request-body:
      responses:
        "200":
          application/json: {"files": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
  requestBodyPutMultipartSimple:
    speakeasy-default-request-body-put-multipart-simple:
      requestBody:
        multipart/form-data: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"form": {"any": "any", "bigint": "8821239038968084", "bigintStr": "9223372036854775808", "bool": "true", "boolOpt": "true", "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": "3.141592653589793", "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": "1.1", "int": "1", "int32": "1", "int32Enum": "55", "intEnum": "2", "num": "1.1", "str": "test", "strOpt": "testOptional"}, "headers": {"Content-Type": "<value>"}}
  requestBodyPutString:
    speakeasy-default-request-body-put-string:
      requestBody:
        text/plain: "Hello World"
      responses:
        "200":
          application/json: {"data": "Hello World"}
  requestBodyPutStringWithParams:
    speakeasy-default-request-body-put-string-with-params:
      parameters:
        query:
          queryStringParam: "test param"
      requestBody:
        text/plain: "Hello world"
      responses:
        "200":
          application/json: {"args": {"queryStringParam": "test param"}, "data": "Hello world"}
  requestBodyReadAndWrite:
    speakeasy-default-request-body-read-and-write:
      requestBody:
        application/json: {"num1": 1, "num2": 2, "num3": 4}
      responses:
        "200":
          application/json: {"num3": 4, "sum": 7}
  requestBodyReadOnlyInput:
    speakeasy-default-request-body-read-only-input:
      responses:
        "200":
          application/json: {"bool": true, "num": 1, "string": "hello"}
  requestBodyReadOnlyUnion:
    speakeasy-default-request-body-read-only-union:
      requestBody:
        application/json: {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}
      responses:
        "200":
          application/json: {"bool": true, "num": 1, "string": "hello"}
  requestBodyReadWriteOnlyUnion:
    speakeasy-default-request-body-read-write-only-union:
      requestBody:
        application/json: {"num1": 1, "num2": 2, "num3": 4}
      responses:
        "200":
          application/json: {"num3": 4, "sum": 7}
  requestBodyWriteOnly:
    speakeasy-default-request-body-write-only:
      requestBody:
        application/json: {"bool": true, "num": 1, "string": "hello"}
      responses:
        "200":
          application/json: {"bool": true, "num": 1, "string": "hello"}
  requestBodyWriteOnlyOutput:
    speakeasy-default-request-body-write-only-output:
      requestBody:
        application/json: {"bool": true, "num": 1, "string": "hello"}
  requestBodyWriteOnlyUnion:
    writeOnlyObject:
      requestBody:
        application/json: {"bool": true, "num": 1, "string": "hello"}
  nestFirstGet: {}
  nestedGet: {}
  nestedFirstGet: {}
  nestedSecondGet: {}
  apiKeyAuth:
    speakeasy-default-api-key-auth:
      responses:
        "200":
          application/json: {"authenticated": true, "token": "<value>"}
  apiKeyAuthGlobal:
    speakeasy-default-api-key-auth-global:
      responses:
        "200":
          application/json: {"authenticated": false, "token": "<value>"}
  basicAuth:
    speakeasy-default-basic-auth:
      parameters:
        path:
          user: "Victoria.Hermiston57"
          passwd: "sBqmT5r5EcU_wag"
      responses:
        "200":
          application/json: {"authenticated": false, "user": "Rosalinda6"}
  bearerAuth:
    speakeasy-default-bearer-auth:
      responses:
        "200":
          application/json: {"authenticated": false, "token": "<value>"}
  globalBearerAuth:
    speakeasy-default-global-bearer-auth:
      responses:
        "200":
          application/json: {"authenticated": true, "token": "<value>"}
  noAuth: {}
  oauth2Auth:
    speakeasy-default-oauth2-auth:
      responses:
        "200":
          application/json: {"authenticated": false, "token": "<value>"}
  oauth2Override:
    speakeasy-default-oauth2-override:
      responses:
        "200":
          application/json: {"authenticated": false, "token": "<value>"}
  openIdConnectAuth:
    speakeasy-default-open-id-connect-auth:
      responses:
        "200":
          application/json: {"authenticated": false, "token": "<value>"}
  openEnumsPostUnrecognized:
    speakeasy-default-open-enums-post-unrecognized:
      requestBody:
        application/json: {"color": "green", "heroWidth": 480, "icon": "tick"}
      responses:
        "200":
          application/json: {"json": {"color": "green", "heroWidth": 480, "icon": "tick"}}
  selectGlobalServer: {}
  selectServerWithID: {}
  serverWithProtocolTemplate: {}
  serverWithTemplates: {}
  serverWithTemplatesGlobal: {}
  serversByIDWithTemplates: {}
  telemetrySpeakeasyUserAgentGet:
    speakeasy-default-telemetry-speakeasy-user-agent-get:
      parameters:
        header:
          User-Agent: "<value>"
      responses:
        "200":
          application/json: {"headers": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
  telemetryUserAgentGet:
    speakeasy-default-telemetry-user-agent-get:
      responses:
        "200":
          application/json: {"headers": {"key": "<value>"}}
  authGlobal: {}
  basicAuthNew: {}
  customSchemeAppId: {}
  multipleMixedOptionsAuth: {}
  multipleMixedSchemeAuth: {}
  multipleOptionsWithMixedSchemesAuth: {}
  multipleOptionsWithSimpleSchemesAuth: {}
  multipleSimpleOptionsAuth: {}
  multipleSimpleSchemeAuth: {}
  oauth2AuthNew: {}
  openIdConnectAuthNew: {}
  createFile:
    speakeasy-default-create-file:
      responses:
        "200":
          application/json: {"id": "<id>"}
  createResource:
    speakeasy-default-create-resource:
      requestBody:
        application/json: {"chocolates": [], "id": "<id>", "name": "<value>", "vehicle": {"length": "2717.91", "name": "<value>", "type": "boat"}}
      responses:
        "200":
          application/json: {"chocolates": [{"description": "bossy yesterday round for"}], "id": "<id>", "name": "<value>", "vehicle": {"make": "<value>", "model": "Fiesta", "name": "<value>", "type": "car", "year": "3601.98"}}
  deleteResource:
    speakeasy-default-delete-resource:
      parameters:
        path:
          resourceId: "<id>"
  getArrayDataSource:
    speakeasy-default-get-array-data-source:
      parameters:
        query:
          filter: "<value>"
      responses:
        "200":
          application/json: ["<value>", "<value>"]
  getResource:
    speakeasy-default-get-resource:
      parameters:
        path:
          resourceId: "<id>"
      responses:
        "200":
          application/json: {"chocolates": [{"description": "though swine nor"}], "id": "<id>", "name": "<value>", "vehicle": {"make": "<value>", "model": "Sentra", "name": "<value>", "type": "car", "year": "823.86"}}
  updateResource:
    speakeasy-default-update-resource:
      parameters:
        path:
          resourceId: "<id>"
        query:
          augment: "<value>"
  getDocumentationPerLanguage:
    speakeasy-default-get-documentation-per-language:
      parameters:
        query:
          language: "<value>"
  chat:
    speakeasy-default-chat:
      requestBody:
        application/json: {"prompt": "<value>"}
      responses:
        "200":
          application/json: [{"data": {"content": "<value>"}}, {"data": {"content": "<value>"}}]
  chatSkipSentinel:
    speakeasy-default-chat-skip-sentinel:
      requestBody:
        application/json: {"prompt": "<value>"}
  differentDataSchemas: {}
  json: {}
  multiline: {}
  rich: {}
  text: {}
  groupFirstGet: {}
  groupSecondGet: {}
  methodDelete:
    speakeasy-default-method-delete:
      requestBody:
        application/json: {"id": "test123"}
      responses:
        "200":
          application/json: {"status": "OK"}
  methodGet:
    speakeasy-default-method-get:
      responses:
        "200":
          application/json: {"status": "OK"}
  methodHead: {}
  methodOptions: {}
  methodPatch:
    speakeasy-default-method-patch:
      requestBody:
        application/json: {"id": "test123"}
      responses:
        "200":
          application/json: {"status": "OK"}
  methodPost:
    speakeasy-default-method-post:
      requestBody:
        application/json: {"id": "test123"}
      responses:
        "200":
          application/json: {"status": "OK"}
  methodPut:
    speakeasy-default-method-put:
      requestBody:
        application/json: {"id": "test123"}
      responses:
        "200":
          application/json: {"status": "OK"}
  methodTrace:
    speakeasy-default-method-trace:
      responses:
        "200":
          message/http: "<value>"
  paginationAmbiguousInput:
    speakeasy-default-pagination-ambiguous-input:
      requestBody:
        application/json: {"cursor": 872862}
      responses:
        "200":
          application/json: {"numPages": 126289, "resultArray": [455243, 312083]}
  paginationBodyFlattenedOptionalSecurity:
    speakeasy-default-pagination-body-flattened-optional-security:
      parameters:
        query:
          limit: 252090
          offset: 434461
      responses:
        "200":
          application/json: {"numPages": 581738, "resultArray": [402388, 227015]}
  paginationBodyFlattenedWithSecurity:
    speakeasy-default-pagination-body-flattened-with-security:
      parameters:
        query:
          limit: 296062
          offset: 592542
      responses:
        "200":
          application/json: {"numPages": 899774, "resultArray": [559258]}
  paginationBodyWrappedRequest:
    speakeasy-default-pagination-body-wrapped-request:
      responses:
        "200":
          application/json: {"numPages": 811043, "resultArray": [321019]}
  paginationCursorBody:
    speakeasy-default-pagination-cursor-body:
      requestBody:
        application/json: {"cursor": 868337}
      responses:
        "200":
          application/json: {"numPages": 877627, "resultArray": []}
  paginationCursorNonNumeric:
    speakeasy-default-pagination-cursor-non-numeric:
      responses:
        "200":
          application/json: {"numPages": 900891, "resultArray": ["<value>", "<value>", "<value>"]}
  paginationCursorParams:
    speakeasy-default-pagination-cursor-params:
      parameters:
        query:
          cursor: 24812
      responses:
        "200":
          application/json: {"numPages": 38882, "resultArray": [595875]}
  paginationLimitOffsetDeepOutputsPageBody:
    speakeasy-default-pagination-limit-offset-deep-outputs-page-body:
      responses:
        "200":
          application/json: {"pageInfo": {"numPages": 495225}, "resultArray": [940825]}
  paginationLimitOffsetOffsetBody:
    speakeasy-default-pagination-limit-offset-offset-body:
      responses:
        "200":
          application/json: {"numPages": 189971, "resultArray": [333688]}
  paginationLimitOffsetOffsetParams:
    speakeasy-default-pagination-limit-offset-offset-params:
      responses:
        "200":
          application/json: {"numPages": 661976, "resultArray": []}
  paginationLimitOffsetPageBody:
    speakeasy-default-pagination-limit-offset-page-body:
      responses:
        "200":
          application/json: {"numPages": 479052, "resultArray": [98033, 664483, 200410]}
  paginationLimitOffsetPageParams:
    speakeasy-default-pagination-limit-offset-page-params:
      parameters:
        query:
          page: 1177
      responses:
        "200":
          application/json: {"numPages": 324369, "resultArray": [129733]}
  paginationURLParams:
    speakeasy-default-pagination-URL-params:
      parameters:
        query:
          attempts: 778920
      responses:
        "200":
          application/json: {"numPages": 32356, "resultArray": []}
  paginationWithRetries:
    speakeasy-default-pagination-with-retries:
      responses:
        "200":
          application/json: {"numPages": 279343, "resultArray": []}
  paginationWrappedOptionalBody:
    speakeasy-default-pagination-wrapped-optional-body:
      responses:
        "200":
          application/json: {"numPages": 193337, "resultArray": [713406, 593832]}
  retriesAfter:
    speakeasy-default-retries-after:
      parameters:
        query:
          request-id: "<id>"
      responses:
        "200":
          application/json: {"retries": 282943}
  retriesConnectErrorGet:
    speakeasy-default-retries-connect-error-get:
      responses:
        "200":
          application/json: {"retries": 964199}
  retriesFlatEmptyResponsePost:
    speakeasy-default-retries-flat-empty-response-post:
      parameters:
        query:
          request-id: "<id>"
  retriesGet:
    speakeasy-default-retries-get:
      parameters:
        query:
          request-id: "<id>"
      responses:
        "200":
          application/json: {"retries": 75342}
  retriesPost:
    speakeasy-default-retries-post:
      parameters:
        query:
          request-id: "<id>"
      responses:
        "200":
          application/json: {"retries": 138258}
  statusCode2XX: {}
  statusCode4XX: {}
  statusCode5XX: {}
  statusCodeDefault: {}
  sendWebhookUserCreated:
    speakeasy-default-send-webhook-user-created:
      requestBody:
        application/json: {"data": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "type": "webhook.created"}
  sendWebhookUserUpdated:
    speakeasy-default-send-webhook-user-updated:
      requestBody:
        application/json: {"data": {"any": "any", "bigint": 8821239038968084, "bigintStr": "9223372036854775808", "bool": true, "boolOpt": true, "date": "2020-01-01", "dateTime": "2020-01-01T00:00:00.001Z", "decimal": 3.141592653589793, "decimalStr": "3.14159265358979344719667586", "enum": "one", "float32": 1.1, "float64Str": "1.1", "int": 1, "int32": 1, "int32Enum": 55, "int64Str": "100", "intEnum": 2, "num": 1.1, "str": "test", "strOpt": "testOptional"}, "type": "webhook.updated"}
generatedTests:
  responseBodyJsonGet: "2024-12-06T00:19:25Z"
  overriddenFieldNamesPost: "2024-12-06T00:19:25Z"
  responseBodyAdditionalPropertiesAnyPost: "2024-12-06T00:19:25Z"
  responseBodyAdditionalPropertiesComplexNumbersPost: "2024-12-06T00:19:25Z"
  responseBodyAdditionalPropertiesDatePost: "2024-12-06T00:19:25Z"
  responseBodyAdditionalPropertiesObjectPost: "2024-12-06T00:19:25Z"
  responseBodyAdditionalPropertiesPost: "2024-12-06T00:19:25Z"
  responseBodyDecimalStr: "2024-12-06T00:19:25Z"
  responseBodyMultilineStringPost: "2024-12-06T00:19:25Z"
  responseBodyOptionalGet: "2024-12-06T00:19:25Z"
  responseBodyReadOnly: "2024-12-06T00:19:25Z"
  responseBodyStringGet: "2024-12-06T00:19:25Z"
  responseBodyXmlGet: "2024-12-06T00:19:25Z"
  deepObjectQueryParamsDeepObject: "2024-12-06T00:19:25Z"
  deepObjectQueryParamsMap: "2024-12-06T00:19:25Z"
  deepObjectQueryParamsObject: "2024-12-06T00:19:25Z"
  formQueryParamsArray: "2024-12-06T00:19:25Z"
  formQueryParamsCamelObject: "2024-12-06T00:19:25Z"
  formQueryParamsMap: "2024-12-06T00:19:25Z"
  formQueryParamsObject: "2024-12-06T00:19:25Z"
  formQueryParamsPrimitive: "2024-12-06T00:19:25Z"
  formQueryParamsRefParamObject: "2024-12-06T00:19:25Z"
  headerParamsArray: "2024-12-06T00:19:25Z"
  headerParamsMap: "2024-12-06T00:19:25Z"
  headerParamsObject: "2024-12-06T00:19:25Z"
  headerParamsPrimitive: "2024-12-06T00:19:25Z"
  jsonQueryParamsObjectSmaller: "2024-12-06T00:19:25Z"
  mixedParametersCamelCase: "2024-12-06T00:19:25Z"
  mixedParametersPrimitives: "2024-12-06T00:19:25Z"
  mixedQueryParams: "2024-12-06T00:19:25Z"
  pathParameterJson: "2024-12-06T00:19:25Z"
  pipeDelimitedQueryParamsArray: "2024-12-06T00:19:25Z"
  simplePathParameterArrays: "2024-12-06T00:19:25Z"
  simplePathParameterMaps: "2024-12-06T00:19:25Z"
  simplePathParameterObjects: "2024-12-06T00:19:25Z"
  simplePathParameterPrimitives: "2024-12-06T00:19:25Z"
  testHooks: "2024-12-06T00:19:25Z"
  requestBodyDeprecatedRequestBodyRefPost: "2024-12-06T00:19:25Z"
  requestBodyPostMultipleContentTypesComponentFiltered: "2024-12-06T00:19:25Z"
  requestBodyPostMultipleContentTypesComponentFilteredDefaultTest: "2024-12-06T00:19:25Z"
  requestBodyPostNotNullableNotRequiredStringBody: "2024-12-06T00:19:25Z"
  nestedFirstGet: "2024-12-06T00:19:25Z"
