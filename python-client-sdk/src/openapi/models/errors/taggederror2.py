"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi import utils
from openapi.types import BaseModel
from openapi.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class SchemasTaggedError2ErrorTypedDict(TypedDict):
    message: str


class SchemasTaggedError2Error(BaseModel):
    message: str


class TaggedError2Data(BaseModel):
    error: SchemasTaggedError2Error

    TAG: Annotated[
        Annotated[Literal["tag2"], AfterValidator(validate_const("tag2"))],
        pydantic.Field(alias="tag"),
    ] = "tag2"


class TaggedError2(Exception):
    data: TaggedError2Data

    def __init__(self, data: TaggedError2Data):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, TaggedError2Data)
