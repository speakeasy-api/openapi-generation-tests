"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import (
    FieldMetadata,
    HeaderMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GlobalsTypedDict(TypedDict):
    global_header_param: NotRequired[bool]
    global_hidden_header_param: NotRequired[str]
    global_hidden_path_param: NotRequired[str]
    global_hidden_query_param: NotRequired[str]
    global_path_param: NotRequired[int]
    global_query_param: NotRequired[str]


class Globals(BaseModel):
    global_header_param: Annotated[
        Optional[bool],
        pydantic.Field(alias="globalHeaderParam"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None

    global_hidden_header_param: Annotated[
        Optional[str],
        pydantic.Field(alias="globalHiddenHeaderParam"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None

    global_hidden_path_param: Annotated[
        Optional[str],
        pydantic.Field(alias="globalHiddenPathParam"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None

    global_hidden_query_param: Annotated[
        Optional[str],
        pydantic.Field(alias="globalHiddenQueryParam"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    global_path_param: Annotated[
        Optional[int],
        pydantic.Field(alias="globalPathParam"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None

    global_query_param: Annotated[
        Optional[str],
        pydantic.Field(alias="globalQueryParam"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
