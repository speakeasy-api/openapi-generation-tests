"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
from typing import TypedDict
from typing_extensions import Annotated


class BasicAuthSecurityTypedDict(TypedDict):
    password: str
    username: str


class BasicAuthSecurity(BaseModel):
    password: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True, scheme_type="http", sub_type="basic", field_name="password"
            )
        ),
    ]

    username: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True, scheme_type="http", sub_type="basic", field_name="username"
            )
        ),
    ]


class BasicAuthRequestTypedDict(TypedDict):
    passwd: str
    user: str


class BasicAuthRequest(BaseModel):
    passwd: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    user: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class BasicAuthUserTypedDict(TypedDict):
    r"""Successful authentication."""

    authenticated: bool
    user: str


class BasicAuthUser(BaseModel):
    r"""Successful authentication."""

    authenticated: bool

    user: str
