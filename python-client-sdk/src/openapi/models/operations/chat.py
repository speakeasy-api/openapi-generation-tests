"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.models.shared import (
    chatcompletionresult as shared_chatcompletionresult,
    chatcompletionstream as shared_chatcompletionstream,
)
from openapi.types import BaseModel
from openapi.utils import eventstreaming
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict

CHAT_SERVERS = [
    "http://localhost:35456",
]


class ChatRequestBodyTypedDict(TypedDict):
    prompt: str
    stream: NotRequired[bool]


class ChatRequestBody(BaseModel):
    prompt: str

    stream: Optional[bool] = None


ChatResponseTypedDict = TypeAliasType(
    "ChatResponseTypedDict",
    Union[
        List[shared_chatcompletionresult.ChatCompletionResultTypedDict],
        Union[
            eventstreaming.EventStream[
                shared_chatcompletionstream.ChatCompletionStreamTypedDict
            ],
            eventstreaming.EventStreamAsync[
                shared_chatcompletionstream.ChatCompletionStreamTypedDict
            ],
        ],
    ],
)


ChatResponse = TypeAliasType(
    "ChatResponse",
    Union[
        List[shared_chatcompletionresult.ChatCompletionResult],
        Union[
            eventstreaming.EventStream[
                shared_chatcompletionstream.ChatCompletionStream
            ],
            eventstreaming.EventStreamAsync[
                shared_chatcompletionstream.ChatCompletionStream
            ],
        ],
    ],
)
