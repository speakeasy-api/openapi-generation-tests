"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from openapi.models.shared import chatcompletionresult as shared_chatcompletionresult, chatcompletionstream as shared_chatcompletionstream
from openapi.types import BaseModel
from typing import AsyncGenerator, Generator, List, Optional, TypedDict, Union
from typing_extensions import NotRequired

CHAT_SERVERS = [
	"http://localhost:35456",
]


class ChatRequestBodyTypedDict(TypedDict):
    prompt: str
    stream: NotRequired[bool]
    

class ChatRequestBody(BaseModel):
    prompt: str
    stream: Optional[bool] = None
    

ChatResponseTypedDict = Union[List[shared_chatcompletionresult.ChatCompletionResultTypedDict], Union[Generator[shared_chatcompletionstream.ChatCompletionStreamTypedDict, None, None], AsyncGenerator[shared_chatcompletionstream.ChatCompletionStreamTypedDict, None]]]


ChatResponse = Union[List[shared_chatcompletionresult.ChatCompletionResult], Union[Generator[shared_chatcompletionstream.ChatCompletionStream, None, None], AsyncGenerator[shared_chatcompletionstream.ChatCompletionStream, None]]]

