"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Dict, TypedDict
from typing_extensions import Annotated


class ConflictingParamsRequestTypedDict(TypedDict):
    str_path_parameter: str
    str_query_parameter: str
    

class ConflictingParamsRequest(BaseModel):
    str_path_parameter: Annotated[str, pydantic.Field(alias="str"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    str_query_parameter: Annotated[str, pydantic.Field(alias="str"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    

class ConflictingParamsResTypedDict(TypedDict):
    r"""OK"""
    
    args: Dict[str, str]
    url: str
    

class ConflictingParamsRes(BaseModel):
    r"""OK"""
    
    args: Dict[str, str]
    url: str
    
