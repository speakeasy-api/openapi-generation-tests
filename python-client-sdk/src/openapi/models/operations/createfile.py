"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import io
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, MultipartFormMetadata
import pydantic
from typing import IO, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class CreateFileFileTypedDict(TypedDict):
    content: Union[bytes, IO[bytes], io.BufferedReader]
    file_name: str
    content_type: NotRequired[str]
    

class CreateFileFile(BaseModel):
    content: Annotated[Union[bytes, IO[bytes], io.BufferedReader], pydantic.Field(alias=""), FieldMetadata(multipart=MultipartFormMetadata(content=True))]
    file_name: Annotated[str, pydantic.Field(alias="file"), FieldMetadata(multipart=True)]
    content_type: Annotated[Optional[str], pydantic.Field(alias="Content-Type"), FieldMetadata(multipart=True)] = None
    

class CreateFileRequestBodyTypedDict(TypedDict):
    file: NotRequired[CreateFileFileTypedDict]
    

class CreateFileRequestBody(BaseModel):
    file: Annotated[Optional[CreateFileFile], pydantic.Field(alias=""), FieldMetadata(multipart=MultipartFormMetadata(file=True))] = None
    
