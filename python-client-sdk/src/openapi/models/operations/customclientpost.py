"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.models.shared import simpleobject as shared_simpleobject
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, HeaderMetadata, PathParamMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import Dict, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class CustomClientPostRequestTypedDict(TypedDict):
    header_param: str
    path_param: str
    query_string_param: str
    simple_object: NotRequired[shared_simpleobject.SimpleObjectTypedDict]
    

class CustomClientPostRequest(BaseModel):
    header_param: Annotated[str, pydantic.Field(alias="headerParam"), FieldMetadata(header=HeaderMetadata(style="simple", explode=False))]
    path_param: Annotated[str, pydantic.Field(alias="pathParam"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    query_string_param: Annotated[str, pydantic.Field(alias="queryStringParam"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    simple_object: Annotated[Optional[shared_simpleobject.SimpleObject], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    

class ArgsTypedDict(TypedDict):
    query_string_param: str
    

class Args(BaseModel):
    query_string_param: Annotated[str, pydantic.Field(alias="queryStringParam")]
    

class CustomClientPostResTypedDict(TypedDict):
    r"""OK"""
    
    args: ArgsTypedDict
    headers: Dict[str, str]
    url: str
    json_: NotRequired[shared_simpleobject.SimpleObjectTypedDict]
    r"""A simple object that uses all our supported primitive types and enums and has optional properties.
    https://docs.speakeasyapi.dev - A link to the external docs.
    """
    

class CustomClientPostRes(BaseModel):
    r"""OK"""
    
    args: Args
    headers: Dict[str, str]
    url: str
    json_: Annotated[Optional[shared_simpleobject.SimpleObject], pydantic.Field(alias="json")] = None
    r"""A simple object that uses all our supported primitive types and enums and has optional properties.
    https://docs.speakeasyapi.dev - A link to the external docs.
    """
    
