"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from decimal import Decimal
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata, serialize_decimal, validate_decimal
import pydantic
from pydantic.functional_serializers import PlainSerializer
from pydantic.functional_validators import BeforeValidator
from typing import TypedDict
from typing_extensions import Annotated


class DecimalParamWithDefaultRequestTypedDict(TypedDict):
    decimal_input: Decimal
    r"""A decimal parameter with a default value"""
    

class DecimalParamWithDefaultRequest(BaseModel):
    decimal_input: Annotated[Annotated[Decimal, BeforeValidator(validate_decimal), PlainSerializer(serialize_decimal(False))], pydantic.Field(alias="decimalInput"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = Decimal("903275809834567300000")
    r"""A decimal parameter with a default value"""
    
