"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FormQueryParamsArrayRequestTypedDict(TypedDict):
    arr_param: NotRequired[List[str]]
    arr_param_exploded: NotRequired[List[int]]


class FormQueryParamsArrayRequest(BaseModel):
    arr_param: Annotated[
        Optional[List[str]],
        pydantic.Field(alias="arrParam"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None

    arr_param_exploded: Annotated[
        Optional[List[int]],
        pydantic.Field(alias="arrParamExploded"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class FormQueryParamsArrayArgsTypedDict(TypedDict):
    arr_param: str
    arr_param_exploded: List[str]


class FormQueryParamsArrayArgs(BaseModel):
    arr_param: Annotated[str, pydantic.Field(alias="arrParam")]

    arr_param_exploded: Annotated[List[str], pydantic.Field(alias="arrParamExploded")]


class FormQueryParamsArrayResTypedDict(TypedDict):
    r"""OK"""

    args: FormQueryParamsArrayArgsTypedDict
    url: str


class FormQueryParamsArrayRes(BaseModel):
    r"""OK"""

    args: FormQueryParamsArrayArgs

    url: str
