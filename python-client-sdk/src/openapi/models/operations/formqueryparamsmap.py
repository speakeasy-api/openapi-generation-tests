"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FormQueryParamsMapRequestTypedDict(TypedDict):
    map_param: NotRequired[Dict[str, str]]
    map_param_exploded: NotRequired[Dict[str, int]]


class FormQueryParamsMapRequest(BaseModel):
    map_param: Annotated[
        Optional[Dict[str, str]],
        pydantic.Field(alias="mapParam"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None

    map_param_exploded: Annotated[
        Optional[Dict[str, int]],
        pydantic.Field(alias="mapParamExploded"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class FormQueryParamsMapResTypedDict(TypedDict):
    r"""OK"""

    args: Dict[str, str]
    url: str


class FormQueryParamsMapRes(BaseModel):
    r"""OK"""

    args: Dict[str, str]

    url: str
