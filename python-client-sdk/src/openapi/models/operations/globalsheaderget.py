"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, HeaderMetadata
import pydantic
from typing import Dict, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GlobalsHeaderGetGlobalsTypedDict(TypedDict):
    global_header_param: NotRequired[bool]


class GlobalsHeaderGetGlobals(BaseModel):
    global_header_param: Annotated[
        Optional[bool],
        pydantic.Field(alias="globalHeaderParam"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None


class GlobalsHeaderGetRequestTypedDict(TypedDict):
    global_header_param: NotRequired[bool]


class GlobalsHeaderGetRequest(BaseModel):
    global_header_param: Annotated[
        Optional[bool],
        pydantic.Field(alias="globalHeaderParam"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None


class GlobalsHeaderGetResTypedDict(TypedDict):
    r"""OK"""

    headers: NotRequired[Dict[str, str]]


class GlobalsHeaderGetRes(BaseModel):
    r"""OK"""

    headers: Optional[Dict[str, str]] = None
