"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GlobalsOptionalPathParameterOperationRequiredGlobalsTypedDict(TypedDict):
    global_optional_path_param: NotRequired[str]
    r"""An optional global path parameter. Some paths and operations will
    override it to required: true, especially for verifying test generation
    where the value should be templated in the operation request.

    """


class GlobalsOptionalPathParameterOperationRequiredGlobals(BaseModel):
    global_optional_path_param: Annotated[
        Optional[str],
        pydantic.Field(alias="globalOptionalPathParam"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""An optional global path parameter. Some paths and operations will
    override it to required: true, especially for verifying test generation
    where the value should be templated in the operation request.

    """


class GlobalsOptionalPathParameterOperationRequiredRequestTypedDict(TypedDict):
    global_optional_path_param: NotRequired[str]
    r"""Overrides the optional global path parameter to be required at the
    operation level.

    """


class GlobalsOptionalPathParameterOperationRequiredRequest(BaseModel):
    global_optional_path_param: Annotated[
        Optional[str],
        pydantic.Field(alias="globalOptionalPathParam"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""Overrides the optional global path parameter to be required at the
    operation level.

    """
