"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, HeaderMetadata
import pydantic
from typing import Dict, TypedDict
from typing_extensions import Annotated


class HeaderParamsMapRequestTypedDict(TypedDict):
    x_header_map: Dict[str, str]
    x_header_map_explode: Dict[str, str]
    

class HeaderParamsMapRequest(BaseModel):
    x_header_map: Annotated[Dict[str, str], pydantic.Field(alias="X-Header-Map"), FieldMetadata(header=HeaderMetadata(style="simple", explode=False))]
    x_header_map_explode: Annotated[Dict[str, str], pydantic.Field(alias="X-Header-Map-Explode"), FieldMetadata(header=HeaderMetadata(style="simple", explode=True))]
    

class HeaderParamsMapHeadersTypedDict(TypedDict):
    x_header_map: str
    x_header_map_explode: str
    

class HeaderParamsMapHeaders(BaseModel):
    x_header_map: Annotated[str, pydantic.Field(alias="X-Header-Map")]
    x_header_map_explode: Annotated[str, pydantic.Field(alias="X-Header-Map-Explode")]
    

class HeaderParamsMapResTypedDict(TypedDict):
    r"""OK"""
    
    headers: HeaderParamsMapHeadersTypedDict
    

class HeaderParamsMapRes(BaseModel):
    r"""OK"""
    
    headers: HeaderParamsMapHeaders
    
