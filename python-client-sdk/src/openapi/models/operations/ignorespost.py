"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class IgnoresPostRequestBodyTypedDict(TypedDict):
    callback_url: NotRequired[str]
    test_prop: NotRequired[str]
    

class IgnoresPostRequestBody(BaseModel):
    callback_url: Annotated[Optional[str], pydantic.Field(alias="callbackUrl")] = None
    test_prop: Annotated[Optional[str], pydantic.Field(alias="testProp")] = None
    

class IgnoresPostRequestTypedDict(TypedDict):
    request_body: IgnoresPostRequestBodyTypedDict
    test_param: NotRequired[str]
    

class IgnoresPostRequest(BaseModel):
    request_body: Annotated[IgnoresPostRequestBody, FieldMetadata(request=RequestMetadata(media_type="application/json"))]
    test_param: Annotated[Optional[str], pydantic.Field(alias="testParam"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    
