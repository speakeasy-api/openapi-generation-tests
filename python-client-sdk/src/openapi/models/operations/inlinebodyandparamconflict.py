"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import Dict
from typing_extensions import Annotated, TypedDict


class InlineBodyAndParamConflictRequestBodyTypedDict(TypedDict):
    str_: str


class InlineBodyAndParamConflictRequestBody(BaseModel):
    str_: Annotated[str, pydantic.Field(alias="str")]


class InlineBodyAndParamConflictRequestTypedDict(TypedDict):
    request_body: InlineBodyAndParamConflictRequestBodyTypedDict
    str_: str


class InlineBodyAndParamConflictRequest(BaseModel):
    request_body: Annotated[
        InlineBodyAndParamConflictRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    str_: Annotated[
        str,
        pydantic.Field(alias="str"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]


class JSONTypedDict(TypedDict):
    str_: str


class JSON(BaseModel):
    str_: Annotated[str, pydantic.Field(alias="str")]


class InlineBodyAndParamConflictResTypedDict(TypedDict):
    r"""OK"""

    args: Dict[str, str]
    json_: JSONTypedDict


class InlineBodyAndParamConflictRes(BaseModel):
    r"""OK"""

    args: Dict[str, str]

    json_: Annotated[JSON, pydantic.Field(alias="json")]
