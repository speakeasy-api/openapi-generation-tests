"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import Dict, TypedDict
from typing_extensions import Annotated


class InlineBodyAndParamNoConflictRequestBodyTypedDict(TypedDict):
    body_str: str


class InlineBodyAndParamNoConflictRequestBody(BaseModel):
    body_str: Annotated[str, pydantic.Field(alias="bodyStr")]


class InlineBodyAndParamNoConflictRequestTypedDict(TypedDict):
    request_body: InlineBodyAndParamNoConflictRequestBodyTypedDict
    param_str: str


class InlineBodyAndParamNoConflictRequest(BaseModel):
    request_body: Annotated[
        InlineBodyAndParamNoConflictRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    param_str: Annotated[
        str,
        pydantic.Field(alias="paramStr"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]


class InlineBodyAndParamNoConflictJSONTypedDict(TypedDict):
    body_str: str


class InlineBodyAndParamNoConflictJSON(BaseModel):
    body_str: Annotated[str, pydantic.Field(alias="bodyStr")]


class InlineBodyAndParamNoConflictResTypedDict(TypedDict):
    r"""OK"""

    args: Dict[str, str]
    json_: InlineBodyAndParamNoConflictJSONTypedDict


class InlineBodyAndParamNoConflictRes(BaseModel):
    r"""OK"""

    args: Dict[str, str]

    json_: Annotated[InlineBodyAndParamNoConflictJSON, pydantic.Field(alias="json")]
