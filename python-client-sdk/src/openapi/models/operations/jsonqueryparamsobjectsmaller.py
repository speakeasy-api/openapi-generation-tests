"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.models.shared import (
    deepobjectsmaller as shared_deepobjectsmaller,
    simpleobject as shared_simpleobject,
)
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing_extensions import Annotated, TypedDict


class JSONQueryParamsObjectSmallerRequestTypedDict(TypedDict):
    deep_obj_param: shared_deepobjectsmaller.DeepObjectSmallerTypedDict
    simple_obj_param: shared_simpleobject.SimpleObjectTypedDict
    r"""A simple object that uses all our supported primitive types and enums and has optional properties."""


class JSONQueryParamsObjectSmallerRequest(BaseModel):
    deep_obj_param: Annotated[
        shared_deepobjectsmaller.DeepObjectSmaller,
        pydantic.Field(alias="deepObjParam"),
        FieldMetadata(query=QueryParamMetadata(serialization="json")),
    ]

    simple_obj_param: Annotated[
        shared_simpleobject.SimpleObject,
        pydantic.Field(alias="simpleObjParam"),
        FieldMetadata(query=QueryParamMetadata(serialization="json")),
    ]
    r"""A simple object that uses all our supported primitive types and enums and has optional properties."""


class JSONQueryParamsObjectSmallerArgsTypedDict(TypedDict):
    deep_obj_param: str
    simple_obj_param: str


class JSONQueryParamsObjectSmallerArgs(BaseModel):
    deep_obj_param: Annotated[str, pydantic.Field(alias="deepObjParam")]

    simple_obj_param: Annotated[str, pydantic.Field(alias="simpleObjParam")]


class JSONQueryParamsObjectSmallerResTypedDict(TypedDict):
    r"""OK"""

    args: JSONQueryParamsObjectSmallerArgsTypedDict
    url: str


class JSONQueryParamsObjectSmallerRes(BaseModel):
    r"""OK"""

    args: JSONQueryParamsObjectSmallerArgs

    url: str
