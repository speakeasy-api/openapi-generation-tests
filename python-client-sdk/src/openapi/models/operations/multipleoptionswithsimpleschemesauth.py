"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, SecurityMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired

MULTIPLE_OPTIONS_WITH_SIMPLE_SCHEMES_AUTH_SERVERS = [
	"http://localhost:35456",
]


class MultipleOptionsWithSimpleSchemesAuthSecurityOption1TypedDict(TypedDict):
    api_key_auth_new: str
    oauth2: str
    

class MultipleOptionsWithSimpleSchemesAuthSecurityOption1(BaseModel):
    api_key_auth_new: Annotated[str, FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="apiKey", sub_type="header", field_name="x-api-key"))]
    oauth2: Annotated[str, FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="oauth2", field_name="Authorization"))]
    

class MultipleOptionsWithSimpleSchemesAuthSecurityOption2TypedDict(TypedDict):
    api_key_auth_new: str
    open_id_connect: str
    

class MultipleOptionsWithSimpleSchemesAuthSecurityOption2(BaseModel):
    api_key_auth_new: Annotated[str, FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="apiKey", sub_type="header", field_name="x-api-key"))]
    open_id_connect: Annotated[str, FieldMetadata(security=SecurityMetadata(scheme=True, scheme_type="openIdConnect", field_name="Authorization"))]
    

class MultipleOptionsWithSimpleSchemesAuthSecurityTypedDict(TypedDict):
    option1: NotRequired[MultipleOptionsWithSimpleSchemesAuthSecurityOption1TypedDict]
    option2: NotRequired[MultipleOptionsWithSimpleSchemesAuthSecurityOption2TypedDict]
    

class MultipleOptionsWithSimpleSchemesAuthSecurity(BaseModel):
    option1: Annotated[Optional[MultipleOptionsWithSimpleSchemesAuthSecurityOption1], FieldMetadata(security=SecurityMetadata(option=True))] = None
    option2: Annotated[Optional[MultipleOptionsWithSimpleSchemesAuthSecurityOption2], FieldMetadata(security=SecurityMetadata(option=True))] = None
    
