"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from openapi.models.shared import simpleobject as shared_simpleobject
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class EnumNameOverride(str, Enum):
    r"""An enum type"""
    VALUE1 = "value1"
    VALUE2 = "value2"
    VALUE3 = "value3"

class NameOverrideGetRequestTypedDict(TypedDict):
    test_enum_query_param: EnumNameOverride
    r"""An enum type"""
    test_query_param: str
    

class NameOverrideGetRequest(BaseModel):
    test_enum_query_param: Annotated[EnumNameOverride, pydantic.Field(alias="enumNameOverride"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    r"""An enum type"""
    test_query_param: Annotated[str, pydantic.Field(alias="nameOverride"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    

class DeepOverriddenAllOfTypedDict(TypedDict):
    pass
    

class DeepOverriddenAllOf(BaseModel):
    pass
    

class OverriddenAllOfTypedDict(TypedDict):
    pass
    

class OverriddenAllOf(BaseModel):
    pass
    

class OverriddenNormalTypedDict(TypedDict):
    pass
    

class OverriddenNormal(BaseModel):
    pass
    

class NameOverrideGetOverriddenResponseTypedDict(TypedDict):
    r"""A successful response that contains the simpleObject sent in the request body"""
    
    deep_overridden_all_of: NotRequired[DeepOverriddenAllOfTypedDict]
    json_: NotRequired[shared_simpleobject.SimpleObjectTypedDict]
    r"""A simple object that uses all our supported primitive types and enums and has optional properties.
    https://docs.speakeasyapi.dev - A link to the external docs.
    """
    overridden_all_of: NotRequired[OverriddenAllOfTypedDict]
    overridden_normal: NotRequired[OverriddenNormalTypedDict]
    

class NameOverrideGetOverriddenResponse(BaseModel):
    r"""A successful response that contains the simpleObject sent in the request body"""
    
    deep_overridden_all_of: Annotated[Optional[DeepOverriddenAllOf], pydantic.Field(alias="deepAllOf")] = None
    json_: Annotated[Optional[shared_simpleobject.SimpleObject], pydantic.Field(alias="json")] = None
    r"""A simple object that uses all our supported primitive types and enums and has optional properties.
    https://docs.speakeasyapi.dev - A link to the external docs.
    """
    overridden_all_of: Annotated[Optional[OverriddenAllOf], pydantic.Field(alias="allOf")] = None
    overridden_normal: Annotated[Optional[OverriddenNormal], pydantic.Field(alias="normal")] = None
    
