"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
import pydantic
from typing import Callable, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired

PAGINATION_LIMIT_OFFSET_DEEP_OUTPUTS_PAGE_BODY_SERVERS = [
	"http://localhost:35456",
]


class PageInfoTypedDict(TypedDict):
    num_pages: int
    next: NotRequired[str]
    

class PageInfo(BaseModel):
    num_pages: Annotated[int, pydantic.Field(alias="numPages")]
    next: Optional[str] = None
    

class PaginationLimitOffsetDeepOutputsPageBodyResTypedDict(TypedDict):
    r"""OK"""
    
    page_info: PageInfoTypedDict
    result_array: List[int]
    

class PaginationLimitOffsetDeepOutputsPageBodyRes(BaseModel):
    r"""OK"""
    
    page_info: Annotated[PageInfo, pydantic.Field(alias="pageInfo")]
    result_array: Annotated[List[int], pydantic.Field(alias="resultArray")]
    

class PaginationLimitOffsetDeepOutputsPageBodyResponseTypedDict(TypedDict):
    result: PaginationLimitOffsetDeepOutputsPageBodyResTypedDict
    

class PaginationLimitOffsetDeepOutputsPageBodyResponse(BaseModel):
    next: Callable[[], Optional[PaginationLimitOffsetDeepOutputsPageBodyResponse]]
    
    result: PaginationLimitOffsetDeepOutputsPageBodyRes
    
