"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Callable, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired

PAGINATION_LIMIT_OFFSET_OFFSET_PARAMS_SERVERS = [
	"http://localhost:35456",
]


class PaginationLimitOffsetOffsetParamsRequestTypedDict(TypedDict):
    limit: NotRequired[int]
    offset: NotRequired[int]
    

class PaginationLimitOffsetOffsetParamsRequest(BaseModel):
    limit: Annotated[Optional[int], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    offset: Annotated[Optional[int], FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    

class PaginationLimitOffsetOffsetParamsResTypedDict(TypedDict):
    r"""OK"""
    
    num_pages: int
    result_array: List[int]
    next: NotRequired[str]
    

class PaginationLimitOffsetOffsetParamsRes(BaseModel):
    r"""OK"""
    
    num_pages: Annotated[int, pydantic.Field(alias="numPages")]
    result_array: Annotated[List[int], pydantic.Field(alias="resultArray")]
    next: Optional[str] = None
    

class PaginationLimitOffsetOffsetParamsResponseTypedDict(TypedDict):
    result: PaginationLimitOffsetOffsetParamsResTypedDict
    

class PaginationLimitOffsetOffsetParamsResponse(BaseModel):
    next: Callable[[], Optional[PaginationLimitOffsetOffsetParamsResponse]]
    
    result: PaginationLimitOffsetOffsetParamsRes
    
