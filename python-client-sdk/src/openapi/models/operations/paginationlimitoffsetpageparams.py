"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Callable, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired

PAGINATION_LIMIT_OFFSET_PAGE_PARAMS_SERVERS = [
	"http://localhost:35456",
]


class PaginationLimitOffsetPageParamsRequestTypedDict(TypedDict):
    page: int
    

class PaginationLimitOffsetPageParamsRequest(BaseModel):
    page: Annotated[int, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    

class PaginationLimitOffsetPageParamsResTypedDict(TypedDict):
    r"""OK"""
    
    num_pages: int
    result_array: List[int]
    next: NotRequired[str]
    

class PaginationLimitOffsetPageParamsRes(BaseModel):
    r"""OK"""
    
    num_pages: Annotated[int, pydantic.Field(alias="numPages")]
    result_array: Annotated[List[int], pydantic.Field(alias="resultArray")]
    next: Optional[str] = None
    

class PaginationLimitOffsetPageParamsResponseTypedDict(TypedDict):
    result: PaginationLimitOffsetPageParamsResTypedDict
    

class PaginationLimitOffsetPageParamsResponse(BaseModel):
    next: Callable[[], Optional[PaginationLimitOffsetPageParamsResponse]]
    
    result: PaginationLimitOffsetPageParamsRes
    
