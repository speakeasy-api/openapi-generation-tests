"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
import pydantic
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


PrimitiveTypeOneOfPostRequestBodyTypedDict = TypeAliasType(
    "PrimitiveTypeOneOfPostRequestBodyTypedDict", Union[str, int, float, bool]
)


PrimitiveTypeOneOfPostRequestBody = TypeAliasType(
    "PrimitiveTypeOneOfPostRequestBody", Union[str, int, float, bool]
)


PrimitiveTypeOneOfPostJSONTypedDict = TypeAliasType(
    "PrimitiveTypeOneOfPostJSONTypedDict", Union[str, int, float, bool]
)


PrimitiveTypeOneOfPostJSON = TypeAliasType(
    "PrimitiveTypeOneOfPostJSON", Union[str, int, float, bool]
)


class PrimitiveTypeOneOfPostResTypedDict(TypedDict):
    r"""OK"""

    json_: PrimitiveTypeOneOfPostJSONTypedDict


class PrimitiveTypeOneOfPostRes(BaseModel):
    r"""OK"""

    json_: Annotated[PrimitiveTypeOneOfPostJSON, pydantic.Field(alias="json")]
