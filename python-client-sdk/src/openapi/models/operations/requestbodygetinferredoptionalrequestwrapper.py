"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired

REQUEST_BODY_GET_INFERRED_OPTIONAL_REQUEST_WRAPPER_SERVERS = [
    "http://localhost:35123",
]


class RequestBodyGetInferredOptionalRequestWrapperRequestTypedDict(TypedDict):
    keyword: NotRequired[str]
    limit: NotRequired[int]
    offset: NotRequired[int]


class RequestBodyGetInferredOptionalRequestWrapperRequest(BaseModel):
    keyword: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class RequestBodyGetInferredOptionalRequestWrapperArgsTypedDict(TypedDict):
    keyword: NotRequired[str]
    limit: NotRequired[int]
    offset: NotRequired[int]


class RequestBodyGetInferredOptionalRequestWrapperArgs(BaseModel):
    keyword: Optional[str] = None

    limit: Optional[int] = None

    offset: Optional[int] = None


class RequestBodyGetInferredOptionalRequestWrapperResponseBodyTypedDict(TypedDict):
    r"""OK"""

    args: RequestBodyGetInferredOptionalRequestWrapperArgsTypedDict


class RequestBodyGetInferredOptionalRequestWrapperResponseBody(BaseModel):
    r"""OK"""

    args: RequestBodyGetInferredOptionalRequestWrapperArgs
