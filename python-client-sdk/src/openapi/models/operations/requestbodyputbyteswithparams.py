"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import io
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import IO, TypedDict, Union
from typing_extensions import Annotated


class RequestBodyPutBytesWithParamsRequestTypedDict(TypedDict):
    request_body: Union[bytes, IO[bytes], io.BufferedReader]
    query_string_param: str
    

class RequestBodyPutBytesWithParamsRequest(BaseModel):
    request_body: Annotated[Union[bytes, IO[bytes], io.BufferedReader], FieldMetadata(request=True)]
    query_string_param: Annotated[str, pydantic.Field(alias="queryStringParam"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    

class RequestBodyPutBytesWithParamsArgsTypedDict(TypedDict):
    query_string_param: str
    

class RequestBodyPutBytesWithParamsArgs(BaseModel):
    query_string_param: Annotated[str, pydantic.Field(alias="queryStringParam")]
    

class RequestBodyPutBytesWithParamsResTypedDict(TypedDict):
    r"""OK"""
    
    args: RequestBodyPutBytesWithParamsArgsTypedDict
    data: str
    

class RequestBodyPutBytesWithParamsRes(BaseModel):
    r"""OK"""
    
    args: RequestBodyPutBytesWithParamsArgs
    data: str
    
