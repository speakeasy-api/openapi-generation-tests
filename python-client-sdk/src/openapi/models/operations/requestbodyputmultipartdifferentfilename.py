"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
import io
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, MultipartFormMetadata
import pydantic
from typing import Dict, IO, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class DifferentFileNameTypedDict(TypedDict):
    content: Union[bytes, IO[bytes], io.BufferedReader]
    file_name: str
    content_type: NotRequired[str]
    

class DifferentFileName(BaseModel):
    content: Annotated[Union[bytes, IO[bytes], io.BufferedReader], pydantic.Field(alias=""), FieldMetadata(multipart=MultipartFormMetadata(content=True))]
    file_name: Annotated[str, pydantic.Field(alias="differentFileName"), FieldMetadata(multipart=True)]
    content_type: Annotated[Optional[str], pydantic.Field(alias="Content-Type"), FieldMetadata(multipart=True)] = None
    

class RequestBodyPutMultipartDifferentFileNameRequestBodyTypedDict(TypedDict):
    different_file_name: NotRequired[DifferentFileNameTypedDict]
    

class RequestBodyPutMultipartDifferentFileNameRequestBody(BaseModel):
    different_file_name: Annotated[Optional[DifferentFileName], pydantic.Field(alias=""), FieldMetadata(multipart=MultipartFormMetadata(file=True))] = None
    

class RequestBodyPutMultipartDifferentFileNameResTypedDict(TypedDict):
    r"""OK"""
    
    files: Dict[str, str]
    

class RequestBodyPutMultipartDifferentFileNameRes(BaseModel):
    r"""OK"""
    
    files: Dict[str, str]
    
