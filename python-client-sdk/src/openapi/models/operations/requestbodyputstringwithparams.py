"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import TypedDict
from typing_extensions import Annotated


class RequestBodyPutStringWithParamsRequestTypedDict(TypedDict):
    request_body: str
    query_string_param: str


class RequestBodyPutStringWithParamsRequest(BaseModel):
    request_body: Annotated[
        str, FieldMetadata(request=RequestMetadata(media_type="text/plain"))
    ]

    query_string_param: Annotated[
        str,
        pydantic.Field(alias="queryStringParam"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]


class RequestBodyPutStringWithParamsArgsTypedDict(TypedDict):
    query_string_param: str


class RequestBodyPutStringWithParamsArgs(BaseModel):
    query_string_param: Annotated[str, pydantic.Field(alias="queryStringParam")]


class RequestBodyPutStringWithParamsResTypedDict(TypedDict):
    r"""OK"""

    args: RequestBodyPutStringWithParamsArgsTypedDict
    data: str


class RequestBodyPutStringWithParamsRes(BaseModel):
    r"""OK"""

    args: RequestBodyPutStringWithParamsArgs

    data: str
