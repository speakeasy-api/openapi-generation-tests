"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired

RETRIES_FLAT_EMPTY_RESPONSE_POST_SERVERS = [
	"http://localhost:35456",
]


class RetriesFlatEmptyResponsePostRequestBodyTypedDict(TypedDict):
    field_one: str
    

class RetriesFlatEmptyResponsePostRequestBody(BaseModel):
    field_one: str
    

class RetriesFlatEmptyResponsePostRequestTypedDict(TypedDict):
    request_id: str
    request_body: NotRequired[RetriesFlatEmptyResponsePostRequestBodyTypedDict]
    num_retries: NotRequired[int]
    

class RetriesFlatEmptyResponsePostRequest(BaseModel):
    request_id: Annotated[str, pydantic.Field(alias="request-id"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))]
    request_body: Annotated[Optional[RetriesFlatEmptyResponsePostRequestBody], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    num_retries: Annotated[Optional[int], pydantic.Field(alias="num-retries"), FieldMetadata(query=QueryParamMetadata(style="form", explode=True))] = None
    
