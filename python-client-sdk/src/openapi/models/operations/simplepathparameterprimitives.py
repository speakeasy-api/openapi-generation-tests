"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import TypedDict
from typing_extensions import Annotated


class SimplePathParameterPrimitivesRequestTypedDict(TypedDict):
    bool_param: bool
    int_param: int
    num_param: float
    str_param: str
    

class SimplePathParameterPrimitivesRequest(BaseModel):
    bool_param: Annotated[bool, pydantic.Field(alias="boolParam"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    int_param: Annotated[int, pydantic.Field(alias="intParam"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    num_param: Annotated[float, pydantic.Field(alias="numParam"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    str_param: Annotated[str, pydantic.Field(alias="strParam"), FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    

class SimplePathParameterPrimitivesResTypedDict(TypedDict):
    r"""OK"""
    
    url: str
    

class SimplePathParameterPrimitivesRes(BaseModel):
    r"""OK"""
    
    url: str
    
