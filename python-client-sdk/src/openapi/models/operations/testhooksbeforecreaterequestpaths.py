"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class TestHooksBeforeCreateRequestPathsRequestTypedDict(TypedDict):
    __test__ = False
    
    namespace: str
    

class TestHooksBeforeCreateRequestPathsRequest(BaseModel):
    __test__ = False
    
    namespace: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    

class TestHooksBeforeCreateRequestPathsHeadersTypedDict(TypedDict):
    __test__ = False
    
    old_pathname: NotRequired[str]
    

class TestHooksBeforeCreateRequestPathsHeaders(BaseModel):
    __test__ = False
    
    old_pathname: Annotated[Optional[str], pydantic.Field(alias="Old-Pathname")] = None
    

class TestHooksBeforeCreateRequestPathsResTypedDict(TypedDict):
    r"""OK"""
    __test__ = False
    
    headers: TestHooksBeforeCreateRequestPathsHeadersTypedDict
    url: str
    

class TestHooksBeforeCreateRequestPathsRes(BaseModel):
    r"""OK"""
    __test__ = False
    
    headers: TestHooksBeforeCreateRequestPathsHeaders
    url: str
    
