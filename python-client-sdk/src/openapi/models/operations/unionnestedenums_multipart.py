"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.models.shared import enum as shared_enum
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, MultipartFormMetadata
from typing import Any, Dict, List, TypedDict, Union
from typing_extensions import Annotated


EnumsTypedDict = Union[List[shared_enum.EnumT], Dict[str, shared_enum.EnumT]]


Enums = Union[List[shared_enum.EnumT], Dict[str, shared_enum.EnumT]]


class UnionNestedEnumsMultipartRequestBodyTypedDict(TypedDict):
    enums: EnumsTypedDict
    

class UnionNestedEnumsMultipartRequestBody(BaseModel):
    enums: Annotated[Enums, FieldMetadata(multipart=MultipartFormMetadata(json=True))]
    

class UnionNestedEnumsMultipartResTypedDict(TypedDict):
    r"""OK"""
    
    form: Dict[str, Any]
    

class UnionNestedEnumsMultipartRes(BaseModel):
    r"""OK"""
    
    form: Dict[str, Any]
    
