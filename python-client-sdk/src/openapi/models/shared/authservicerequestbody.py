"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class BasicAuthTypedDict(TypedDict):
    password: str
    username: str
    

class BasicAuth(BaseModel):
    password: str
    username: str
    

class HeaderAuthTypedDict(TypedDict):
    expected_value: str
    header_name: str
    

class HeaderAuth(BaseModel):
    expected_value: Annotated[str, pydantic.Field(alias="expectedValue")]
    header_name: Annotated[str, pydantic.Field(alias="headerName")]
    

class AuthServiceRequestBodyTypedDict(TypedDict):
    basic_auth: NotRequired[BasicAuthTypedDict]
    header_auth: NotRequired[List[HeaderAuthTypedDict]]
    

class AuthServiceRequestBody(BaseModel):
    basic_auth: Annotated[Optional[BasicAuth], pydantic.Field(alias="basicAuth")] = None
    header_auth: Annotated[Optional[List[HeaderAuth]], pydantic.Field(alias="headerAuth")] = None
    
