"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from decimal import Decimal
from openapi.types import BaseModel
from openapi.utils import serialize_decimal, serialize_int, validate_decimal, validate_int
import pydantic
from pydantic.functional_serializers import PlainSerializer
from pydantic.functional_validators import BeforeValidator
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ComplexNumberArraysTypedDict(TypedDict):
    bigint_array: NotRequired[List[int]]
    bigint_str_array: NotRequired[List[int]]
    decimal_array: NotRequired[List[Decimal]]
    decimal_str_array: NotRequired[List[Decimal]]
    

class ComplexNumberArrays(BaseModel):
    bigint_array: Annotated[Optional[List[Annotated[int, BeforeValidator(validate_int)]]], pydantic.Field(alias="bigintArray")] = None
    bigint_str_array: Annotated[Optional[List[Annotated[int, BeforeValidator(validate_int), PlainSerializer(serialize_int(True))]]], pydantic.Field(alias="bigintStrArray")] = None
    decimal_array: Annotated[Optional[List[Annotated[Decimal, BeforeValidator(validate_decimal), PlainSerializer(serialize_decimal(False))]]], pydantic.Field(alias="decimalArray")] = None
    decimal_str_array: Annotated[Optional[List[Annotated[Decimal, BeforeValidator(validate_decimal), PlainSerializer(serialize_decimal(True))]]], pydantic.Field(alias="decimalStrArray")] = None
    
