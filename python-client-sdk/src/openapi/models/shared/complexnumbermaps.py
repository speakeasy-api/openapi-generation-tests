"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from decimal import Decimal
from openapi.types import BaseModel
from openapi.utils import serialize_decimal, serialize_int, validate_decimal, validate_int
import pydantic
from pydantic.functional_serializers import PlainSerializer
from pydantic.functional_validators import BeforeValidator
from typing import Dict, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ComplexNumberMapsTypedDict(TypedDict):
    bigint_map: NotRequired[Dict[str, int]]
    bigint_str_map: NotRequired[Dict[str, int]]
    decimal_map: NotRequired[Dict[str, Decimal]]
    decimal_str_map: NotRequired[Dict[str, Decimal]]
    

class ComplexNumberMaps(BaseModel):
    bigint_map: Annotated[Optional[Dict[str, Annotated[int, BeforeValidator(validate_int)]]], pydantic.Field(alias="bigintMap")] = None
    bigint_str_map: Annotated[Optional[Dict[str, Annotated[int, BeforeValidator(validate_int), PlainSerializer(serialize_int(True))]]], pydantic.Field(alias="bigintStrMap")] = None
    decimal_map: Annotated[Optional[Dict[str, Annotated[Decimal, BeforeValidator(validate_decimal), PlainSerializer(serialize_decimal(False))]]], pydantic.Field(alias="decimalMap")] = None
    decimal_str_map: Annotated[Optional[Dict[str, Annotated[Decimal, BeforeValidator(validate_decimal), PlainSerializer(serialize_decimal(True))]]], pydantic.Field(alias="decimalStrMap")] = None
    
