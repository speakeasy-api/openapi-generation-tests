"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from decimal import Decimal
from openapi.types import BaseModel
from openapi.utils import (
    serialize_decimal,
    serialize_int,
    validate_decimal,
    validate_int,
)
import pydantic
from pydantic.functional_serializers import PlainSerializer
from pydantic.functional_validators import BeforeValidator
from typing_extensions import Annotated, TypedDict


class ComplexNumberTypesTypedDict(TypedDict):
    bigint: int
    bigint_str: int
    decimal: Decimal
    decimal_str: Decimal


class ComplexNumberTypes(BaseModel):
    bigint: Annotated[int, BeforeValidator(validate_int)]

    bigint_str: Annotated[
        Annotated[
            int, BeforeValidator(validate_int), PlainSerializer(serialize_int(True))
        ],
        pydantic.Field(alias="bigintStr"),
    ]

    decimal: Annotated[
        Decimal,
        BeforeValidator(validate_decimal),
        PlainSerializer(serialize_decimal(False)),
    ]

    decimal_str: Annotated[
        Annotated[
            Decimal,
            BeforeValidator(validate_decimal),
            PlainSerializer(serialize_decimal(True)),
        ],
        pydantic.Field(alias="decimalStr"),
    ]
