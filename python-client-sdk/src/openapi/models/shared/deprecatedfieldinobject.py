"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from openapi.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired, deprecated


@deprecated("warning: ** DEPRECATED ** - This enum is deprecated.")
class DeprecatedEnum(str, Enum):
    A = "a"
    B = "b"
    C = "c"

class DeprecatedFieldInObjectTypedDict(TypedDict):
    deprecated_enum: NotRequired[DeprecatedEnum]
    deprecated_field: NotRequired[str]
    new_field: NotRequired[str]
    

class DeprecatedFieldInObject(BaseModel):
    deprecated_enum: Annotated[Optional[DeprecatedEnum], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This enum is deprecated.", alias="deprecatedEnum")] = None
    deprecated_field: Annotated[Optional[str], pydantic.Field(deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible. Use new_field instead.", alias="deprecatedField")] = None
    new_field: Annotated[Optional[str], pydantic.Field(alias="newField")] = None
    
