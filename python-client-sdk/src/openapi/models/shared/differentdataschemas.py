"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from .messageevent import MessageEvent, MessageEventTypedDict
from .urlevent import URLEvent, URLEventTypedDict
from enum import Enum
from openapi.types import BaseModel
from typing import TypedDict, Union


class Event(str, Enum):
    MESSAGE = "message"
    URL = "url"

class DifferentDataSchemasTypedDict(TypedDict):
    r"""Represents an event with different schemas for the data property"""
    
    data: DifferentDataSchemasDataTypedDict
    event: Event
    id: str
    

class DifferentDataSchemas(BaseModel):
    r"""Represents an event with different schemas for the data property"""
    
    data: DifferentDataSchemasData
    event: Event
    id: str
    

DifferentDataSchemasDataTypedDict = Union[MessageEventTypedDict, URLEventTypedDict]


DifferentDataSchemasData = Union[MessageEvent, URLEvent]

