"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from openapi.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ExampleCarType(str, Enum):
    CAR = "car"


class ExampleCarTypedDict(TypedDict):
    make: str
    model: str
    name: str
    type: ExampleCarType
    year: float
    created_at: NotRequired[datetime]
    updated_at: NotRequired[datetime]


class ExampleCar(BaseModel):
    make: str

    model: str

    name: str

    type: ExampleCarType

    year: float

    created_at: Annotated[Optional[datetime], pydantic.Field(alias="createdAt")] = None

    updated_at: Annotated[Optional[datetime], pydantic.Field(alias="updatedAt")] = None
