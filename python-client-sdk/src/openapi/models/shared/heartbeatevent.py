"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HeartbeatEventTypedDict(TypedDict):
    r"""Represents a single heartbeat event"""

    data: str
    event: Literal["heartbeat"]
    retry: NotRequired[int]


class HeartbeatEvent(BaseModel):
    r"""Represents a single heartbeat event"""

    data: str

    EVENT: Annotated[
        Annotated[Literal["heartbeat"], AfterValidator(validate_const("heartbeat"))],
        pydantic.Field(alias="event"),
    ] = "heartbeat"

    retry: Optional[int] = None
