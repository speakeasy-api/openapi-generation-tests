"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import serialize_int, validate_int
import pydantic
from pydantic import ConfigDict
from pydantic.functional_serializers import PlainSerializer
from pydantic.functional_validators import BeforeValidator
from typing import Dict
from typing_extensions import Annotated, TypedDict


class ObjWithComplexNumbersAdditionalPropertiesTypedDict(TypedDict):
    normal_field: str


class ObjWithComplexNumbersAdditionalProperties(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True, arbitrary_types_allowed=True, extra="allow"
    )
    __pydantic_extra__: Dict[
        str,
        Annotated[
            int, BeforeValidator(validate_int), PlainSerializer(serialize_int(True))
        ],
    ] = pydantic.Field(init=False)

    normal_field: Annotated[str, pydantic.Field(alias="normalField")]

    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value  # pyright: ignore[reportIncompatibleVariableOverride]
