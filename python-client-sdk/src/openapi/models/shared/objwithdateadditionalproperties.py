"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from datetime import date
from openapi.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Dict, TypedDict
from typing_extensions import Annotated


class ObjWithDateAdditionalPropertiesTypedDict(TypedDict):
    normal_field: str
    

class ObjWithDateAdditionalProperties(BaseModel):
    model_config = ConfigDict(populate_by_name=True, arbitrary_types_allowed=True, extra="allow")
    __pydantic_extra__:  Dict[str, date] = pydantic.Field(init=False)
    
    normal_field: Annotated[str, pydantic.Field(alias="normalField")]
    
    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value
    
