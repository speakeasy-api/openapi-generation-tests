"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .simpleobject import SimpleObject
from datetime import datetime
from openapi.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Dict, List, TypedDict
from typing_extensions import Annotated


class ObjWithObjAdditionalPropertiesTypedDict(TypedDict):
    additional_properties: List[int]
    datetime: datetime


class ObjWithObjAdditionalProperties(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True, arbitrary_types_allowed=True, extra="allow"
    )
    __pydantic_extra__: Dict[str, SimpleObject] = pydantic.Field(init=False)

    additional_properties: Annotated[
        List[int], pydantic.Field(alias="AdditionalProperties")
    ]

    datetime: datetime

    @property
    def additional_properties_t(self):
        return self.__pydantic_extra__

    @additional_properties_t.setter
    def additional_properties_t(self, value):
        self.__pydantic_extra__ = value  # pyright: ignore[reportIncompatibleVariableOverride]
