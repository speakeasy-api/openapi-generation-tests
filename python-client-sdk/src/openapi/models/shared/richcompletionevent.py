"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .richcompletioneventdata import RichCompletionEventData, RichCompletionEventDataTypedDict
from openapi.types import BaseModel
import pydantic
from typing import Final, TypedDict
from typing_extensions import Annotated


class RichCompletionEventTypedDict(TypedDict):
    r"""Represents a single event in a completion stream"""
    
    data: RichCompletionEventDataTypedDict
    id: str
    

class RichCompletionEvent(BaseModel):
    r"""Represents a single event in a completion stream"""
    
    data: RichCompletionEventData
    id: str
    EVENT: Annotated[Final[str], pydantic.Field(alias="event")] = "completion" # type: ignore
    
