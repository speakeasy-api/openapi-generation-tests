"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .richcompletioneventdata import (
    RichCompletionEventData,
    RichCompletionEventDataTypedDict,
)
from openapi.types import BaseModel
from openapi.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class RichCompletionEventTypedDict(TypedDict):
    r"""Represents a single event in a completion stream"""

    data: RichCompletionEventDataTypedDict
    id: str
    event: Literal["completion"]


class RichCompletionEvent(BaseModel):
    r"""Represents a single event in a completion stream"""

    data: RichCompletionEventData

    id: str

    EVENT: Annotated[
        Annotated[Literal["completion"], AfterValidator(validate_const("completion"))],
        pydantic.Field(alias="event"),
    ] = "completion"
