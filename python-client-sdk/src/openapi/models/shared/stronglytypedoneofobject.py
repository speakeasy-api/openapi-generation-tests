"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .deepobjectwithtype import DeepObjectWithType, DeepObjectWithTypeTypedDict
from .simpleobjectwithtype import SimpleObjectWithType, SimpleObjectWithTypeTypedDict
from openapi.utils import get_discriminator
from pydantic import Discriminator, Tag
from typing import Union
from typing_extensions import Annotated, TypeAliasType


StronglyTypedOneOfObjectTypedDict = TypeAliasType(
    "StronglyTypedOneOfObjectTypedDict",
    Union[DeepObjectWithTypeTypedDict, SimpleObjectWithTypeTypedDict],
)


StronglyTypedOneOfObject = Annotated[
    Union[
        Annotated[SimpleObjectWithType, Tag("simpleObjectWithType")],
        Annotated[DeepObjectWithType, Tag("deepObjectWithType")],
    ],
    Discriminator(lambda m: get_discriminator(m, "type", "type")),
]
