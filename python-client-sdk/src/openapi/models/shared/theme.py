"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from openapi import utils
from openapi.types import BaseModel
from openapi.utils import validate_open_enum
import pydantic
from pydantic.functional_validators import PlainValidator
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class Color(str, Enum, metaclass=utils.OpenEnumMeta):
    RED = "red"
    GREEN = "green"
    BLUE = "blue"

class HeroWidth(int, Enum, metaclass=utils.OpenEnumMeta):
    FOUR_HUNDRED_AND_EIGHTY = 480
    SEVEN_HUNDRED_AND_TWENTY = 720
    ONE_THOUSAND_AND_EIGHTY = 1080

class Icon(str, Enum):
    TICK = "tick"
    THUMBS_UP = "thumbs-up"
    FIRE = "fire"

class ThemeTypedDict(TypedDict):
    color: NotRequired[Color]
    hero_width: NotRequired[HeroWidth]
    icon: NotRequired[Icon]
    

class Theme(BaseModel):
    color: Annotated[Optional[Color], PlainValidator(validate_open_enum(False))] = Color.BLUE
    hero_width: Annotated[Annotated[Optional[HeroWidth], PlainValidator(validate_open_enum(True))], pydantic.Field(alias="heroWidth")] = None
    icon: Optional[Icon] = None
    
