"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import chatcompletionresult as shared_chatcompletionresult
from ...models.shared import chatcompletionstream as shared_chatcompletionstream
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Generator, List, Optional

CHAT_SERVERS = [
	"http://localhost:35456",
]


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChatRequestBody:
    prompt: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prompt') }})
    stream: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stream'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class ChatResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    chat_completion_result: Optional[List[shared_chatcompletionresult.ChatCompletionResult]] = dataclasses.field(default=None)
    r"""Ok"""
    chat_completion_stream: Optional[Generator[shared_chatcompletionstream.ChatCompletionStream]] = dataclasses.field(default=None)
    r"""Ok"""
    

