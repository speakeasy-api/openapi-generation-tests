"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Dict, List, Optional, Union


@dataclasses.dataclass
class DeepObjectQueryParamsMapRequest:
    map_param: Dict[str, str] = dataclasses.field(metadata={'query_param': { 'field_name': 'mapParam', 'style': 'deepObject', 'explode': True }})
    map_arr_param: Optional[Dict[str, List[str]]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'mapArrParam', 'style': 'deepObject', 'explode': True }})
    



@dataclasses.dataclass
class DeepObjectQueryParamsMapResArgs:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeepObjectQueryParamsMapRes:
    r"""OK"""
    args: Dict[str, Union[str, List[str]]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args') }})
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    



@dataclasses.dataclass
class DeepObjectQueryParamsMapResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    res: Optional[DeepObjectQueryParamsMapRes] = dataclasses.field(default=None)
    r"""OK"""
    

