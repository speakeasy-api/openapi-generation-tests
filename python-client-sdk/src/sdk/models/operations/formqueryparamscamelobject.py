"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ObjParam:
    encoded_count: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'encoded_count' }})
    encoded_term: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'encoded_term' }})
    



@dataclasses.dataclass
class ObjParamExploded:
    item_count: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'item_count' }})
    search_term: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search_term' }})
    



@dataclasses.dataclass
class FormQueryParamsCamelObjectRequest:
    obj_param_exploded: ObjParamExploded = dataclasses.field(metadata={'query_param': { 'field_name': 'obj_param_exploded', 'style': 'form', 'explode': True }})
    obj_param: Optional[ObjParam] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'obj_param', 'style': 'form', 'explode': False }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FormQueryParamsCamelObjectArgs:
    item_count: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item_count') }})
    search_term: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_term') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FormQueryParamsCamelObjectRes:
    r"""OK"""
    args: FormQueryParamsCamelObjectArgs = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args') }})
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    



@dataclasses.dataclass
class FormQueryParamsCamelObjectResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    res: Optional[FormQueryParamsCamelObjectRes] = dataclasses.field(default=None)
    r"""OK"""
    

