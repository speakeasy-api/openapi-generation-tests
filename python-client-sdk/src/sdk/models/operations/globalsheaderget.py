"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Dict, Optional


@dataclasses.dataclass
class GlobalsHeaderGetGlobals:
    global_header_param: Optional[bool] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'globalHeaderParam', 'style': 'simple', 'explode': False }})
    



@dataclasses.dataclass
class GlobalsHeaderGetRequest:
    global_header_param: Optional[bool] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'globalHeaderParam', 'style': 'simple', 'explode': False }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GlobalsHeaderGetRes:
    r"""OK"""
    headers: Optional[Dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headers'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class GlobalsHeaderGetResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    res: Optional[GlobalsHeaderGetRes] = dataclasses.field(default=None)
    r"""OK"""
    

