"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Dict, Optional


@dataclasses.dataclass
class HeaderParamsMapRequest:
    x_header_map: Dict[str, str] = dataclasses.field(metadata={'header': { 'field_name': 'X-Header-Map', 'style': 'simple', 'explode': False }})
    x_header_map_explode: Dict[str, str] = dataclasses.field(metadata={'header': { 'field_name': 'X-Header-Map-Explode', 'style': 'simple', 'explode': True }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HeaderParamsMapResHeaders:
    x_header_map: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('X-Header-Map') }})
    x_header_map_explode: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('X-Header-Map-Explode') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HeaderParamsMapRes:
    r"""OK"""
    headers: HeaderParamsMapResHeaders = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headers') }})
    



@dataclasses.dataclass
class HeaderParamsMapResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    res: Optional[HeaderParamsMapRes] = dataclasses.field(default=None)
    r"""OK"""
    

