"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import oneofoverlappingobjects as shared_oneofoverlappingobjects
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OneOfOverlappingObjectsRequestBody:
    field1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field1') }})
    field2: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field2'), 'exclude': lambda f: f is None }})
    field3: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field3'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OneOfOverlappingObjectsRes:
    r"""OK"""
    json: shared_oneofoverlappingobjects.OneOfOverlappingObjects = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('json') }})
    



@dataclasses.dataclass
class OneOfOverlappingObjectsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    res: Optional[OneOfOverlappingObjectsRes] = dataclasses.field(default=None)
    r"""OK"""
    

