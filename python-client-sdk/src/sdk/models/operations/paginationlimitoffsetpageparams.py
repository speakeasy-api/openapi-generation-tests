"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Callable, List, Optional

PAGINATION_LIMIT_OFFSET_PAGE_PARAMS_SERVERS = [
	"http://localhost:35456",
]


@dataclasses.dataclass
class PaginationLimitOffsetPageParamsRequest:
    page: int = dataclasses.field(metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaginationLimitOffsetPageParamsRes:
    r"""OK"""
    num_pages: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numPages') }})
    result_array: List[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultArray') }})
    



@dataclasses.dataclass
class PaginationLimitOffsetPageParamsResponse:
    next: Callable[[], Optional[PaginationLimitOffsetPageParamsResponse]] = dataclasses.field()
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    res: Optional[PaginationLimitOffsetPageParamsRes] = dataclasses.field(default=None)
    r"""OK"""
    

