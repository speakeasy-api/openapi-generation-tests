"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Dict, Optional


@dataclasses.dataclass
class RequestBodyPostMultipleContentTypesSplitApplicationXWwwFormUrlencoded:
    bool3: bool = dataclasses.field(metadata={'form': { 'field_name': 'bool3' }})
    num3: float = dataclasses.field(metadata={'form': { 'field_name': 'num3' }})
    str3: str = dataclasses.field(metadata={'form': { 'field_name': 'str3' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RequestBodyPostMultipleContentTypesSplitFormRes:
    r"""OK"""
    form: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form'), 'exclude': lambda f: f is None }})
    json: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('json'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class RequestBodyPostMultipleContentTypesSplitFormResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    res: Optional[RequestBodyPostMultipleContentTypesSplitFormRes] = dataclasses.field(default=None)
    r"""OK"""
    

