"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Dict, Optional


@dataclasses.dataclass
class RequestBodyPostMultipleContentTypesSplitParamMultipartFormData:
    bool2: bool = dataclasses.field(metadata={'multipart_form': { 'field_name': 'bool2' }})
    num2: float = dataclasses.field(metadata={'multipart_form': { 'field_name': 'num2' }})
    str2: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'str2' }})
    



@dataclasses.dataclass
class RequestBodyPostMultipleContentTypesSplitParamMultipartRequest:
    param_str: str = dataclasses.field(metadata={'query_param': { 'field_name': 'paramStr', 'style': 'form', 'explode': True }})
    request_body: RequestBodyPostMultipleContentTypesSplitParamMultipartFormData = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RequestBodyPostMultipleContentTypesSplitParamMultipartRes:
    r"""OK"""
    args: Optional[Dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args'), 'exclude': lambda f: f is None }})
    form: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form'), 'exclude': lambda f: f is None }})
    json: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('json'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class RequestBodyPostMultipleContentTypesSplitParamMultipartResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    res: Optional[RequestBodyPostMultipleContentTypesSplitParamMultipartRes] = dataclasses.field(default=None)
    r"""OK"""
    

