"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from decimal import Decimal
from sdk import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComplexNumberArrays:
    bigint_array: Optional[List[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigintArray'), 'exclude': lambda f: f is None }})
    bigint_str_array: Optional[List[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigintStrArray'), 'encoder': utils.list_encoder(True, utils.bigintencoder(False)), 'decoder': utils.list_decoder(utils.bigintdecoder), 'exclude': lambda f: f is None }})
    decimal_array: Optional[List[Decimal]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decimalArray'), 'encoder': utils.list_encoder(True, utils.decimalencoder(False, False)), 'decoder': utils.list_decoder(utils.decimaldecoder), 'exclude': lambda f: f is None }})
    decimal_str_array: Optional[List[Decimal]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decimalStrArray'), 'encoder': utils.list_encoder(True, utils.decimalencoder(False, True)), 'decoder': utils.list_decoder(utils.decimaldecoder), 'exclude': lambda f: f is None }})
    

