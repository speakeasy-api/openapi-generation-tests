"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeprecatedFieldInObjectDeprecatedEnum(str, Enum):
    r"""Deprecated class: This enum is deprecated."""
    A = 'a'
    B = 'b'
    C = 'c'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeprecatedFieldInObject:
    deprecated_enum: Optional[DeprecatedFieldInObjectDeprecatedEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deprecatedEnum'), 'exclude': lambda f: f is None }})
    r"""Deprecated field: This enum is deprecated."""
    deprecated_field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deprecatedField'), 'exclude': lambda f: f is None }})
    r"""Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible. Use new_field instead."""
    new_field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newField'), 'exclude': lambda f: f is None }})
    

