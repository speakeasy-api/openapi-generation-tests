"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .messageevent import MessageEvent
from .urlevent import URLEvent
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Union


class Event(str, Enum):
    MESSAGE = 'message'
    URL = 'url'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DifferentDataSchemas:
    r"""Represents an event with different schemas for the data property"""
    data: DifferentDataSchemasData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})
    event: Event = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event') }})
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    


DifferentDataSchemasData = Union[MessageEvent, URLEvent]
