"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .richcompletioneventdata import RichCompletionEventData
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Final


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RichCompletionEvent:
    r"""Represents a single event in a completion stream"""
    data: RichCompletionEventData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    EVENT: Final[str] = dataclasses.field(default='completion', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event') }})
    

