"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class StopReason(str, Enum):
    STOP_SEQUENCE = 'stop_sequence'
    MAX_TOKENS = 'max_tokens'
    LESS_THAN_NIL_GREATER_THAN_ = '<nil>'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RichCompletionEventData:
    completion: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completion') }})
    stop_reason: Optional[StopReason] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stop_reason') }})
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    

