"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


class Color(str, Enum, metaclass=utils.OpenEnumMeta):
    RED = 'red'
    GREEN = 'green'
    BLUE = 'blue'


class HeroWidth(int, Enum, metaclass=utils.OpenEnumMeta):
    FOUR_HUNDRED_AND_EIGHTY = 480
    SEVEN_HUNDRED_AND_TWENTY = 720
    ONE_THOUSAND_AND_EIGHTY = 1080


class Icon(str, Enum):
    TICK = 'tick'
    THUMBS_UP = 'thumbs-up'
    FIRE = 'fire'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Theme:
    color: Optional[Color] = dataclasses.field(default=Color.BLUE, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('color'), 'exclude': lambda f: f is None }})
    hero_width: Optional[HeroWidth] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heroWidth'), 'exclude': lambda f: f is None }})
    icon: Optional[Icon] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icon'), 'exclude': lambda f: f is None }})
    

