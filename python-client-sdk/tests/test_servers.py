"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from src.sdk import SDK, SERVERS
from src.sdk.models.operations import *
from src.sdk.utils import *

from .helpers import *


def test_select_global_server_valid():
    record_test('servers-select-global-server-valid')

    s = SDK(server_url=SERVERS[0])
    assert s is not None

    res = s.servers.select_global_server()

    assert res is not None
    assert res.status_code == 200


def test_select_global_server_broken():
    record_test('servers-select-global-server-broken')

    s = SDK(server_url=SERVERS[1])
    assert s is not None

    error = None

    try:
        res = s.servers.select_global_server()
    except Exception as e:
        error = e

    assert error is not None


def test_select_server_with_id_default():
    record_test('servers-select-server-with-id-default')

    s = SDK()
    assert s is not None

    res = s.servers.select_server_with_id()

    assert res is not None
    assert res.status_code == 200


def test_select_server_with_id_valid():
    record_test('servers-select-server-with-id-valid')

    s = SDK()
    assert s is not None

    res = s.servers.select_server_with_id(
        server_url=SELECT_SERVER_WITH_ID_SERVERS[SELECT_SERVER_WITH_ID_SERVER_VALID])

    assert res is not None
    assert res.status_code == 200


def test_select_server_with_id_broken():
    record_test('servers-select-server-with-id-broken')

    s = SDK()
    assert s is not None

    error = None

    try:
        res = s.servers.select_server_with_id(
            server_url=SELECT_SERVER_WITH_ID_SERVERS[SELECT_SERVER_WITH_ID_SERVER_BROKEN])
    except Exception as e:
        error = e

    assert error is not None


def test_server_with_templates_global():
    record_test('servers-server-with-templates-global')

    s = SDK(server_url=SERVERS[0], url_params={
        "hostname": "localhost",
        "port": "35123"
    })
    assert s is not None

    res = s.servers.server_with_templates_global()

    assert res is not None
    assert res.status_code == 200


def test_server_with_templates():
    record_test('servers-server-with-templates')

    s = SDK()
    assert s is not None

    res = s.servers.server_with_templates(server_url=template_url(SERVER_WITH_TEMPLATES_SERVERS[0], {
        "hostname": "localhost",
        "port": "35123"
    }))

    assert res is not None
    assert res.status_code == 200
