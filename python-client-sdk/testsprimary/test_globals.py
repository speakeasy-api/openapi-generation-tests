"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from openapi import SDK
from openapi.models import operations

from .common_helpers import *
from .test_helpers import *
import httpx


def test_globals_query_parameter_get_uses_global():
    record_test("globals-query-parameter-get-uses-global")

    s = SDK(global_query_param="test")
    assert s is not None

    res = s.globals.globals_query_parameter_get()
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.args.global_query_param == "test"


def test_globals_query_parameter_get_uses_local():
    record_test("globals-query-parameter-get-uses-local")

    s = SDK(global_query_param="test")
    assert s is not None

    res = s.globals.globals_query_parameter_get(global_query_param="local")
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.args.global_query_param == "local"


def test_global_path_parameter_get_uses_global():
    record_test("globals-path-parameter-get-uses-global")

    s = SDK(global_path_param=1)
    assert s is not None

    res = s.globals.global_path_parameter_get()
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.url == "http://localhost:35123/anything/globals/pathParameter/1"


def test_global_path_parameter_get_uses_local():
    record_test("globals-path-parameter-get-uses-local")

    s = SDK(global_path_param=1)
    assert s is not None

    res = s.globals.global_path_parameter_get(global_path_param=2)
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.url == "http://localhost:35123/anything/globals/pathParameter/2"


def test_global_header_get_uses_global():
    record_test("globals-header-get-uses-global")

    s = SDK(global_header_param=True)
    assert s is not None

    res = s.globals.globals_header_get()
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.headers is not None
    assert res.res.headers["Globalheaderparam"] == "true"


def test_global_header_get_uses_local():
    record_test("globals-header-get-uses-local")

    s = SDK(global_header_param=True)
    assert s is not None

    res = s.globals.globals_header_get(global_header_param=False)
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.headers is not None
    assert res.res.headers["Globalheaderparam"] == "false"


def test_global_header_keeps_custom_client_headers():
    record_test("globals-header-keeps-custom-client-headers")

    http_client = httpx.Client(headers={"x-custom-header": "someValue"})

    s = SDK(global_header_param=True, client=http_client)
    assert s is not None

    res = s.globals.globals_header_get()
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.headers is not None
    assert res.res.headers["Globalheaderparam"] == "true"
    assert res.res.headers["X-Custom-Header"] == "someValue"


def test_globals_hidden_post():
    record_test("globals-hidden-post")

    s = SDK(
        global_hidden_query_param="hello",
        global_hidden_header_param="world",
        global_hidden_path_param="test",
    )
    assert s is not None

    res = s.globals.globals_hidden_post(
        request=operations.GlobalsHiddenPostRequestBody(
            test="friend",
            other=37,
        )
    )
    assert res is not None
    assert res.http_meta is not None
    assert res.http_meta.response is not None
    assert res.http_meta.response.status_code == 200
    assert res.res is not None
    assert res.res.args.global_hidden_query_param == "hello"
    assert res.res.json_.test == "friend"
    assert res.res.json_.other == 37
    assert res.res.headers["Globalhiddenheaderparam"] == "world"
    assert (
        res.res.url
        == "http://localhost:35123/anything/globals/hidden/test?globalHiddenQueryParam=hello"
    )
