"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import uuid

import pytest
from sdk import SDK
from sdk.models import errors
from sdk.models.operations import *
from sdk.utils import BackoffStrategy, RetryConfig

from .common_helpers import *
from .helpers import *


def test_retries_succeeds():
    record_test('retries-succeeds')

    s = SDK()
    assert s is not None

    res = s.retries.retries_get(str(uuid.uuid4()))
    assert res is not None
    assert res.status_code == 200
    assert res.retries.retries == 3


def test_retries_timeout():
    record_test('retries-timeout')

    s = SDK()
    assert s is not None

    with pytest.raises(errors.SDKError, match="API error occurred: Status 503") as exc_info:
        res = s.retries.retries_get(str(uuid.uuid4()), 1000000000, RetryConfig(
            'backoff', BackoffStrategy(1, 50, 1.1, 100), False))

    assert exc_info.value.status_code == 503


def test_global_retry_config_disable():
    record_test("retries-global-config-disable")

    s = SDK(retry_config=RetryConfig("", None, False))

    with pytest.raises(errors.SDKError, match="API error occurred: Status 503") as exc_info:
        res = s.retries.retries_get(str(uuid.uuid4()), 2)

    assert exc_info.value.status_code == 503

def test_global_retry_config_success():
    record_test("retries-global-config-success")

    s = SDK(retry_config=RetryConfig("backoff", BackoffStrategy(1, 50, 1.0, 100), False))

    res = s.retries.retries_get(str(uuid.uuid4()), 2);
    assert res is not None
    assert res.status_code == 200
    assert res.retries.retries == 2

def test_global_retry_config_timeout():
    record_test("retries-global-config-timeout")

    s = SDK(retry_config=RetryConfig("backoff", BackoffStrategy(1, 50, 1.0, 100), False))

    with pytest.raises(errors.SDKError, match="API error occurred: Status 503") as exc_info:
        res = s.retries.retries_get(str(uuid.uuid4()), 30)

    assert exc_info.value.status_code == 503