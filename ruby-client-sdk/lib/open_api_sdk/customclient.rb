# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'faraday'
require 'faraday/multipart'
require 'sorbet-runtime'

module OpenApiSDK
  extend T::Sig
  class CustomClient
    extend T::Sig
    # Endpoints for testing custom HTTP clients

    sig { params(sdk_config: SDKConfiguration).void }
    def initialize(sdk_config)
      @sdk_configuration = sdk_config
    end


    sig { params(header_param: ::String, path_param: ::String, query_string_param: ::String, simple_object: T.nilable(::OpenApiSDK::Shared::SimpleObject)).returns(::OpenApiSDK::Operations::CustomClientPostResponse) }
    def custom_client_post(header_param, path_param, query_string_param, simple_object = nil)

      request = ::OpenApiSDK::Operations::CustomClientPostRequest.new(
        
        header_param: header_param,
        path_param: path_param,
        query_string_param: query_string_param,
        simple_object: simple_object
      )
      url, params = @sdk_configuration.get_server_details
      base_url = Utils.template_url(url, params)
      url = Utils.generate_url(
        ::OpenApiSDK::Operations::CustomClientPostRequest,
        base_url,
        '/anything/customClient/{pathParam}',
        request,
        @sdk_configuration.globals
      )
      headers = Utils.get_headers(request, @sdk_configuration.globals)
      req_content_type, data, form = Utils.serialize_request_body(request, :simple_object, :json)
      headers['content-type'] = req_content_type
      query_params = Utils.get_query_params(::OpenApiSDK::Operations::CustomClientPostRequest, request, @sdk_configuration.globals)
      headers['Accept'] = 'application/json'
      headers['x-speakeasy-user-agent'] = @sdk_configuration.user_agent

      r = @sdk_configuration.client.post(url) do |req|
        req.headers = headers
        req.params = query_params
        Utils.configure_request_security(req, @sdk_configuration.security) if !@sdk_configuration.nil? && !@sdk_configuration.security.nil?
        if form
          req.body = Utils.encode_form(form)
        elsif Utils.match_content_type(req_content_type, 'application/x-www-form-urlencoded')
          req.body = URI.encode_www_form(data)
        else
          req.body = data
        end
      end

      content_type = r.headers.fetch('Content-Type', 'application/octet-stream')

      res = ::OpenApiSDK::Operations::CustomClientPostResponse.new(
        status_code: r.status, content_type: content_type, raw_response: r
      )
      if r.status == 200
        if Utils.match_content_type(content_type, 'application/json')
          out = Utils.unmarshal_complex(r.env.response_body, ::OpenApiSDK::Operations::CustomClientPostRes)
          res.res = out
        end
      end
      res
    end
  end
end
