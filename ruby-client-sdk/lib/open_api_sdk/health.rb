# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'faraday'
require 'faraday/multipart'
require 'sorbet-runtime'

module OpenApiSDK
  extend T::Sig
  class Health
    extend T::Sig
    
    # CHECK_SERVERS contains the list of server urls available to the SDK.
    CHECK_SERVERS = [
      'http://localhost:35456', 
    ].freeze


    sig { params(sdk_config: SDKConfiguration).void }
    def initialize(sdk_config)
      @sdk_configuration = sdk_config
    end


    sig { params(server_url: T.nilable(String)).returns(::OpenApiSDK::Operations::CheckResponse) }
    def check(server_url = nil)

      base_url = Utils.template_url(CHECK_SERVERS[0], {
      })
      base_url = server_url if !server_url.nil?
      url = "#{base_url}/ping"
      headers = {}
      headers['Accept'] = '*/*'
      headers['x-speakeasy-user-agent'] = @sdk_configuration.user_agent

      r = @sdk_configuration.client.get(url) do |req|
        req.headers = headers
        Utils.configure_request_security(req, @sdk_configuration.security) if !@sdk_configuration.nil? && !@sdk_configuration.security.nil?
      end

      content_type = r.headers.fetch('Content-Type', 'application/octet-stream')

      res = ::OpenApiSDK::Operations::CheckResponse.new(
        status_code: r.status, content_type: content_type, raw_response: r
      )

      res
    end
  end
end
