# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class PipeDelimitedQueryParamsArrayRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :arr_param, T.nilable(T::Array[::String]), { 'query_param': { 'field_name': 'arrParam', 'style': 'pipeDelimited', 'explode': false } }

      field :arr_param_exploded, T.nilable(T::Array[::Integer]), { 'query_param': { 'field_name': 'arrParamExploded', 'style': 'pipeDelimited', 'explode': true } }

      field :map_param, T.nilable(T::Hash[Symbol, ::String]), { 'query_param': { 'field_name': 'mapParam', 'style': 'pipeDelimited', 'explode': false } }
      # A simple object that uses all our supported primitive types and enums and has optional properties.
      field :obj_param, T.nilable(::OpenApiSDK::Shared::SimpleObject), { 'query_param': { 'field_name': 'objParam', 'style': 'pipeDelimited', 'explode': false } }


      sig { params(arr_param: T.nilable(T::Array[::String]), arr_param_exploded: T.nilable(T::Array[::Integer]), map_param: T.nilable(T::Hash[Symbol, ::String]), obj_param: T.nilable(::OpenApiSDK::Shared::SimpleObject)).void }
      def initialize(arr_param: nil, arr_param_exploded: nil, map_param: nil, obj_param: nil)
        @arr_param = arr_param
        @arr_param_exploded = arr_param_exploded
        @map_param = map_param
        @obj_param = obj_param
      end
    end
  end
end
