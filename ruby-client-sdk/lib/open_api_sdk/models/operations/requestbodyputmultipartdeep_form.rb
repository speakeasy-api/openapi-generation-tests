# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class RequestBodyPutMultipartDeepForm < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :any, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('any') } }

      field :arr, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('arr') } }

      field :bool, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bool') } }

      field :int, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('int') } }

      field :map, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('map') } }

      field :num, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('num') } }

      field :obj, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('obj') } }

      field :str_, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('str') } }


      sig { params(any: ::String, arr: ::String, bool: ::String, int: ::String, map: ::String, num: ::String, obj: ::String, str_: ::String).void }
      def initialize(any: nil, arr: nil, bool: nil, int: nil, map: nil, num: nil, obj: nil, str_: nil)
        @any = any
        @arr = arr
        @bool = bool
        @int = int
        @map = map
        @num = num
        @obj = obj
        @str_ = str_
      end
    end
  end
end
