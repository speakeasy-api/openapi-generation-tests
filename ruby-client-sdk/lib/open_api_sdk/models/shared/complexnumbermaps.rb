# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class ComplexNumberMaps < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :bigint_map, T.nilable(T::Hash[Symbol, ::Integer]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bigintMap') } }

      field :bigint_str_map, T.nilable(T::Hash[Symbol, ::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bigintStrMap') } }

      field :decimal_map, T.nilable(T::Hash[Symbol, ::Float]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('decimalMap') } }

      field :decimal_str_map, T.nilable(T::Hash[Symbol, ::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('decimalStrMap') } }


      sig { params(bigint_map: T.nilable(T::Hash[Symbol, ::Integer]), bigint_str_map: T.nilable(T::Hash[Symbol, ::String]), decimal_map: T.nilable(T::Hash[Symbol, ::Float]), decimal_str_map: T.nilable(T::Hash[Symbol, ::String])).void }
      def initialize(bigint_map: nil, bigint_str_map: nil, decimal_map: nil, decimal_str_map: nil)
        @bigint_map = bigint_map
        @bigint_str_map = bigint_str_map
        @decimal_map = decimal_map
        @decimal_str_map = decimal_str_map
      end
    end
  end
end
