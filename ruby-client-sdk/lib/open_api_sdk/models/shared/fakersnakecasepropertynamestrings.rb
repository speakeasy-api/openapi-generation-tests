# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # A set of strings with snake case fieldnames that lead to relevant examples being generated for them
    class FakerSnakeCasePropertyNameStrings < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :country_code, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('country_code') } }
      # RFC3339 formatted timestamp
      field :created_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }
      # RFC3339 formatted timestamp
      field :expired_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('expired_at') } }
      # RFC3339 formatted timestamp
      field :updated_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('updated_at') } }


      sig { params(country_code: ::String, created_at: ::String, expired_at: ::String, updated_at: ::String).void }
      def initialize(country_code: nil, created_at: nil, expired_at: nil, updated_at: nil)
        @country_code = country_code
        @created_at = created_at
        @expired_at = expired_at
        @updated_at = updated_at
      end
    end
  end
end
