# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class ObjWithZeroValueComplexTypePtrs < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :bigint, T.nilable(::Integer), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bigint') } }

      field :bigint_str, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bigintStr') } }
      # A date property.
      field :date, T.nilable(::Date), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('date'), 'decoder': Utils.date_from_iso_format(true) } }
      # A date-time property.
      field :date_time, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('dateTime'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :decimal, T.nilable(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('decimal') } }


      sig { params(bigint: T.nilable(::Integer), bigint_str: T.nilable(::String), date: T.nilable(::Date), date_time: T.nilable(::DateTime), decimal: T.nilable(::Float)).void }
      def initialize(bigint: nil, bigint_str: nil, date: nil, date_time: nil, decimal: nil)
        @bigint = bigint
        @bigint_str = bigint_str
        @date = date
        @date_time = date_time
        @decimal = decimal
      end
    end
  end
end
