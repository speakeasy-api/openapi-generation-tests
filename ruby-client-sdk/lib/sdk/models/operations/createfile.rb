# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/fileresource'

module OpenApiSDK
  module Operations

    class CreateFileFile < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :content, String, { 'multipart_form': { 'content': true } }

      field :file_name, String, { 'multipart_form': { 'field_name': 'file' } }


      sig { params(content: String, file_name: String).void }
      def initialize(content: nil, file_name: nil)
        @content = content
        @file_name = file_name
      end
    end


    class CreateFileRequestBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :file, T.nilable(Operations::CreateFileFile), { 'multipart_form': { 'file': true } }


      sig { params(file: T.nilable(Operations::CreateFileFile)).void }
      def initialize(file: nil)
        @file = file
      end
    end


    class CreateFileResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # OK
      field :file_resource, T.nilable(Shared::FileResource)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, file_resource: T.nilable(Shared::FileResource)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, file_resource: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @file_resource = file_resource
      end
    end
  end
end
