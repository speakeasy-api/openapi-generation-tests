# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/simpleobject'

module OpenApiSDK
  module Operations

    class FormQueryParamsObjectRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # A simple object that uses all our supported primitive types and enums and has optional properties.
      field :obj_param_exploded, Shared::SimpleObject, { 'query_param': { 'field_name': 'objParamExploded', 'style': 'form', 'explode': true } }
      # A simple object that uses all our supported primitive types and enums and has optional properties.
      field :obj_param, T.nilable(Shared::SimpleObject), { 'query_param': { 'field_name': 'objParam', 'style': 'form', 'explode': false } }


      sig { params(obj_param_exploded: Shared::SimpleObject, obj_param: T.nilable(Shared::SimpleObject)).void }
      def initialize(obj_param_exploded: nil, obj_param: nil)
        @obj_param_exploded = obj_param_exploded
        @obj_param = obj_param
      end
    end


    class FormQueryParamsObjectResArgs < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :any, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('any') } }

      field :bool, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('bool') } }

      field :date, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('date') } }

      field :date_time, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('dateTime') } }

      field :enum, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('enum') } }

      field :float32, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('float32') } }

      field :int, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('int') } }

      field :int32, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('int32') } }

      field :int32_enum, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('int32Enum') } }

      field :int_enum, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('intEnum') } }

      field :num, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('num') } }

      field :obj_param, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('objParam') } }

      field :str_, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('str') } }

      field :bigint, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('bigint') } }

      field :bigint_str, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('bigintStr') } }

      field :bool_opt, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('boolOpt') } }

      field :int_opt_null, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('intOptNull') } }

      field :num_opt_null, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('numOptNull') } }

      field :str_opt, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('strOpt') } }


      sig { params(any: String, bool: String, date: String, date_time: String, enum: String, float32: String, int: String, int32: String, int32_enum: String, int_enum: String, num: String, obj_param: String, str_: String, bigint: T.nilable(String), bigint_str: T.nilable(String), bool_opt: T.nilable(String), int_opt_null: T.nilable(String), num_opt_null: T.nilable(String), str_opt: T.nilable(String)).void }
      def initialize(any: nil, bool: nil, date: nil, date_time: nil, enum: nil, float32: nil, int: nil, int32: nil, int32_enum: nil, int_enum: nil, num: nil, obj_param: nil, str_: nil, bigint: nil, bigint_str: nil, bool_opt: nil, int_opt_null: nil, num_opt_null: nil, str_opt: nil)
        @any = any
        @bool = bool
        @date = date
        @date_time = date_time
        @enum = enum
        @float32 = float32
        @int = int
        @int32 = int32
        @int32_enum = int32_enum
        @int_enum = int_enum
        @num = num
        @obj_param = obj_param
        @str_ = str_
        @bigint = bigint
        @bigint_str = bigint_str
        @bool_opt = bool_opt
        @int_opt_null = int_opt_null
        @num_opt_null = num_opt_null
        @str_opt = str_opt
      end
    end

    # OK
    class FormQueryParamsObjectRes < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :args, Operations::FormQueryParamsObjectResArgs, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('args') } }

      field :url, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('url') } }


      sig { params(args: Operations::FormQueryParamsObjectResArgs, url: String).void }
      def initialize(args: nil, url: nil)
        @args = args
        @url = url
      end
    end


    class FormQueryParamsObjectResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :content_type, String

      field :status_code, Integer

      field :raw_response, T.nilable(Faraday::Response)
      # OK
      field :res, T.nilable(Operations::FormQueryParamsObjectRes)


      sig { params(content_type: String, status_code: Integer, raw_response: T.nilable(Faraday::Response), res: T.nilable(Operations::FormQueryParamsObjectRes)).void }
      def initialize(content_type: nil, status_code: nil, raw_response: nil, res: nil)
        @content_type = content_type
        @status_code = status_code
        @raw_response = raw_response
        @res = res
      end
    end
  end
end
