# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/deepobject'
require_relative '../shared/simpleobject'

module OpenApiSDK
  module Operations

    class JsonQueryParamsObjectRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :deep_obj_param, Shared::DeepObject, { 'query_param': { 'field_name': 'deepObjParam', 'serialization': 'json' } }
      # A simple object that uses all our supported primitive types and enums and has optional properties.
      field :simple_obj_param, Shared::SimpleObject, { 'query_param': { 'field_name': 'simpleObjParam', 'serialization': 'json' } }


      sig { params(deep_obj_param: Shared::DeepObject, simple_obj_param: Shared::SimpleObject).void }
      def initialize(deep_obj_param: nil, simple_obj_param: nil)
        @deep_obj_param = deep_obj_param
        @simple_obj_param = simple_obj_param
      end
    end


    class JsonQueryParamsObjectArgs < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :deep_obj_param, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('deepObjParam') } }

      field :simple_obj_param, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('simpleObjParam') } }


      sig { params(deep_obj_param: String, simple_obj_param: String).void }
      def initialize(deep_obj_param: nil, simple_obj_param: nil)
        @deep_obj_param = deep_obj_param
        @simple_obj_param = simple_obj_param
      end
    end

    # OK
    class JsonQueryParamsObjectRes < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :args, Operations::JsonQueryParamsObjectArgs, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('args') } }

      field :url, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('url') } }


      sig { params(args: Operations::JsonQueryParamsObjectArgs, url: String).void }
      def initialize(args: nil, url: nil)
        @args = args
        @url = url
      end
    end


    class JsonQueryParamsObjectResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # OK
      field :res, T.nilable(Operations::JsonQueryParamsObjectRes)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, res: T.nilable(Operations::JsonQueryParamsObjectRes)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, res: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @res = res
      end
    end
  end
end
