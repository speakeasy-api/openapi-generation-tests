# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/security'

module OpenApiSDK
  module Operations
    MULTIPLE_MIXED_SCHEME_AUTH_SERVERS = [
      'http://localhost:35456'
    ].freeze

    class MultipleMixedSchemeAuthSecurity < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :api_key_auth_new, String, { 'security': { 'scheme': true, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-api-key' } }

      field :basic_auth, Shared::SchemeBasicAuth, { 'security': { 'scheme': true, 'type': 'http', 'sub_type': 'basic' } }


      sig { params(api_key_auth_new: String, basic_auth: Shared::SchemeBasicAuth).void }
      def initialize(api_key_auth_new: nil, basic_auth: nil)
        @api_key_auth_new = api_key_auth_new
        @basic_auth = basic_auth
      end
    end


    class MultipleMixedSchemeAuthResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
      end
    end
  end
end
