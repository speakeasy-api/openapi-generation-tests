# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/simpleobject'

module OpenApiSDK
  module Operations
    # EnumNameOverride - An enum type
    class EnumNameOverride < T::Enum
      enums do
        VALUE1 = new('value1')
        VALUE2 = new('value2')
        VALUE3 = new('value3')
      end
    end



    class NameOverrideGetRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # An enum type
      field :test_enum_query_param, Operations::EnumNameOverride, { 'query_param': { 'field_name': 'enumNameOverride', 'style': 'form', 'explode': true } }

      field :test_query_param, String, { 'query_param': { 'field_name': 'nameOverride', 'style': 'form', 'explode': true } }


      sig { params(test_enum_query_param: Operations::EnumNameOverride, test_query_param: String).void }
      def initialize(test_enum_query_param: nil, test_query_param: nil)
        @test_enum_query_param = test_enum_query_param
        @test_query_param = test_query_param
      end
    end

    # A successful response that contains the simpleObject sent in the request body
    class NameOverrideGetOverriddenResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # A simple object that uses all our supported primitive types and enums and has optional properties.
      # https://docs.speakeasyapi.dev - A link to the external docs.
      field :json, T.nilable(Shared::SimpleObject), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('json') } }


      sig { params(json: T.nilable(Shared::SimpleObject)).void }
      def initialize(json: nil)
        @json = json
      end
    end


    class NameOverrideGetResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # A successful response that contains the simpleObject sent in the request body
      field :overridden_response, T.nilable(Operations::NameOverrideGetOverriddenResponse)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, overridden_response: T.nilable(Operations::NameOverrideGetOverriddenResponse)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, overridden_response: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @overridden_response = overridden_response
      end
    end
  end
end
