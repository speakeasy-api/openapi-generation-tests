# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations
    PAGINATION_LIMIT_OFFSET_PAGE_PARAMS_SERVERS = [
      'http://localhost:35456'
    ].freeze

    class PaginationLimitOffsetPageParamsRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :page, Integer, { 'query_param': { 'field_name': 'page', 'style': 'form', 'explode': true } }


      sig { params(page: Integer).void }
      def initialize(page: nil)
        @page = page
      end
    end

    # OK
    class PaginationLimitOffsetPageParamsRes < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :num_pages, Integer, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('numPages') } }

      field :result_array, T::Array[Integer], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('resultArray') } }


      sig { params(num_pages: Integer, result_array: T::Array[Integer]).void }
      def initialize(num_pages: nil, result_array: nil)
        @num_pages = num_pages
        @result_array = result_array
      end
    end


    class PaginationLimitOffsetPageParamsResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :content_type, String

      field :status_code, Integer

      field :raw_response, T.nilable(Faraday::Response)
      # OK
      field :res, T.nilable(Operations::PaginationLimitOffsetPageParamsRes)


      sig { params(content_type: String, status_code: Integer, raw_response: T.nilable(Faraday::Response), res: T.nilable(Operations::PaginationLimitOffsetPageParamsRes)).void }
      def initialize(content_type: nil, status_code: nil, raw_response: nil, res: nil)
        @content_type = content_type
        @status_code = status_code
        @raw_response = raw_response
        @res = res
      end
    end
  end
end
