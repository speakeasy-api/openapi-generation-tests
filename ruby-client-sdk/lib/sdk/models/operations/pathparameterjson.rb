# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/simpleobject'

module OpenApiSDK
  module Operations

    class PathParameterJsonRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # A simple object that uses all our supported primitive types and enums and has optional properties.
      field :json_obj, Shared::SimpleObject, { 'path_param': { 'field_name': 'jsonObj', 'serialization': 'json' } }


      sig { params(json_obj: Shared::SimpleObject).void }
      def initialize(json_obj: nil)
        @json_obj = json_obj
      end
    end

    # OK
    class PathParameterJsonRes < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :url, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('url') } }


      sig { params(url: String).void }
      def initialize(url: nil)
        @url = url
      end
    end


    class PathParameterJsonResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # OK
      field :res, T.nilable(Operations::PathParameterJsonRes)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, res: T.nilable(Operations::PathParameterJsonRes)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, res: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @res = res
      end
    end
  end
end
