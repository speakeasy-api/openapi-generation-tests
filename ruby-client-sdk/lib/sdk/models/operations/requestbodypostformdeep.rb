# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations

    class Form < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :arr, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('arr') } }

      field :bool, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bool') } }

      field :int, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('int') } }

      field :map, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('map') } }

      field :num, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('num') } }

      field :obj, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('obj') } }

      field :str_, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('str') } }


      sig { params(arr: String, bool: String, int: String, map: String, num: String, obj: String, str_: String).void }
      def initialize(arr: nil, bool: nil, int: nil, map: nil, num: nil, obj: nil, str_: nil)
        @arr = arr
        @bool = bool
        @int = int
        @map = map
        @num = num
        @obj = obj
        @str_ = str_
      end
    end

    # OK
    class RequestBodyPostFormDeepRes < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :form, Operations::Form, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('form') } }


      sig { params(form: Operations::Form).void }
      def initialize(form: nil)
        @form = form
      end
    end


    class RequestBodyPostFormDeepResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # OK
      field :res, T.nilable(Operations::RequestBodyPostFormDeepRes)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, res: T.nilable(Operations::RequestBodyPostFormDeepRes)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, res: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @res = res
      end
    end
  end
end
