# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations

    class RequestBodyPutMultipartSimpleForm < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :any, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('any') } }

      field :bool, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('bool') } }

      field :date, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('date') } }

      field :date_time, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('dateTime') } }

      field :enum, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('enum') } }

      field :float32, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('float32') } }

      field :int, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('int') } }

      field :int32, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('int32') } }

      field :num, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('num') } }

      field :str_, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('str') } }

      field :bool_opt, T.nilable(String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('boolOpt') } }

      field :int_opt_null, T.nilable(String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('intOptNull') } }

      field :num_opt_null, T.nilable(String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('numOptNull') } }

      field :str_opt, T.nilable(String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('strOpt') } }


      sig { params(any: String, bool: String, date: String, date_time: String, enum: String, float32: String, int: String, int32: String, num: String, str_: String, bool_opt: T.nilable(String), int_opt_null: T.nilable(String), num_opt_null: T.nilable(String), str_opt: T.nilable(String)).void }
      def initialize(any: nil, bool: nil, date: nil, date_time: nil, enum: nil, float32: nil, int: nil, int32: nil, num: nil, str_: nil, bool_opt: nil, int_opt_null: nil, num_opt_null: nil, str_opt: nil)
        @any = any
        @bool = bool
        @date = date
        @date_time = date_time
        @enum = enum
        @float32 = float32
        @int = int
        @int32 = int32
        @num = num
        @str_ = str_
        @bool_opt = bool_opt
        @int_opt_null = int_opt_null
        @num_opt_null = num_opt_null
        @str_opt = str_opt
      end
    end


    class RequestBodyPutMultipartSimpleHeaders < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :content_type, String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('Content-Type') } }


      sig { params(content_type: String).void }
      def initialize(content_type: nil)
        @content_type = content_type
      end
    end

    # OK
    class RequestBodyPutMultipartSimpleRes < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :form, Operations::RequestBodyPutMultipartSimpleForm, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('form') } }

      field :headers, Operations::RequestBodyPutMultipartSimpleHeaders, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('headers') } }


      sig { params(form: Operations::RequestBodyPutMultipartSimpleForm, headers: Operations::RequestBodyPutMultipartSimpleHeaders).void }
      def initialize(form: nil, headers: nil)
        @form = form
        @headers = headers
      end
    end


    class RequestBodyPutMultipartSimpleResponse < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # OK
      field :res, T.nilable(Operations::RequestBodyPutMultipartSimpleRes)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, res: T.nilable(Operations::RequestBodyPutMultipartSimpleRes)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, res: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @res = res
      end
    end
  end
end
