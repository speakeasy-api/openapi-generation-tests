# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations

    class SimplePathParameterMapsRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :map_param, T::Hash[Symbol, String], { 'path_param': { 'field_name': 'mapParam', 'style': 'simple', 'explode': false } }

      field :map_param_exploded, T::Hash[Symbol, Integer], { 'path_param': { 'field_name': 'mapParamExploded', 'style': 'simple', 'explode': true } }


      sig { params(map_param: T::Hash[Symbol, String], map_param_exploded: T::Hash[Symbol, Integer]).void }
      def initialize(map_param: nil, map_param_exploded: nil)
        @map_param = map_param
        @map_param_exploded = map_param_exploded
      end
    end

    # OK
    class SimplePathParameterMapsRes < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :url, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('url') } }


      sig { params(url: String).void }
      def initialize(url: nil)
        @url = url
      end
    end


    class SimplePathParameterMapsResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :content_type, String

      field :status_code, Integer

      field :raw_response, T.nilable(Faraday::Response)
      # OK
      field :res, T.nilable(Operations::SimplePathParameterMapsRes)


      sig { params(content_type: String, status_code: Integer, raw_response: T.nilable(Faraday::Response), res: T.nilable(Operations::SimplePathParameterMapsRes)).void }
      def initialize(content_type: nil, status_code: nil, raw_response: nil, res: nil)
        @content_type = content_type
        @status_code = status_code
        @raw_response = raw_response
        @res = res
      end
    end
  end
end
