# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Operations

    class TypedParameterGenerationGetObj < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :bool, T::Boolean, { 'query_param': { 'field_name': 'bool' } }

      field :num, Float, { 'query_param': { 'field_name': 'num' } }

      field :str_, String, { 'query_param': { 'field_name': 'str' } }


      sig { params(bool: T::Boolean, num: Float, str_: String).void }
      def initialize(bool: nil, num: nil, str_: nil)
        @bool = bool
        @num = num
        @str_ = str_
      end
    end


    class TypedParameterGenerationGetRequest < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :bigint, T.nilable(Integer), { 'query_param': { 'field_name': 'bigint', 'style': 'form', 'explode': true } }

      field :date, T.nilable(Date), { 'query_param': { 'field_name': 'date', 'style': 'form', 'explode': true } }

      field :obj, T.nilable(Operations::TypedParameterGenerationGetObj), { 'query_param': { 'field_name': 'obj', 'style': 'form', 'explode': true } }


      sig { params(bigint: T.nilable(Integer), date: T.nilable(Date), obj: T.nilable(Operations::TypedParameterGenerationGetObj)).void }
      def initialize(bigint: nil, date: nil, obj: nil)
        @bigint = bigint
        @date = date
        @obj = obj
      end
    end


    class TypedParameterGenerationGetResponse < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :content_type, String

      field :status_code, Integer

      field :raw_response, T.nilable(Faraday::Response)


      sig { params(content_type: String, status_code: Integer, raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @raw_response = raw_response
      end
    end
  end
end
