# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared

    class HttpBinSimpleJsonObjectSlideshowSlides < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :title, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('title') } }

      field :type, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('type') } }

      field :items, T.nilable(T::Array[String]), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('items') } }


      sig { params(title: String, type: String, items: T.nilable(T::Array[String])).void }
      def initialize(title: nil, type: nil, items: nil)
        @title = title
        @type = type
        @items = items
      end
    end


    class HttpBinSimpleJsonObjectSlideshow < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :author, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('author') } }

      field :date, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('date') } }

      field :slides, T::Array[Shared::HttpBinSimpleJsonObjectSlideshowSlides], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('slides') } }

      field :title, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('title') } }


      sig { params(author: String, date: String, slides: T::Array[Shared::HttpBinSimpleJsonObjectSlideshowSlides], title: String).void }
      def initialize(author: nil, date: nil, slides: nil, title: nil)
        @author = author
        @date = date
        @slides = slides
        @title = title
      end
    end

    # OK
    class HttpBinSimpleJsonObject < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :slideshow, Shared::HttpBinSimpleJsonObjectSlideshow, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('slideshow') } }


      sig { params(slideshow: Shared::HttpBinSimpleJsonObjectSlideshow).void }
      def initialize(slideshow: nil)
        @slideshow = slideshow
      end
    end
  end
end
