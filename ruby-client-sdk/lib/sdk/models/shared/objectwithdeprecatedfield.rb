# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module OpenApiSDK
  module Shared
    # ObjectWithDeprecatedFieldDeprecatedEnum
    # 
    # @deprecated this class will be removed in a future release, please migrate away from it as soon as possible
    class ObjectWithDeprecatedFieldDeprecatedEnum < T::Enum
      enums do
        A = new('a')
        B = new('b')
        C = new('c')
      end
    end


    # @deprecated this class will be removed in a future release, please migrate away from it as soon as possible
    class ObjectWithDeprecatedField < OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # @deprecated this true will be removed in a future release, please migrate away from it as soon as possible
      field :deprecated_enum, T.nilable(Shared::ObjectWithDeprecatedFieldDeprecatedEnum), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('deprecatedEnum'), 'decoder': Utils.enum_from_string(Shared::ObjectWithDeprecatedFieldDeprecatedEnum, true) } }
      # @deprecated this true will be removed in a future release, please migrate away from it as soon as possible. Use new_field instead
      field :deprecated_field, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('deprecatedField') } }

      field :new_field, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('newField') } }


      sig { params(deprecated_enum: T.nilable(Shared::ObjectWithDeprecatedFieldDeprecatedEnum), deprecated_field: T.nilable(String), new_field: T.nilable(String)).void }
      def initialize(deprecated_enum: nil, deprecated_field: nil, new_field: nil)
        @deprecated_enum = deprecated_enum
        @deprecated_field = deprecated_field
        @new_field = new_field
      end
    end
  end
end
