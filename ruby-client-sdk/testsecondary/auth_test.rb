# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# frozen_string_literal: true
# typed: true

require_relative '../lib/openapi'
require 'rack'
module OpenApiSDK
  class TestAuth < Minitest::Test
    def setup
      @sdk = OpenApiSDK::SDK.new
    end

    def test_no_auth
      record_test('auth-hoisted-no-auth-retained')

      res = @sdk.auth.no_auth

      refute_nil(res)
      assert_equal(Rack::Utils.status_code(:ok), res.status_code)

    end

    def test_basic_auth
      record_test('auth-hoisted-basic-auth')

      @sdk.config_security(
        Shared::Security.new(
          username: 'testUser',
          password: 'testPass'
        )
      )

      res = @sdk.auth.basic_auth(
        'testPass',
        'testUser'
      )

      refute_nil(res)
      assert_equal(Rack::Utils.status_code(:ok), res.status_code)
      assert_equal(res.user.authenticated, true)

    end

    def test_multiple_mixed_options_auth
      record_test('auth-hoisted-operation-auth-retained')

      res = @sdk.auth_new.multiple_mixed_options_auth(
        Shared::AuthServiceRequestBody.new(
          basic_auth: Shared::BasicAuth.new(
            username: 'testUser',
            password: 'testPass'
          )
        ),
        Operations::MultipleMixedOptionsAuthSecurity.new(
          basic_auth: Shared::SchemeBasicAuth.new(
            username: 'testUser',
            password: 'testPass'
          )
        )
      )

      refute_nil(res)
    end
  end
end
