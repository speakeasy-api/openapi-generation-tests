// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.


import Foundation

/// Something is a variable for changing the root path
public enum ServerSomething: String, Codable, APIValue {
    case something = "something"
    case somethingElse = "somethingElse"
    case somethingElseAgain = "somethingElseAgain"
}

/// Describes the available servers that can be used when connecting to the API.
///
/// These can be passed to ``Client/use(server:)`` to configure the server that is connected to when making API requests.
///
/// > Note: Some API operations may support further customization of the server that is connected to when making calls to their respective endpoints. See the corresponding documentation for each API operation method to see if this is the case.
public enum GlobalServers: Servers, ServerConvertible {
    /// Supported server value.
    ///
    /// Corresponds to `http://localhost:35123`
    case server1
    /// Supported server value.
    ///
    /// Corresponds to `http://broken`
    case server2
    /// Supported server value with substituted variables
    ///
    /// Corresponds to `http://{hostname}:{port}`
    case server3(hostname: String = "localhost", port: String = "35123")
    /// Supported server value with substituted variables
    ///
    /// Corresponds to `http://localhost:35123/anything/{something}`
    case server4(something: ServerSomething = .something)
    /// Supported server value with substituted variables
    ///
    /// Corresponds to `{protocol}://{hostname}:{port}`
    case server5(hostname: String = "localhost", port: String = "35123", `protocol`: String = "http")

    /// Defines the raw URL strings for each server option.
    ///
    /// > Note: You do not need to use these values directly.
    ///
    /// The available URL strings are defined as:
    /// ```swift
    /// public static let urlStrings = [
    ///     "http://localhost:35123",
    ///     "http://broken",
    ///     "http://{hostname}:{port}",
    ///     "http://localhost:35123/anything/{something}",
    ///     "{protocol}://{hostname}:{port}"
    /// ]
    /// ```
    public static let urlStrings = [
        "http://localhost:35123",
        "http://broken",
        "http://{hostname}:{port}",
        "http://localhost:35123/anything/{something}",
        "{protocol}://{hostname}:{port}"
    ]

    func server() throws -> Server {
        switch self {
        case .server1:
          return try type(of: self).server(at: 0, substituting: nil)
        case .server2:
          return try type(of: self).server(at: 1, substituting: nil)
        case .server3(let hostname, let port):
          return try type(of: self).server(at: 2, substituting: ["hostname": hostname, "port": port])
        case .server4(let something):
          return try type(of: self).server(at: 3, substituting: ["something": something.rawValue])
        case .server5(let hostname, let port, let `protocol`):
          return try type(of: self).server(at: 4, substituting: ["hostname": hostname, "port": port, "protocol": `protocol`])
        }
    }
}
