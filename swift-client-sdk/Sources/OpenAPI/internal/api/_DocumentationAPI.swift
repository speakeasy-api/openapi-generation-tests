// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.


import Foundation

class _DocumentationAPI: DocumentationAPI {
    private let client: Client

    init(client: Client) {
        self.client = client
    }
    
    public func getDocumentationPerLanguage(request: Operations.GetDocumentationPerLanguageRequest) async throws -> Response<Operations.GetDocumentationPerLanguageResponse> {
        return try await client.makeRequest(
            configureRequest: { configuration in
                try configureGetDocumentationPerLanguageRequest(with: configuration, request: request)
            },
            handleResponse: handleGetDocumentationPerLanguageResponse
        )
    }

}

// MARK: - Request Configuration

private func configureGetDocumentationPerLanguageRequest(with configuration: URLRequestConfiguration, request: Operations.GetDocumentationPerLanguageRequest) throws {
    configuration.path = "/docs/per-language-docs"
    configuration.method = .get
    configuration.queryParameterSerializable = request
    configuration.telemetryHeader = .speakeasyUserAgent
}

// MARK: - Response Handlers

private func handleGetDocumentationPerLanguageResponse(response: Client.APIResponse) throws -> Operations.GetDocumentationPerLanguageResponse {
    let httpResponse = response.httpResponse
    
    if httpResponse.statusCode == 200 { 
        return .empty
    }

    return .empty
}

