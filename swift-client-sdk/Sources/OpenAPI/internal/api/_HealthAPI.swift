// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.


import Foundation

class _HealthAPI: HealthAPI {
    private let client: Client

    init(client: Client) {
        self.client = client
    }
    
    public func check(server: HealthServers.Check?) async throws -> Response<Operations.CheckResponse> {
        return try await client.makeRequest(
            with: try server?.server() ?? HealthServers.Check.default(),
            configureRequest: { configuration in
                try configureCheckRequest(with: configuration)
            },
            handleResponse: handleCheckResponse
        )
    }

}

// MARK: - Request Configuration

private func configureCheckRequest(with configuration: URLRequestConfiguration) throws {
    configuration.path = "/ping"
    configuration.method = .get
    configuration.telemetryHeader = .speakeasyUserAgent
}

// MARK: - Response Handlers

private func handleCheckResponse(response: Client.APIResponse) throws -> Operations.CheckResponse {
    let httpResponse = response.httpResponse
    
    if httpResponse.statusCode == 200 { 
        return .empty
    }

    return .empty
}

