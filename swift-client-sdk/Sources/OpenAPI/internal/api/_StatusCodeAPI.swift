// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.


import Foundation

class _StatusCodeAPI: StatusCodeAPI {
    private let client: Client

    init(client: Client) {
        self.client = client
    }
    
    public func statusCode2XX() async throws -> Response<Operations.StatusCode2XXResponse> {
        return try await client.makeRequest(
            configureRequest: { configuration in
                try configureStatusCode2XXRequest(with: configuration)
            },
            handleResponse: handleStatusCode2XXResponse
        )
    }
    
    public func statusCode4XX() async throws -> Response<Operations.StatusCode4XXResponse> {
        return try await client.makeRequest(
            configureRequest: { configuration in
                try configureStatusCode4XXRequest(with: configuration)
            },
            handleResponse: handleStatusCode4XXResponse
        )
    }
    
    public func statusCode5XX() async throws -> Response<Operations.StatusCode5XXResponse> {
        return try await client.makeRequest(
            configureRequest: { configuration in
                try configureStatusCode5XXRequest(with: configuration)
            },
            handleResponse: handleStatusCode5XXResponse
        )
    }
    
    public func statusCodeDefault() async throws -> Response<Operations.StatusCodeDefaultResponse> {
        return try await client.makeRequest(
            configureRequest: { configuration in
                try configureStatusCodeDefaultRequest(with: configuration)
            },
            handleResponse: handleStatusCodeDefaultResponse
        )
    }

}

// MARK: - Request Configuration

private func configureStatusCode2XXRequest(with configuration: URLRequestConfiguration) throws {
    configuration.path = "/statusCode/2XX"
    configuration.method = .get
    configuration.telemetryHeader = .speakeasyUserAgent
}

private func configureStatusCode4XXRequest(with configuration: URLRequestConfiguration) throws {
    configuration.path = "/statusCode/4XX"
    configuration.method = .get
    configuration.telemetryHeader = .speakeasyUserAgent
}

private func configureStatusCode5XXRequest(with configuration: URLRequestConfiguration) throws {
    configuration.path = "/statusCode/5XX"
    configuration.method = .get
    configuration.telemetryHeader = .speakeasyUserAgent
}

private func configureStatusCodeDefaultRequest(with configuration: URLRequestConfiguration) throws {
    configuration.path = "/statusCode/default"
    configuration.method = .get
    configuration.telemetryHeader = .speakeasyUserAgent
}

// MARK: - Response Handlers

private func handleStatusCode2XXResponse(response: Client.APIResponse) throws -> Operations.StatusCode2XXResponse {
    let httpResponse = response.httpResponse
    
    if httpResponse.statusCode >= 200 && httpResponse.statusCode < 300 { 
        return .empty
    }

    return .empty
}

private func handleStatusCode4XXResponse(response: Client.APIResponse) throws -> Operations.StatusCode4XXResponse {
    let httpResponse = response.httpResponse
    
    if httpResponse.statusCode >= 200 && httpResponse.statusCode < 300 || httpResponse.statusCode >= 400 && httpResponse.statusCode < 500 { 
        return .empty
    }

    return .empty
}

private func handleStatusCode5XXResponse(response: Client.APIResponse) throws -> Operations.StatusCode5XXResponse {
    let httpResponse = response.httpResponse
    
    if httpResponse.statusCode >= 200 && httpResponse.statusCode < 300 || httpResponse.statusCode >= 500 && httpResponse.statusCode < 600 { 
        return .empty
    }

    return .empty
}

private func handleStatusCodeDefaultResponse(response: Client.APIResponse) throws -> Operations.StatusCodeDefaultResponse {
    let httpResponse = response.httpResponse
    
    if true {
        return .empty
    }

    return .empty
}

