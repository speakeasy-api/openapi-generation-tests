// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.


import Foundation

extension Operations.PathParameterJsonRequest: Serializable {
    func serialize(with format: SerializableFormat) throws -> String {
        switch format {
        case .path:
            return try serializePathParameterSerializable(self, with: format)
        case .query, .header, .multipart, .form:
            throw SerializationError.invalidSerializationParameter(type: "Operations.PathParameterJsonRequest", format: format.formatDescription)
        }
    }
}

extension Operations.PathParameterJsonRequest: PathParameterSerializable {
    func serializedPathParameters(formatOverride: SerializableFormat?) throws -> [String: String] {
        return [
            "jsonObj": try serializeEncodable(jsonObj),
        ].compactMapValues { $0 }
    }
}
