// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public enum Enums {
        case array([Shared.Enum])
        case map([String: Shared.Enum])
    }
}

extension Operations.Enums: Codable {
    public init(from decoder: Decoder) throws {
        if let value = try? [Shared.Enum](from: decoder) {
            self = .array(value)
        } else if let value = try? [String: Shared.Enum](from: decoder) {
            self = .map(value)
        } else {
            throw OpenAPIError.failedToHandleResponse(.failedToDecodeResponse)
        }
    }

    public func encode(to encoder: Encoder) throws {
        switch self {
        case .array(let value):
            try value.encode(to: encoder)
        case .map(let value):
            try value.encode(to: encoder)
        }
    }
}

