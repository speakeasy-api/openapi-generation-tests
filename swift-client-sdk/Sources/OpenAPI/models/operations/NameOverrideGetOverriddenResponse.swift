// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A successful response that contains the simpleObject sent in the request body
    public struct NameOverrideGetOverriddenResponse {
        public let deepOverriddenAllOf: Operations.DeepOverriddenAllOf?
        /// A simple object that uses all our supported primitive types and enums and has optional properties.
        public let json: Shared.SimpleObject?
        public let overriddenAllOf: Operations.OverriddenAllOf?
        public let overriddenNormal: Operations.OverriddenNormal?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter json: A simple object that uses all our supported primitive types and enums and has optional properties.
        ///
        public init(deepOverriddenAllOf: Operations.DeepOverriddenAllOf? = nil, json: Shared.SimpleObject? = nil, overriddenAllOf: Operations.OverriddenAllOf? = nil, overriddenNormal: Operations.OverriddenNormal? = nil) {
            self.deepOverriddenAllOf = deepOverriddenAllOf
            self.json = json
            self.overriddenAllOf = overriddenAllOf
            self.overriddenNormal = overriddenNormal
        }
    }
}

extension Operations.NameOverrideGetOverriddenResponse: Codable {
    enum CodingKeys: String, CodingKey {
        case deepOverriddenAllOf = "deepAllOf"
        case json
        case overriddenAllOf = "allOf"
        case overriddenNormal = "normal"
    }
}

