// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public enum NullableOneOfSchemaPostResJson {
        case typedObject1(Shared.TypedObject1)
        case typedObject2(Shared.TypedObject2)
    }
}

extension Operations.NullableOneOfSchemaPostResJson: Codable {
    public init(from decoder: Decoder) throws {
        if let value = try? Shared.TypedObject1(from: decoder) {
            self = .typedObject1(value)
        } else if let value = try? Shared.TypedObject2(from: decoder) {
            self = .typedObject2(value)
        } else {
            throw OpenAPIError.failedToHandleResponse(.failedToDecodeResponse)
        }
    }

    public func encode(to encoder: Encoder) throws {
        switch self {
        case .typedObject1(let value):
            try value.encode(to: encoder)
        case .typedObject2(let value):
            try value.encode(to: encoder)
        }
    }
}

