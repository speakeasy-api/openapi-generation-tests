// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A request model
    public struct RequestBodyPostComplexNumberTypesRequest: APIValue {
        public let complexNumberTypes: Shared.ComplexNumberTypes
        public let pathBigInt: Int
        public let pathBigIntStr: String
        @DecimalSerialized
        public private(set) var pathDecimal: Double
        public let pathDecimalStr: String
        public let queryBigInt: Int
        public let queryBigIntStr: String
        @DecimalSerialized
        public private(set) var queryDecimal: Double
        public let queryDecimalStr: String

        /// Creates a request model with the specified parameters
        ///
        ///
        public init(complexNumberTypes: Shared.ComplexNumberTypes, pathBigInt: Int, pathBigIntStr: String, pathDecimal: Double, pathDecimalStr: String, queryBigInt: Int, queryBigIntStr: String, queryDecimal: Double, queryDecimalStr: String) {
            self.complexNumberTypes = complexNumberTypes
            self.pathBigInt = pathBigInt
            self.pathBigIntStr = pathBigIntStr
            self._pathDecimal = DecimalSerialized<Double>(wrappedValue: pathDecimal)
            self.pathDecimalStr = pathDecimalStr
            self.queryBigInt = queryBigInt
            self.queryBigIntStr = queryBigIntStr
            self._queryDecimal = DecimalSerialized<Double>(wrappedValue: queryDecimal)
            self.queryDecimalStr = queryDecimalStr
        }
    }
}
extension Operations.RequestBodyPostComplexNumberTypesRequest {
    var pathDecimalWrapper: DecimalSerialized<Double> {
        return _pathDecimal
    }
    var queryDecimalWrapper: DecimalSerialized<Double> {
        return _queryDecimal
    }
}
