// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// Internal Server Error
    public enum UnionErrorsGetResponseBody {
        case errorType1(Shared.ErrorType1)
        case errorType2(Shared.ErrorType2)
    }
}

extension Operations.UnionErrorsGetResponseBody: Codable {
    public init(from decoder: Decoder) throws {
        if let value = try? Shared.ErrorType1(from: decoder) {
            self = .errorType1(value)
        } else if let value = try? Shared.ErrorType2(from: decoder) {
            self = .errorType2(value)
        } else {
            throw OpenAPIError.failedToHandleResponse(.failedToDecodeResponse)
        }
    }

    public func encode(to encoder: Encoder) throws {
        switch self {
        case .errorType1(let value):
            try value.encode(to: encoder)
        case .errorType2(let value):
            try value.encode(to: encoder)
        }
    }
}

