// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public enum UnionNestedEnumsFormRequestBody {
        case nestedEnumArray(Shared.NestedEnumArray)
        case nestedEnumMap(Shared.NestedEnumMap)
    }}

extension Operations.UnionNestedEnumsFormRequestBody: Codable {
    public init(from decoder: Decoder) throws {
        if let value = try? Shared.NestedEnumArray(from: decoder) {
            self = .nestedEnumArray(value)
        } else if let value = try? Shared.NestedEnumMap(from: decoder) {
            self = .nestedEnumMap(value)
        } else {
            throw OpenAPIError.failedToHandleResponse(.failedToDecodeResponse)
        }
    }

    public func encode(to encoder: Encoder) throws {
        switch self {
        case .nestedEnumArray(let value):
            try value.encode(to: encoder)
        case .nestedEnumMap(let value):
            try value.encode(to: encoder)
        }
    }
}

