// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct UsageExamplePostJson {
        /// A set of strings with camel case fieldnames that lead to relevant examples being generated for them
        public let fakerCamelCasePropertyNameStrings: Shared.FakerCamelCasePropertyNameStrings
        /// A set of strings with format values that lead to relevant examples being generated for them
        public let fakerFormattedStrings: Shared.FakerFormattedStrings
        /// A set of strings with kebob case fieldnames that lead to relevant examples being generated for them
        public let fakerKebobCasePropertyNameStrings: Shared.FakerKebobCasePropertyNameStrings
        /// A set of strings with pascal case fieldnames that lead to relevant examples being generated for them
        public let fakerPascalCasePropertyNameStrings: Shared.FakerPascalCasePropertyNameStrings
        /// A set of strings with snake case fieldnames that lead to relevant examples being generated for them
        public let fakerSnakeCasePropertyNameStrings: Shared.FakerSnakeCasePropertyNameStrings
        /// A simple object that uses all our supported primitive types and enums and has optional properties.
        public let simpleObject: Shared.SimpleObject

        /// Creates an object with the specified parameters
        ///
        /// - Parameter fakerCamelCasePropertyNameStrings: A set of strings with camel case fieldnames that lead to relevant examples being generated for them
        /// - Parameter fakerFormattedStrings: A set of strings with format values that lead to relevant examples being generated for them
        /// - Parameter fakerKebobCasePropertyNameStrings: A set of strings with kebob case fieldnames that lead to relevant examples being generated for them
        /// - Parameter fakerPascalCasePropertyNameStrings: A set of strings with pascal case fieldnames that lead to relevant examples being generated for them
        /// - Parameter fakerSnakeCasePropertyNameStrings: A set of strings with snake case fieldnames that lead to relevant examples being generated for them
        /// - Parameter simpleObject: A simple object that uses all our supported primitive types and enums and has optional properties.
        ///
        public init(fakerCamelCasePropertyNameStrings: Shared.FakerCamelCasePropertyNameStrings, fakerFormattedStrings: Shared.FakerFormattedStrings, fakerKebobCasePropertyNameStrings: Shared.FakerKebobCasePropertyNameStrings, fakerPascalCasePropertyNameStrings: Shared.FakerPascalCasePropertyNameStrings, fakerSnakeCasePropertyNameStrings: Shared.FakerSnakeCasePropertyNameStrings, simpleObject: Shared.SimpleObject) {
            self.fakerCamelCasePropertyNameStrings = fakerCamelCasePropertyNameStrings
            self.fakerFormattedStrings = fakerFormattedStrings
            self.fakerKebobCasePropertyNameStrings = fakerKebobCasePropertyNameStrings
            self.fakerPascalCasePropertyNameStrings = fakerPascalCasePropertyNameStrings
            self.fakerSnakeCasePropertyNameStrings = fakerSnakeCasePropertyNameStrings
            self.simpleObject = simpleObject
        }
    }}

extension Operations.UsageExamplePostJson: Codable {
    enum CodingKeys: String, CodingKey {
        case fakerCamelCasePropertyNameStrings
        case fakerFormattedStrings
        case fakerKebobCasePropertyNameStrings
        case fakerPascalCasePropertyNameStrings
        case fakerSnakeCasePropertyNameStrings
        case simpleObject
    }
}

