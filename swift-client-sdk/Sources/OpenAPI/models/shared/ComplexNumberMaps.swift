// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct ComplexNumberMaps {
        public let bigintMap: [String: Int]?
        public let bigintStrMap: [String: String]?
        public let decimalMap: [String: Double]?
        public let decimalStrMap: [String: String]?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(bigintMap: [String: Int]? = nil, bigintStrMap: [String: String]? = nil, decimalMap: [String: Double]? = nil, decimalStrMap: [String: String]? = nil) {
            self.bigintMap = bigintMap
            self.bigintStrMap = bigintStrMap
            self.decimalMap = decimalMap
            self.decimalStrMap = decimalStrMap
        }
    }
}

extension Shared.ComplexNumberMaps: Codable {
    enum CodingKeys: String, CodingKey {
        case bigintMap
        case bigintStrMap
        case decimalMap
        case decimalStrMap
    }
}

