// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct DeprecatedFieldInObject {

        @available(*, deprecated, message: "This enum is deprecated")
        public let deprecatedEnum: Shared.DeprecatedFieldInObjectDeprecatedEnum?

        @available(*, deprecated, renamed: "newField", message: "This will be removed in a future release, please migrate away from it as soon as possible")
        public let deprecatedField: String?
        public let newField: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter deprecatedEnum: 
        /// - Parameter deprecatedField: 
        ///
        @available(*, deprecated, message: "This initializer uses deprecated fields and will be removed in a future version.")
        public init(deprecatedEnum: Shared.DeprecatedFieldInObjectDeprecatedEnum? = nil, deprecatedField: String? = nil, newField: String? = nil) {
            self.deprecatedEnum = deprecatedEnum
            self.deprecatedField = deprecatedField
            self.newField = newField
        }
    }
}

extension Shared.DeprecatedFieldInObject: Codable {
    enum CodingKeys: String, CodingKey {
        case deprecatedEnum
        case deprecatedField
        case newField
    }
}

