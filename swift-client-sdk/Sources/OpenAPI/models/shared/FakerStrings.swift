// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A set of strings with fieldnames that lead to relevant examples being generated for them
    public struct FakerStrings {
        public let account: String?
        public let address: String?
        public let amount: String?
        public let avatar: String?
        public let city: String?
        public let color: String?
        public let comment: String?
        public let company: String?
        public let country: String?
        public let countryCode: String?
        public let currency: String?
        public let datatype: String?
        public let `default`: String?
        public let description: String?
        public let directory: String?
        public let domainName: String?
        public let emailAddr: String?
        public let `extension`: String?
        public let filename: String?
        public let filepath: String?
        public let filetype: String?
        public let firstName: String?
        public let fullName: String?
        public let gender: String?
        public let iban: String?
        public let id: String?
        public let iPv4: String?
        public let iPv6: String?
        public let job: String?
        public let json: String?
        public let key: String?
        public let lastName: String?
        public let latitude: String?
        public let locale: String?
        public let longitude: String?
        public let mac: String?
        public let manufacturer: String?
        public let material: String?
        public let middleName: String?
        public let model: String?
        public let password: String?
        public let phone: String?
        public let pin: String?
        public let postalCode: String?
        public let price: String?
        public let product: String?
        public let sex: String?
        public let street: String?
        public let timezone: String?
        public let unit: String?
        public let url: String?
        public let username: String?
        public let uuid: String?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(account: String? = nil, address: String? = nil, amount: String? = nil, avatar: String? = nil, city: String? = nil, color: String? = nil, comment: String? = nil, company: String? = nil, country: String? = nil, countryCode: String? = nil, currency: String? = nil, datatype: String? = nil, `default`: String? = nil, description: String? = nil, directory: String? = nil, domainName: String? = nil, emailAddr: String? = nil, `extension`: String? = nil, filename: String? = nil, filepath: String? = nil, filetype: String? = nil, firstName: String? = nil, fullName: String? = nil, gender: String? = nil, iban: String? = nil, id: String? = nil, iPv4: String? = nil, iPv6: String? = nil, job: String? = nil, json: String? = nil, key: String? = nil, lastName: String? = nil, latitude: String? = nil, locale: String? = nil, longitude: String? = nil, mac: String? = nil, manufacturer: String? = nil, material: String? = nil, middleName: String? = nil, model: String? = nil, password: String? = nil, phone: String? = nil, pin: String? = nil, postalCode: String? = nil, price: String? = nil, product: String? = nil, sex: String? = nil, street: String? = nil, timezone: String? = nil, unit: String? = nil, url: String? = nil, username: String? = nil, uuid: String? = nil) {
            self.account = account
            self.address = address
            self.amount = amount
            self.avatar = avatar
            self.city = city
            self.color = color
            self.comment = comment
            self.company = company
            self.country = country
            self.countryCode = countryCode
            self.currency = currency
            self.datatype = datatype
            self.`default` = `default`
            self.description = description
            self.directory = directory
            self.domainName = domainName
            self.emailAddr = emailAddr
            self.`extension` = `extension`
            self.filename = filename
            self.filepath = filepath
            self.filetype = filetype
            self.firstName = firstName
            self.fullName = fullName
            self.gender = gender
            self.iban = iban
            self.id = id
            self.iPv4 = iPv4
            self.iPv6 = iPv6
            self.job = job
            self.json = json
            self.key = key
            self.lastName = lastName
            self.latitude = latitude
            self.locale = locale
            self.longitude = longitude
            self.mac = mac
            self.manufacturer = manufacturer
            self.material = material
            self.middleName = middleName
            self.model = model
            self.password = password
            self.phone = phone
            self.pin = pin
            self.postalCode = postalCode
            self.price = price
            self.product = product
            self.sex = sex
            self.street = street
            self.timezone = timezone
            self.unit = unit
            self.url = url
            self.username = username
            self.uuid = uuid
        }
    }
}

extension Shared.FakerStrings: Codable {
    enum CodingKeys: String, CodingKey {
        case account
        case address
        case amount
        case avatar
        case city = "City"
        case color
        case comment
        case company
        case country
        case countryCode = "country_code"
        case currency
        case datatype
        case `default` = "default"
        case description
        case directory
        case domainName
        case emailAddr
        case `extension` = "extension"
        case filename
        case filepath
        case filetype
        case firstName
        case fullName
        case gender
        case iban = "IBAN"
        case id = "ID"
        case iPv4 = "IPv4"
        case iPv6 = "IPv6"
        case job
        case json
        case key
        case lastName
        case latitude
        case locale
        case longitude
        case mac
        case manufacturer
        case material
        case middleName
        case model
        case password
        case phone
        case pin
        case postalCode = "postal-code"
        case price
        case product
        case sex
        case street
        case timezone
        case unit
        case url
        case username
        case uuid
    }
}

