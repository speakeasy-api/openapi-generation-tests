// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public enum FigmaSubcanvasNode {
        case figmaBooleanOperationNode(Shared.FigmaBooleanOperationNode)
        case figmaComponentNode(Shared.FigmaComponentNode)
    }}

extension Shared.FigmaSubcanvasNode: Codable {
    public init(from decoder: Decoder) throws {
        if let value = try? Shared.FigmaBooleanOperationNode(from: decoder) {
            self = .figmaBooleanOperationNode(value)
        } else if let value = try? Shared.FigmaComponentNode(from: decoder) {
            self = .figmaComponentNode(value)
        } else {
            throw OpenAPIError.failedToHandleResponse(.failedToDecodeResponse)
        }
    }

    public func encode(to encoder: Encoder) throws {
        switch self {
        case .figmaBooleanOperationNode(let value):
            try value.encode(to: encoder)
        case .figmaComponentNode(let value):
            try value.encode(to: encoder)
        }
    }
}

