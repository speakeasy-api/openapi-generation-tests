// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Shared {
    /// A model object
    public struct NullableOneOfTypeInObject {
        public let nullableOneOfOne: Bool
        public let nullableOneOfTwo: Shared.NullableOneOfTypeInObjectNullableOneOfTwo
        public let oneOfOne: Bool

        /// Creates an object with the specified parameters
        ///
        ///
        public init(nullableOneOfOne: Bool, nullableOneOfTwo: Shared.NullableOneOfTypeInObjectNullableOneOfTwo, oneOfOne: Bool) {
            self.nullableOneOfOne = nullableOneOfOne
            self.nullableOneOfTwo = nullableOneOfTwo
            self.oneOfOne = oneOfOne
        }
    }
}

extension Shared.NullableOneOfTypeInObject: Codable {
    enum CodingKeys: String, CodingKey {
        case nullableOneOfOne = "NullableOneOfOne"
        case nullableOneOfTwo = "NullableOneOfTwo"
        case oneOfOne = "OneOfOne"
    }
}

