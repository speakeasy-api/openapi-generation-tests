// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

enum TestRecordingError: Swift.Error {
    case dataConversion
}

func resetTestRecords() throws {
    try FileManager.default.removeItem(at: testRecordFileURL())
}

func recordTest(named name: String) throws {
    guard let line = "\(name)\n".data(using: .utf8) else {
        throw TestRecordingError.dataConversion
    }

    let fileURL = testRecordFileURL()

    if FileManager.default.fileExists(atPath: fileURL.path) {
        let fileHandle = try FileHandle(forWritingTo: fileURL)
        if #available(iOS 13.4, *) {
            try fileHandle.seekToEnd()
            try fileHandle.write(contentsOf: line)
        } else {
            fileHandle.seekToEndOfFile()
            fileHandle.write(line)
        }
        try fileHandle.close()
    } else {
        try line.write(to: fileURL)
    }
}

fileprivate func testRecordFileURL() -> URL {
    return URL(fileURLWithPath: #filePath)
        .deletingLastPathComponent()
        .deletingLastPathComponent()
        .deletingLastPathComponent()
        .deletingLastPathComponent()
        .appendingPathComponent("test-swift-record.txt")
}

