/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { createReadStream } from "fs";
import { readFile } from "fs/promises";
import { Readable } from "stream";

export function filesToStream(filePath: string): ReadableStream<Uint8Array> {
  return Readable.toWeb(
    createReadStream(filePath),
  ) as ReadableStream<Uint8Array>;
}

export async function filesToByteArray(filePath: string): Promise<ArrayBuffer> {
  const buffer = await readFile(filePath);

  const arrayBuffer = new ArrayBuffer(buffer.length);
  const view = new Uint8Array(arrayBuffer);
  for (let i = 0; i < buffer.length; ++i) {
    view[i] = buffer[i] ?? 0;
  }
  return arrayBuffer;
}

export async function filesToString(filePath: string): Promise<string> {
  return readFile(filePath, "utf8");
}
