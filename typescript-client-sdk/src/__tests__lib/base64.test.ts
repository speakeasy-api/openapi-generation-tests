/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";

import {
  bytesToBase64,
  bytesFromBase64,
  stringToBase64,
  stringFromBase64,
  stringToBytes,
  stringFromBytes,
} from "../../lib/base64.js";

test("bytes can be converted to base64 and restored", () => {
  const cases: number[][] = [[], [9], [8, 2, 5], [7, 2, 3, 6]];

  cases.forEach((input) => {
    const rountrip = bytesFromBase64(bytesToBase64(new Uint8Array(input)));
    expect([...rountrip]).toEqual([...input]);
  });
});

test("strings can be converted to base64 and restored", () => {
  const cases: string[] = ["", "test", "hello world 🍔"];

  cases.forEach((input) => {
    const rountrip = stringFromBase64(stringToBase64(input));
    expect([...rountrip]).toEqual([...input]);
  });
});

test("strings can be converted to bytes and restored", () => {
  const cases: string[] = ["", "test", "hello world 🍔"];

  cases.forEach((input) => {
    const rountrip = stringFromBytes(stringToBytes(input));
    expect([...rountrip]).toEqual([...input]);
  });
});
