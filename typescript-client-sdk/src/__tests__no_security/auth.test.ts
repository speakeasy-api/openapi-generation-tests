/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NoAuthResponse } from "../sdk/models/operations";
import { SDKError } from "../sdk/models/errors";
import { expect, test } from "vitest";

import { SDK } from "..";
import { recordTest } from "./common_helpers";

test("Test No Auth", async () => {
  recordTest("auth-no-auth");

  const sdk = new SDK({});

  const res: NoAuthResponse = await sdk.auth.noAuth();

  expect(res.httpMeta.response.status).toBe(200);
});

test("Test API Key Auth Global", async () => {
  recordTest("auth-api-key-auth-global");

  const sdk = new SDK();

  try {
    await sdk.auth.apiKeyAuthGlobal();

    expect.unreachable("Unexpected API response: Status 401");
  } catch (e) {
    expect(e).toBeInstanceOf(SDKError);

    const sdkErr = e as SDKError;
    expect(sdkErr.httpMeta.response.status).toBe(401);
  }
});
