/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Color, HeroWidth, Icon } from "../sdk/models/shared/theme.js";
import { expect, test } from "vitest";

import { SDK } from "../index.js";
import { recordTest } from "./common_helpers.js";

test("Open Enums Round Trip", async () => {
  recordTest("open-enums-round-trip-string-union");

  expect(Object.values(Icon)).toContain("tick");
  expect(Object.values(Color)).not.toContain("purple");
  expect(Object.values(HeroWidth)).not.toContain(2160);

  const s = new SDK();
  let result = await s.openEnums.openEnumsPostUnrecognized({
    color: "purple",
    icon: "tick",
    heroWidth: 2160,
  });

  const theme = result.themeResponse?.json;
  if (!theme) {
    expect.fail("Expected result.themeResponse?.json to be set");
  }
  expect(theme).toEqual({
    color: "purple",
    icon: "tick",
    heroWidth: 2160,
  });

  result = await s.openEnums.openEnumsPostUnrecognized(theme);
  expect(theme, "expected unrecognized enum values to roundtrip").toEqual({
    color: "purple",
    icon: "tick",
    heroWidth: 2160,
  });
});
