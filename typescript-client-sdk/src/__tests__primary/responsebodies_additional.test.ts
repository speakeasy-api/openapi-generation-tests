/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { consumeStream, recordTest } from "./common_helpers";
import { expect, test } from "vitest";

import { SDK } from "..";

test("Response Body Bytes Get", async () => {
  recordTest("response-bodies-bytes-get");

  const s = new SDK({});

  const res = await s.responseBodies.responseBodyBytesGet();

  expect(res.httpMeta.response.status).toBe(200);
  if (res.bytes == null) {
    expect.unreachable("expected stream to be defined");
  }

  const bytes = await consumeStream(res.bytes);
  expect(bytes).toHaveLength(100);
});

test("Response Body Empty With Headers", async () => {
  recordTest("response-bodies-empty-with-headers");

  const s = new SDK();

  const res = await s.responseBodies.responseBodyEmptyWithHeaders(1.1, "hello");

  expect(res.httpMeta.response.status).toBe(200);
  expect(res.headers).toHaveProperty("x-string-header", ["hello"]);
  expect(res.headers).toHaveProperty("x-number-header", ["1.1"]);
});
