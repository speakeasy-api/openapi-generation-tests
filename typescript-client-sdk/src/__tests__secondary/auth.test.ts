/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { expect, test } from "vitest";

import { SDK } from "../index.js";
import { BasicAuthUser } from "../sdk/models/operations/basicauth.js";

import { recordTest } from "./common_helpers.js";

test("Test No Auth", async () => {
  recordTest("auth-hoisted-no-auth-retained");

  const sdk = new SDK({});

  await sdk.auth.noAuth();
});

test("Test Basic Auth", async () => {
  recordTest("auth-hoisted-basic-auth");

  const sdk = new SDK({
    security: {
      username: "testUser",
      password: "testPass",
    },
  });

  const res: BasicAuthUser = await sdk.auth.basicAuth("testPass", "testUser");

  expect(res?.authenticated).toBe(true);
});

test("Test Multiple Mixed Options Auth", async () => {
  recordTest("auth-hoisted-operation-auth-retained");

  const sdk = new SDK();

  await sdk.authNew.multipleMixedOptionsAuth(
    {
      basicAuth: {
        username: "testUser",
        password: "testPass",
      },
    },
    {
      basicAuth: {
        username: "testUser",
        password: "testPass",
      },
    },
  );
});
