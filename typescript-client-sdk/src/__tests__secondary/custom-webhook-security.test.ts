/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { SDK } from "../index.js";
import { recordTest } from "./common_helpers.js";
import { createSimpleObject } from "./secondary_helpers.js";
import { WebhookRequestCreatedType } from "./../sdk/models/shared/webhookrequestcreated";
import { HTTPClient } from "../lib/http.js";

const consumerURL = "http://localhost:35123/example-consumer-endpoint/";
const secret = "secret";

test("Test Webhooks Send Custom Security", async () => {
  recordTest("webhooks-send-custom-security");

  let req: Request | undefined;
  const httpClient = new HTTPClient().addHook("beforeRequest", (request) => {
    req = request.clone();
    return request;
  });

  const sdk = new SDK({ httpClient });

  const payload = {
    data: createSimpleObject(),
    type: WebhookRequestCreatedType.WebhookCreated,
  };

  try {
    await sdk.webhooks.sendWebhookUserCreated(
      { url: consumerURL, secret },
      payload,
    );
  } catch (e: any) {
    // We're asserting it was able to send the request - ie the request data was valid
    expect(e.statusCode).toBe(404);
  }

  if (!req) throw new Error("No request has been made");
  expect(req.url).toBe(consumerURL);
  expect(req.method).toBe("POST");
  const body = JSON.parse(new TextDecoder().decode(await req?.arrayBuffer()));
  expect(body.type).toEqual(payload.type);
  expect(body.data.str).toEqual(payload.data.str);
  expect(req.headers.get("X-Signature")).toBe(
    "AYkwql5cQI4Gb07HK4o8uLo1qNthUzSxDD0Acq6Iznk=",
  );
});

test("Test Webhooks Consume Custom Security", async () => {
  recordTest("webhooks-consume-custom-security");

  const sdk = new SDK({});

  const request = new Request(consumerURL, {
    method: "POST",
    body: `{"data":{"bool":true,"date":"2020-01-01","dateTime":"2020-01-01T00:00:00.001Z","enum":"one","float32":1.1,"int":1,"int32":1,"int32Enum":55,"intEnum":2,"num":1.1,"str":"test","any":"any","boolOpt":true,"strOpt":"testOptional"},"type":"webhook.created"}`,
    headers: { "X-Signature": "AYkwql5cQI4Gb07HK4o8uLo1qNthUzSxDD0Acq6Iznk=" },
  });

  const res = await sdk.validateWebhook({
    request: request,
    secret,
  });

  expect(res).toBeDefined();
  expect(res.type).toBe("webhook.created");
});
