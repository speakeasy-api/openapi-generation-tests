/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";

import { SDK } from "../index.js";
import { recordTest } from "./common_helpers.js";
import { createSimpleObject } from "./secondary_helpers.js";
import { SDKHooks } from "../hooks/hooks.js";
import { WebhookRequestCreatedType } from "./../sdk/models/shared/webhookrequestcreated";

const consumerURL = "http://localhost:35123/example-consumer-endpoint";
const secret = "secret";

test("Test Webhooks Custom Security", async () => {
  recordTest("webhooks-custom-security");

  const hooks = new SDKHooks();

  let request!: Request;

  hooks.registerBeforeRequestHook({
    beforeRequest(_, req) {
      request = req.clone();
      return req;
    },
  });

  const sdk = new SDK({ hooks: hooks } as any);

  const payload = {
    data: createSimpleObject(),
    type: WebhookRequestCreatedType.WebhookCreated,
  };

  try {
    await sdk.webhooks.sendWebhookUserCreated(
      { url: consumerURL, secret },
      payload,
    );
  } catch (e: any) {
    // We're asserting it was able to send the request - ie the request data was valid
    expect(e.statusCode).toBe(404);
  }

  const res2 = await sdk.validateWebhook({
    request,
    secret,
  });

  expect(res2).toBeDefined();
});
