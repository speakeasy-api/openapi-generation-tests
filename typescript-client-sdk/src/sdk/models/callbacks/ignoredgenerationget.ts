/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody = {
  someProp?: string | undefined;
};

export type IgnoredGenerationGetNotIgnoredCallbackRequestBody = {
  someProp?: string | undefined;
};

/** @internal */
export const IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$inboundSchema:
  z.ZodType<
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    someProp: z.string().optional(),
  });

/** @internal */
export type IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$Outbound =
  {
    someProp?: string | undefined;
  };

/** @internal */
export const IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$outboundSchema:
  z.ZodType<
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$Outbound,
    z.ZodTypeDef,
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody
  > = z.object({
    someProp: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$ {
  /** @deprecated use `IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$inboundSchema;
  /** @deprecated use `IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$outboundSchema;
  /** @deprecated use `IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$Outbound` instead. */
  export type Outbound =
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$Outbound;
}

export function ignoredGenerationGetSingledIgnoredCallbackOperationRequestBodyToJSON(
  ignoredGenerationGetSingledIgnoredCallbackOperationRequestBody:
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody,
): string {
  return JSON.stringify(
    IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$outboundSchema
      .parse(ignoredGenerationGetSingledIgnoredCallbackOperationRequestBody),
  );
}

export function ignoredGenerationGetSingledIgnoredCallbackOperationRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'IgnoredGenerationGetSingledIgnoredCallbackOperationRequestBody' from JSON`,
  );
}

/** @internal */
export const IgnoredGenerationGetNotIgnoredCallbackRequestBody$inboundSchema:
  z.ZodType<
    IgnoredGenerationGetNotIgnoredCallbackRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    someProp: z.string().optional(),
  });

/** @internal */
export type IgnoredGenerationGetNotIgnoredCallbackRequestBody$Outbound = {
  someProp?: string | undefined;
};

/** @internal */
export const IgnoredGenerationGetNotIgnoredCallbackRequestBody$outboundSchema:
  z.ZodType<
    IgnoredGenerationGetNotIgnoredCallbackRequestBody$Outbound,
    z.ZodTypeDef,
    IgnoredGenerationGetNotIgnoredCallbackRequestBody
  > = z.object({
    someProp: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IgnoredGenerationGetNotIgnoredCallbackRequestBody$ {
  /** @deprecated use `IgnoredGenerationGetNotIgnoredCallbackRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    IgnoredGenerationGetNotIgnoredCallbackRequestBody$inboundSchema;
  /** @deprecated use `IgnoredGenerationGetNotIgnoredCallbackRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    IgnoredGenerationGetNotIgnoredCallbackRequestBody$outboundSchema;
  /** @deprecated use `IgnoredGenerationGetNotIgnoredCallbackRequestBody$Outbound` instead. */
  export type Outbound =
    IgnoredGenerationGetNotIgnoredCallbackRequestBody$Outbound;
}

export function ignoredGenerationGetNotIgnoredCallbackRequestBodyToJSON(
  ignoredGenerationGetNotIgnoredCallbackRequestBody:
    IgnoredGenerationGetNotIgnoredCallbackRequestBody,
): string {
  return JSON.stringify(
    IgnoredGenerationGetNotIgnoredCallbackRequestBody$outboundSchema.parse(
      ignoredGenerationGetNotIgnoredCallbackRequestBody,
    ),
  );
}

export function ignoredGenerationGetNotIgnoredCallbackRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  IgnoredGenerationGetNotIgnoredCallbackRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      IgnoredGenerationGetNotIgnoredCallbackRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'IgnoredGenerationGetNotIgnoredCallbackRequestBody' from JSON`,
  );
}
