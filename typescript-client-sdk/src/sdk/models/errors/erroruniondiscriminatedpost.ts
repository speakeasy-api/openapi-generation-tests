/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  TaggedError1,
  TaggedError1$inboundSchema,
  TaggedError1$Outbound,
  TaggedError1$outboundSchema,
} from "./taggederror1.js";
import {
  TaggedError2,
  TaggedError2$inboundSchema,
  TaggedError2$Outbound,
  TaggedError2$outboundSchema,
} from "./taggederror2.js";

/**
 * Internal Server Error
 */
export type ErrorUnionDiscriminatedPostResponseBody =
  | (TaggedError1 & { tag: "tag1" })
  | (TaggedError2 & { tag: "tag2" });

/** @internal */
export const ErrorUnionDiscriminatedPostResponseBody$inboundSchema: z.ZodType<
  ErrorUnionDiscriminatedPostResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  TaggedError1$inboundSchema.and(
    z.object({ tag: z.literal("tag1") }).transform((v) => ({ tag: v.tag })),
  ),
  TaggedError2$inboundSchema.and(
    z.object({ tag: z.literal("tag2") }).transform((v) => ({ tag: v.tag })),
  ),
]);

/** @internal */
export type ErrorUnionDiscriminatedPostResponseBody$Outbound =
  | (TaggedError1$Outbound & { tag: "tag1" })
  | (TaggedError2$Outbound & { tag: "tag2" });

/** @internal */
export const ErrorUnionDiscriminatedPostResponseBody$outboundSchema: z.ZodType<
  ErrorUnionDiscriminatedPostResponseBody$Outbound,
  z.ZodTypeDef,
  ErrorUnionDiscriminatedPostResponseBody
> = z.union([
  TaggedError1$outboundSchema.and(
    z.object({ tag: z.literal("tag1") }).transform((v) => ({ tag: v.tag })),
  ),
  TaggedError2$outboundSchema.and(
    z.object({ tag: z.literal("tag2") }).transform((v) => ({ tag: v.tag })),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ErrorUnionDiscriminatedPostResponseBody$ {
  /** @deprecated use `ErrorUnionDiscriminatedPostResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ErrorUnionDiscriminatedPostResponseBody$inboundSchema;
  /** @deprecated use `ErrorUnionDiscriminatedPostResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ErrorUnionDiscriminatedPostResponseBody$outboundSchema;
  /** @deprecated use `ErrorUnionDiscriminatedPostResponseBody$Outbound` instead. */
  export type Outbound = ErrorUnionDiscriminatedPostResponseBody$Outbound;
}
