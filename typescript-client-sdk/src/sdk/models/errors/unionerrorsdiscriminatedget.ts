/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    TaggedError1,
    TaggedError1$inboundSchema,
    TaggedError1$Outbound,
    TaggedError1$outboundSchema,
} from "./taggederror1.js";
import {
    TaggedError2,
    TaggedError2$inboundSchema,
    TaggedError2$Outbound,
    TaggedError2$outboundSchema,
} from "./taggederror2.js";
import * as z from "zod";

/**
 * Error
 */
export type UnionErrorsDiscriminatedGetResponseBody =
    | (TaggedError1 & { tag: "tag1" })
    | (TaggedError2 & { tag: "tag2" });

/** @internal */
export const UnionErrorsDiscriminatedGetResponseBody$inboundSchema: z.ZodType<
    UnionErrorsDiscriminatedGetResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    TaggedError1$inboundSchema.and(
        z.object({ tag: z.literal("tag1") }).transform((v) => ({ tag: v.tag }))
    ),
    TaggedError2$inboundSchema.and(
        z.object({ tag: z.literal("tag2") }).transform((v) => ({ tag: v.tag }))
    ),
]);

/** @internal */
export type UnionErrorsDiscriminatedGetResponseBody$Outbound =
    | (TaggedError1$Outbound & { tag: "tag1" })
    | (TaggedError2$Outbound & { tag: "tag2" });

/** @internal */
export const UnionErrorsDiscriminatedGetResponseBody$outboundSchema: z.ZodType<
    UnionErrorsDiscriminatedGetResponseBody$Outbound,
    z.ZodTypeDef,
    UnionErrorsDiscriminatedGetResponseBody
> = z.union([
    TaggedError1$outboundSchema.and(
        z.object({ tag: z.literal("tag1") }).transform((v) => ({ tag: v.tag }))
    ),
    TaggedError2$outboundSchema.and(
        z.object({ tag: z.literal("tag2") }).transform((v) => ({ tag: v.tag }))
    ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionErrorsDiscriminatedGetResponseBody$ {
    /** @deprecated use `UnionErrorsDiscriminatedGetResponseBody$inboundSchema` instead. */
    export const inboundSchema = UnionErrorsDiscriminatedGetResponseBody$inboundSchema;
    /** @deprecated use `UnionErrorsDiscriminatedGetResponseBody$outboundSchema` instead. */
    export const outboundSchema = UnionErrorsDiscriminatedGetResponseBody$outboundSchema;
    /** @deprecated use `UnionErrorsDiscriminatedGetResponseBody$Outbound` instead. */
    export type Outbound = UnionErrorsDiscriminatedGetResponseBody$Outbound;
}
