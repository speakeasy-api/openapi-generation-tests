/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const Console = {
  One: 1,
  Two: 2,
  Three: 3,
} as const;
export type Console = ClosedEnum<typeof Console>;

export type AmbiguousQueryParamRequest = {
  console: Console;
};

/** @internal */
export const Console$inboundSchema: z.ZodNativeEnum<typeof Console> = z
  .nativeEnum(Console);

/** @internal */
export const Console$outboundSchema: z.ZodNativeEnum<typeof Console> =
  Console$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Console$ {
  /** @deprecated use `Console$inboundSchema` instead. */
  export const inboundSchema = Console$inboundSchema;
  /** @deprecated use `Console$outboundSchema` instead. */
  export const outboundSchema = Console$outboundSchema;
}

/** @internal */
export const AmbiguousQueryParamRequest$inboundSchema: z.ZodType<
  AmbiguousQueryParamRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  console: Console$inboundSchema,
});

/** @internal */
export type AmbiguousQueryParamRequest$Outbound = {
  console: number;
};

/** @internal */
export const AmbiguousQueryParamRequest$outboundSchema: z.ZodType<
  AmbiguousQueryParamRequest$Outbound,
  z.ZodTypeDef,
  AmbiguousQueryParamRequest
> = z.object({
  console: Console$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AmbiguousQueryParamRequest$ {
  /** @deprecated use `AmbiguousQueryParamRequest$inboundSchema` instead. */
  export const inboundSchema = AmbiguousQueryParamRequest$inboundSchema;
  /** @deprecated use `AmbiguousQueryParamRequest$outboundSchema` instead. */
  export const outboundSchema = AmbiguousQueryParamRequest$outboundSchema;
  /** @deprecated use `AmbiguousQueryParamRequest$Outbound` instead. */
  export type Outbound = AmbiguousQueryParamRequest$Outbound;
}
