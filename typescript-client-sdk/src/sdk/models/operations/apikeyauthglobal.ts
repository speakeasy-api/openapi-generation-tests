/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Successful authentication.
 */
export type ApiKeyAuthGlobalToken = {
    authenticated: boolean;
    token: string;
};

/** @internal */
export const ApiKeyAuthGlobalToken$inboundSchema: z.ZodType<
    ApiKeyAuthGlobalToken,
    z.ZodTypeDef,
    unknown
> = z.object({
    authenticated: z.boolean(),
    token: z.string(),
});

/** @internal */
export type ApiKeyAuthGlobalToken$Outbound = {
    authenticated: boolean;
    token: string;
};

/** @internal */
export const ApiKeyAuthGlobalToken$outboundSchema: z.ZodType<
    ApiKeyAuthGlobalToken$Outbound,
    z.ZodTypeDef,
    ApiKeyAuthGlobalToken
> = z.object({
    authenticated: z.boolean(),
    token: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiKeyAuthGlobalToken$ {
    /** @deprecated use `ApiKeyAuthGlobalToken$inboundSchema` instead. */
    export const inboundSchema = ApiKeyAuthGlobalToken$inboundSchema;
    /** @deprecated use `ApiKeyAuthGlobalToken$outboundSchema` instead. */
    export const outboundSchema = ApiKeyAuthGlobalToken$outboundSchema;
    /** @deprecated use `ApiKeyAuthGlobalToken$Outbound` instead. */
    export type Outbound = ApiKeyAuthGlobalToken$Outbound;
}
