/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AuthenticatedRequestSecurity = {
    clientCredentials: string;
};

export type AuthenticatedRequestRequestBody = {
    name?: string | undefined;
};

/** @internal */
export namespace AuthenticatedRequestSecurity$ {
    export const inboundSchema: z.ZodType<AuthenticatedRequestSecurity, z.ZodTypeDef, unknown> =
        z.object({
            clientCredentials: z.string(),
        });

    export type Outbound = {
        clientCredentials: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthenticatedRequestSecurity> =
        z.object({
            clientCredentials: z.string(),
        });
}

/** @internal */
export namespace AuthenticatedRequestRequestBody$ {
    export const inboundSchema: z.ZodType<AuthenticatedRequestRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            name: z.string().optional(),
        });

    export type Outbound = {
        name?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthenticatedRequestRequestBody
    > = z.object({
        name: z.string().optional(),
    });
}
