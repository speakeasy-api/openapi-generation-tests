/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type BasicAuthSecurity = {
    password: string;
    username: string;
};

export type BasicAuthRequest = {
    passwd: string;
    user: string;
};

/**
 * Successful authentication.
 */
export type BasicAuthUser = {
    authenticated: boolean;
    user: string;
};

/** @internal */
export const BasicAuthSecurity$inboundSchema: z.ZodType<BasicAuthSecurity, z.ZodTypeDef, unknown> =
    z.object({
        password: z.string(),
        username: z.string(),
    });

/** @internal */
export type BasicAuthSecurity$Outbound = {
    password: string;
    username: string;
};

/** @internal */
export const BasicAuthSecurity$outboundSchema: z.ZodType<
    BasicAuthSecurity$Outbound,
    z.ZodTypeDef,
    BasicAuthSecurity
> = z.object({
    password: z.string(),
    username: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasicAuthSecurity$ {
    /** @deprecated use `BasicAuthSecurity$inboundSchema` instead. */
    export const inboundSchema = BasicAuthSecurity$inboundSchema;
    /** @deprecated use `BasicAuthSecurity$outboundSchema` instead. */
    export const outboundSchema = BasicAuthSecurity$outboundSchema;
    /** @deprecated use `BasicAuthSecurity$Outbound` instead. */
    export type Outbound = BasicAuthSecurity$Outbound;
}

/** @internal */
export const BasicAuthRequest$inboundSchema: z.ZodType<BasicAuthRequest, z.ZodTypeDef, unknown> =
    z.object({
        passwd: z.string(),
        user: z.string(),
    });

/** @internal */
export type BasicAuthRequest$Outbound = {
    passwd: string;
    user: string;
};

/** @internal */
export const BasicAuthRequest$outboundSchema: z.ZodType<
    BasicAuthRequest$Outbound,
    z.ZodTypeDef,
    BasicAuthRequest
> = z.object({
    passwd: z.string(),
    user: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasicAuthRequest$ {
    /** @deprecated use `BasicAuthRequest$inboundSchema` instead. */
    export const inboundSchema = BasicAuthRequest$inboundSchema;
    /** @deprecated use `BasicAuthRequest$outboundSchema` instead. */
    export const outboundSchema = BasicAuthRequest$outboundSchema;
    /** @deprecated use `BasicAuthRequest$Outbound` instead. */
    export type Outbound = BasicAuthRequest$Outbound;
}

/** @internal */
export const BasicAuthUser$inboundSchema: z.ZodType<BasicAuthUser, z.ZodTypeDef, unknown> =
    z.object({
        authenticated: z.boolean(),
        user: z.string(),
    });

/** @internal */
export type BasicAuthUser$Outbound = {
    authenticated: boolean;
    user: string;
};

/** @internal */
export const BasicAuthUser$outboundSchema: z.ZodType<
    BasicAuthUser$Outbound,
    z.ZodTypeDef,
    BasicAuthUser
> = z.object({
    authenticated: z.boolean(),
    user: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasicAuthUser$ {
    /** @deprecated use `BasicAuthUser$inboundSchema` instead. */
    export const inboundSchema = BasicAuthUser$inboundSchema;
    /** @deprecated use `BasicAuthUser$outboundSchema` instead. */
    export const outboundSchema = BasicAuthUser$outboundSchema;
    /** @deprecated use `BasicAuthUser$Outbound` instead. */
    export type Outbound = BasicAuthUser$Outbound;
}
