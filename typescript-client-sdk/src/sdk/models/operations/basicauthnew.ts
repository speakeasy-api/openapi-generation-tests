/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const BasicAuthNewServerList = [
  "http://localhost:35456",
] as const;

export type BasicAuthNewSecurity = {
  password: string;
  username: string;
};

/** @internal */
export const BasicAuthNewSecurity$inboundSchema: z.ZodType<
  BasicAuthNewSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  password: z.string(),
  username: z.string(),
});

/** @internal */
export type BasicAuthNewSecurity$Outbound = {
  password: string;
  username: string;
};

/** @internal */
export const BasicAuthNewSecurity$outboundSchema: z.ZodType<
  BasicAuthNewSecurity$Outbound,
  z.ZodTypeDef,
  BasicAuthNewSecurity
> = z.object({
  password: z.string(),
  username: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasicAuthNewSecurity$ {
  /** @deprecated use `BasicAuthNewSecurity$inboundSchema` instead. */
  export const inboundSchema = BasicAuthNewSecurity$inboundSchema;
  /** @deprecated use `BasicAuthNewSecurity$outboundSchema` instead. */
  export const outboundSchema = BasicAuthNewSecurity$outboundSchema;
  /** @deprecated use `BasicAuthNewSecurity$Outbound` instead. */
  export type Outbound = BasicAuthNewSecurity$Outbound;
}
