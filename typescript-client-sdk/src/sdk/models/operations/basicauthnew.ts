/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const BasicAuthNewServerList = ["http://localhost:35456"] as const;

export type BasicAuthNewSecurity = {
    password: string;
    username: string;
};

/** @internal */
export const BasicAuthNewSecurity$inboundSchema: z.ZodType<
    BasicAuthNewSecurity,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Password: z.string(),
        Username: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            Password: "password",
            Username: "username",
        });
    });

/** @internal */
export type BasicAuthNewSecurity$Outbound = {
    Password: string;
    Username: string;
};

/** @internal */
export const BasicAuthNewSecurity$outboundSchema: z.ZodType<
    BasicAuthNewSecurity$Outbound,
    z.ZodTypeDef,
    BasicAuthNewSecurity
> = z
    .object({
        password: z.string(),
        username: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            password: "Password",
            username: "Username",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasicAuthNewSecurity$ {
    /** @deprecated use `BasicAuthNewSecurity$inboundSchema` instead. */
    export const inboundSchema = BasicAuthNewSecurity$inboundSchema;
    /** @deprecated use `BasicAuthNewSecurity$outboundSchema` instead. */
    export const outboundSchema = BasicAuthNewSecurity$outboundSchema;
    /** @deprecated use `BasicAuthNewSecurity$Outbound` instead. */
    export type Outbound = BasicAuthNewSecurity$Outbound;
}
