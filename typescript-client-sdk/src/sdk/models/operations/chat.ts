/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { EventStream } from "../../../lib/event-streams.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export const ChatServerList = ["http://localhost:35456"] as const;

export type ChatRequestBody = {
    prompt: string;
    stream?: boolean | undefined;
};

export type ChatResponse =
    | Array<shared.ChatCompletionResult>
    | EventStream<shared.ChatCompletionStream>;

/** @internal */
export const ChatRequestBody$inboundSchema: z.ZodType<ChatRequestBody, z.ZodTypeDef, unknown> =
    z.object({
        prompt: z.string(),
        stream: z.boolean().optional(),
    });

/** @internal */
export type ChatRequestBody$Outbound = {
    prompt: string;
    stream?: boolean | undefined;
};

/** @internal */
export const ChatRequestBody$outboundSchema: z.ZodType<
    ChatRequestBody$Outbound,
    z.ZodTypeDef,
    ChatRequestBody
> = z.object({
    prompt: z.string(),
    stream: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatRequestBody$ {
    /** @deprecated use `ChatRequestBody$inboundSchema` instead. */
    export const inboundSchema = ChatRequestBody$inboundSchema;
    /** @deprecated use `ChatRequestBody$outboundSchema` instead. */
    export const outboundSchema = ChatRequestBody$outboundSchema;
    /** @deprecated use `ChatRequestBody$Outbound` instead. */
    export type Outbound = ChatRequestBody$Outbound;
}

/** @internal */
export const ChatResponse$inboundSchema: z.ZodType<ChatResponse, z.ZodTypeDef, unknown> = z.union([
    z.array(shared.ChatCompletionResult$inboundSchema),
    z.instanceof(ReadableStream<Uint8Array>).transform((stream) => {
        return new EventStream({
            stream,
            decoder(rawEvent) {
                const schema = shared.ChatCompletionStream$inboundSchema;
                return schema.parse(rawEvent);
            },
        });
    }),
]);

/** @internal */
export type ChatResponse$Outbound = Array<shared.ChatCompletionResult$Outbound> | never;

/** @internal */
export const ChatResponse$outboundSchema: z.ZodType<
    ChatResponse$Outbound,
    z.ZodTypeDef,
    ChatResponse
> = z.union([z.array(shared.ChatCompletionResult$outboundSchema), z.never()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatResponse$ {
    /** @deprecated use `ChatResponse$inboundSchema` instead. */
    export const inboundSchema = ChatResponse$inboundSchema;
    /** @deprecated use `ChatResponse$outboundSchema` instead. */
    export const outboundSchema = ChatResponse$outboundSchema;
    /** @deprecated use `ChatResponse$Outbound` instead. */
    export type Outbound = ChatResponse$Outbound;
}
