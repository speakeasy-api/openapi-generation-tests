/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type CustomClientPostRequest = {
    headerParam: string;
    pathParam: string;
    queryStringParam: string;
    simpleObject?: shared.SimpleObject | undefined;
};

export type Args = {
    queryStringParam: string;
};

/**
 * OK
 */
export type CustomClientPostRes = {
    args: Args;
    headers: { [k: string]: string };
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    json?: shared.SimpleObject | undefined;
    url: string;
};

/** @internal */
export namespace CustomClientPostRequest$ {
    export const inboundSchema: z.ZodType<CustomClientPostRequest, z.ZodTypeDef, unknown> =
        z.object({
            headerParam: z.string(),
            pathParam: z.string(),
            queryStringParam: z.string(),
            simpleObject: shared.SimpleObject$.inboundSchema.optional(),
        });

    export type Outbound = {
        headerParam: string;
        pathParam: string;
        queryStringParam: string;
        simpleObject?: shared.SimpleObject$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomClientPostRequest> =
        z.object({
            headerParam: z.string(),
            pathParam: z.string(),
            queryStringParam: z.string(),
            simpleObject: shared.SimpleObject$.outboundSchema.optional(),
        });
}

/** @internal */
export namespace Args$ {
    export const inboundSchema: z.ZodType<Args, z.ZodTypeDef, unknown> = z.object({
        queryStringParam: z.string(),
    });

    export type Outbound = {
        queryStringParam: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Args> = z.object({
        queryStringParam: z.string(),
    });
}

/** @internal */
export namespace CustomClientPostRes$ {
    export const inboundSchema: z.ZodType<CustomClientPostRes, z.ZodTypeDef, unknown> = z.object({
        args: z.lazy(() => Args$.inboundSchema),
        headers: z.record(z.string()),
        json: shared.SimpleObject$.inboundSchema.optional(),
        url: z.string(),
    });

    export type Outbound = {
        args: Args$.Outbound;
        headers: { [k: string]: string };
        json?: shared.SimpleObject$.Outbound | undefined;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CustomClientPostRes> = z.object({
        args: z.lazy(() => Args$.outboundSchema),
        headers: z.record(z.string()),
        json: shared.SimpleObject$.outboundSchema.optional(),
        url: z.string(),
    });
}
