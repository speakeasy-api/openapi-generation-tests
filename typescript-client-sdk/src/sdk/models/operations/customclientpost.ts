/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type CustomClientPostRequest = {
    headerParam: string;
    pathParam: string;
    queryStringParam: string;
    simpleObject?: shared.SimpleObject | undefined;
};

export type Args = {
    queryStringParam: string;
};

/**
 * OK
 */
export type CustomClientPostRes = {
    args: Args;
    headers: { [k: string]: string };
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    json?: shared.SimpleObject | undefined;
    url: string;
};

/** @internal */
export const CustomClientPostRequest$inboundSchema: z.ZodType<
    CustomClientPostRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    headerParam: z.string(),
    pathParam: z.string(),
    queryStringParam: z.string(),
    simpleObject: shared.SimpleObject$inboundSchema.optional(),
});

/** @internal */
export type CustomClientPostRequest$Outbound = {
    headerParam: string;
    pathParam: string;
    queryStringParam: string;
    simpleObject?: shared.SimpleObject$Outbound | undefined;
};

/** @internal */
export const CustomClientPostRequest$outboundSchema: z.ZodType<
    CustomClientPostRequest$Outbound,
    z.ZodTypeDef,
    CustomClientPostRequest
> = z.object({
    headerParam: z.string(),
    pathParam: z.string(),
    queryStringParam: z.string(),
    simpleObject: shared.SimpleObject$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomClientPostRequest$ {
    /** @deprecated use `CustomClientPostRequest$inboundSchema` instead. */
    export const inboundSchema = CustomClientPostRequest$inboundSchema;
    /** @deprecated use `CustomClientPostRequest$outboundSchema` instead. */
    export const outboundSchema = CustomClientPostRequest$outboundSchema;
    /** @deprecated use `CustomClientPostRequest$Outbound` instead. */
    export type Outbound = CustomClientPostRequest$Outbound;
}

/** @internal */
export const Args$inboundSchema: z.ZodType<Args, z.ZodTypeDef, unknown> = z.object({
    queryStringParam: z.string(),
});

/** @internal */
export type Args$Outbound = {
    queryStringParam: string;
};

/** @internal */
export const Args$outboundSchema: z.ZodType<Args$Outbound, z.ZodTypeDef, Args> = z.object({
    queryStringParam: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Args$ {
    /** @deprecated use `Args$inboundSchema` instead. */
    export const inboundSchema = Args$inboundSchema;
    /** @deprecated use `Args$outboundSchema` instead. */
    export const outboundSchema = Args$outboundSchema;
    /** @deprecated use `Args$Outbound` instead. */
    export type Outbound = Args$Outbound;
}

/** @internal */
export const CustomClientPostRes$inboundSchema: z.ZodType<
    CustomClientPostRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    args: z.lazy(() => Args$inboundSchema),
    headers: z.record(z.string()),
    json: shared.SimpleObject$inboundSchema.optional(),
    url: z.string(),
});

/** @internal */
export type CustomClientPostRes$Outbound = {
    args: Args$Outbound;
    headers: { [k: string]: string };
    json?: shared.SimpleObject$Outbound | undefined;
    url: string;
};

/** @internal */
export const CustomClientPostRes$outboundSchema: z.ZodType<
    CustomClientPostRes$Outbound,
    z.ZodTypeDef,
    CustomClientPostRes
> = z.object({
    args: z.lazy(() => Args$outboundSchema),
    headers: z.record(z.string()),
    json: shared.SimpleObject$outboundSchema.optional(),
    url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomClientPostRes$ {
    /** @deprecated use `CustomClientPostRes$inboundSchema` instead. */
    export const inboundSchema = CustomClientPostRes$inboundSchema;
    /** @deprecated use `CustomClientPostRes$outboundSchema` instead. */
    export const outboundSchema = CustomClientPostRes$outboundSchema;
    /** @deprecated use `CustomClientPostRes$Outbound` instead. */
    export type Outbound = CustomClientPostRes$Outbound;
}
