/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { RFCDate } from "../../types/rfcdate.js";
import * as z from "zod";

export type DateParamWithDefaultRequest = {
    /**
     * A date parameter with a default value
     */
    dateInput?: RFCDate | undefined;
};

/** @internal */
export namespace DateParamWithDefaultRequest$ {
    export const inboundSchema: z.ZodType<DateParamWithDefaultRequest, z.ZodTypeDef, unknown> =
        z.object({
            dateInput: z
                .string()
                .default("2023-10-13")
                .transform((v) => new RFCDate(v)),
        });

    export type Outbound = {
        dateInput: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DateParamWithDefaultRequest> =
        z.object({
            dateInput: z
                .instanceof(RFCDate)
                .default(() => new RFCDate("2023-10-13"))
                .transform((v) => v.toString()),
        });
}
