/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DateTimeParamWithDefaultRequest = {
    /**
     * A date time parameter with a default value
     */
    dateTimeInput?: Date | undefined;
};

/** @internal */
export namespace DateTimeParamWithDefaultRequest$ {
    export const inboundSchema: z.ZodType<DateTimeParamWithDefaultRequest, z.ZodTypeDef, unknown> =
        z.object({
            dateTimeInput: z
                .string()
                .datetime({ offset: true })
                .default("2023-10-13T12:42:42.999+00:00")
                .transform((v) => new Date(v)),
        });

    export type Outbound = {
        dateTimeInput: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DateTimeParamWithDefaultRequest
    > = z.object({
        dateTimeInput: z
            .date()
            .default(() => new Date("2023-10-13T12:42:42.999+00:00"))
            .transform((v) => v.toISOString()),
    });
}
