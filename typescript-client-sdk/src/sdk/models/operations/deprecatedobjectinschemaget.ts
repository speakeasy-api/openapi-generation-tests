/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

/**
 * A successful response that contains a deprecatedObject sent in the request body
 */
export type DeprecatedObjectInSchemaGetResponseBody = {
    /**
     * @deprecated field: This object is deprecated.
     */
    json?: shared.DeprecatedObject | undefined;
};

/** @internal */
export const DeprecatedObjectInSchemaGetResponseBody$inboundSchema: z.ZodType<
    DeprecatedObjectInSchemaGetResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    json: shared.DeprecatedObject$inboundSchema.optional(),
});

/** @internal */
export type DeprecatedObjectInSchemaGetResponseBody$Outbound = {
    json?: shared.DeprecatedObject$Outbound | undefined;
};

/** @internal */
export const DeprecatedObjectInSchemaGetResponseBody$outboundSchema: z.ZodType<
    DeprecatedObjectInSchemaGetResponseBody$Outbound,
    z.ZodTypeDef,
    DeprecatedObjectInSchemaGetResponseBody
> = z.object({
    json: shared.DeprecatedObject$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedObjectInSchemaGetResponseBody$ {
    /** @deprecated use `DeprecatedObjectInSchemaGetResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeprecatedObjectInSchemaGetResponseBody$inboundSchema;
    /** @deprecated use `DeprecatedObjectInSchemaGetResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeprecatedObjectInSchemaGetResponseBody$outboundSchema;
    /** @deprecated use `DeprecatedObjectInSchemaGetResponseBody$Outbound` instead. */
    export type Outbound = DeprecatedObjectInSchemaGetResponseBody$Outbound;
}
