/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeprecatedOperationWithCommentsGetRequest = {
  /**
   * This is a string parameter
   *
   * @deprecated field: This parameter is deprecated. Use newParameter instead.
   */
  deprecatedParameter?: string | undefined;
  /**
   * This is a string parameter
   */
  newParameter?: string | undefined;
};

/** @internal */
export const DeprecatedOperationWithCommentsGetRequest$inboundSchema: z.ZodType<
  DeprecatedOperationWithCommentsGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  deprecatedParameter: z.string().optional(),
  newParameter: z.string().optional(),
});

/** @internal */
export type DeprecatedOperationWithCommentsGetRequest$Outbound = {
  deprecatedParameter?: string | undefined;
  newParameter?: string | undefined;
};

/** @internal */
export const DeprecatedOperationWithCommentsGetRequest$outboundSchema:
  z.ZodType<
    DeprecatedOperationWithCommentsGetRequest$Outbound,
    z.ZodTypeDef,
    DeprecatedOperationWithCommentsGetRequest
  > = z.object({
    deprecatedParameter: z.string().optional(),
    newParameter: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedOperationWithCommentsGetRequest$ {
  /** @deprecated use `DeprecatedOperationWithCommentsGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeprecatedOperationWithCommentsGetRequest$inboundSchema;
  /** @deprecated use `DeprecatedOperationWithCommentsGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeprecatedOperationWithCommentsGetRequest$outboundSchema;
  /** @deprecated use `DeprecatedOperationWithCommentsGetRequest$Outbound` instead. */
  export type Outbound = DeprecatedOperationWithCommentsGetRequest$Outbound;
}

export function deprecatedOperationWithCommentsGetRequestToJSON(
  deprecatedOperationWithCommentsGetRequest:
    DeprecatedOperationWithCommentsGetRequest,
): string {
  return JSON.stringify(
    DeprecatedOperationWithCommentsGetRequest$outboundSchema.parse(
      deprecatedOperationWithCommentsGetRequest,
    ),
  );
}

export function deprecatedOperationWithCommentsGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeprecatedOperationWithCommentsGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeprecatedOperationWithCommentsGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeprecatedOperationWithCommentsGetRequest' from JSON`,
  );
}
