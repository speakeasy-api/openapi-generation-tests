/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type DeprecatedOperationWithCommentsGetRequest = {
    /**
     * This is a string parameter
     *
     * @deprecated field: This parameter is deprecated. Use newParameter instead.
     */
    deprecatedParameter?: string | undefined;
    /**
     * This is a string parameter
     */
    newParameter?: string | undefined;
};

/** @internal */
export const DeprecatedOperationWithCommentsGetRequest$inboundSchema: z.ZodType<
    DeprecatedOperationWithCommentsGetRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    deprecatedParameter: z.string().optional(),
    newParameter: z.string().optional(),
});

/** @internal */
export type DeprecatedOperationWithCommentsGetRequest$Outbound = {
    deprecatedParameter?: string | undefined;
    newParameter?: string | undefined;
};

/** @internal */
export const DeprecatedOperationWithCommentsGetRequest$outboundSchema: z.ZodType<
    DeprecatedOperationWithCommentsGetRequest$Outbound,
    z.ZodTypeDef,
    DeprecatedOperationWithCommentsGetRequest
> = z.object({
    deprecatedParameter: z.string().optional(),
    newParameter: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedOperationWithCommentsGetRequest$ {
    /** @deprecated use `DeprecatedOperationWithCommentsGetRequest$inboundSchema` instead. */
    export const inboundSchema = DeprecatedOperationWithCommentsGetRequest$inboundSchema;
    /** @deprecated use `DeprecatedOperationWithCommentsGetRequest$outboundSchema` instead. */
    export const outboundSchema = DeprecatedOperationWithCommentsGetRequest$outboundSchema;
    /** @deprecated use `DeprecatedOperationWithCommentsGetRequest$Outbound` instead. */
    export type Outbound = DeprecatedOperationWithCommentsGetRequest$Outbound;
}
