/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type DiscriminatedOneMultipleMembershipsRes = {
  json: shared.Vehicle;
};

/** @internal */
export const DiscriminatedOneMultipleMembershipsRes$inboundSchema: z.ZodType<
  DiscriminatedOneMultipleMembershipsRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.Vehicle$inboundSchema,
});

/** @internal */
export type DiscriminatedOneMultipleMembershipsRes$Outbound = {
  json: shared.Vehicle$Outbound;
};

/** @internal */
export const DiscriminatedOneMultipleMembershipsRes$outboundSchema: z.ZodType<
  DiscriminatedOneMultipleMembershipsRes$Outbound,
  z.ZodTypeDef,
  DiscriminatedOneMultipleMembershipsRes
> = z.object({
  json: shared.Vehicle$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscriminatedOneMultipleMembershipsRes$ {
  /** @deprecated use `DiscriminatedOneMultipleMembershipsRes$inboundSchema` instead. */
  export const inboundSchema =
    DiscriminatedOneMultipleMembershipsRes$inboundSchema;
  /** @deprecated use `DiscriminatedOneMultipleMembershipsRes$outboundSchema` instead. */
  export const outboundSchema =
    DiscriminatedOneMultipleMembershipsRes$outboundSchema;
  /** @deprecated use `DiscriminatedOneMultipleMembershipsRes$Outbound` instead. */
  export type Outbound = DiscriminatedOneMultipleMembershipsRes$Outbound;
}

export function discriminatedOneMultipleMembershipsResToJSON(
  discriminatedOneMultipleMembershipsRes:
    DiscriminatedOneMultipleMembershipsRes,
): string {
  return JSON.stringify(
    DiscriminatedOneMultipleMembershipsRes$outboundSchema.parse(
      discriminatedOneMultipleMembershipsRes,
    ),
  );
}

export function discriminatedOneMultipleMembershipsResFromJSON(
  jsonString: string,
): SafeParseResult<DiscriminatedOneMultipleMembershipsRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DiscriminatedOneMultipleMembershipsRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DiscriminatedOneMultipleMembershipsRes' from JSON`,
  );
}
