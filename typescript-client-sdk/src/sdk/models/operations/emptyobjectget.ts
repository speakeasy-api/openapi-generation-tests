/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type EmptyObjectGetRequest = {
  emptyObject: shared.EmptyObjectParam;
};

/** @internal */
export const EmptyObjectGetRequest$inboundSchema: z.ZodType<
  EmptyObjectGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  emptyObject: shared.EmptyObjectParam$inboundSchema,
});

/** @internal */
export type EmptyObjectGetRequest$Outbound = {
  emptyObject: shared.EmptyObjectParam$Outbound;
};

/** @internal */
export const EmptyObjectGetRequest$outboundSchema: z.ZodType<
  EmptyObjectGetRequest$Outbound,
  z.ZodTypeDef,
  EmptyObjectGetRequest
> = z.object({
  emptyObject: shared.EmptyObjectParam$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmptyObjectGetRequest$ {
  /** @deprecated use `EmptyObjectGetRequest$inboundSchema` instead. */
  export const inboundSchema = EmptyObjectGetRequest$inboundSchema;
  /** @deprecated use `EmptyObjectGetRequest$outboundSchema` instead. */
  export const outboundSchema = EmptyObjectGetRequest$outboundSchema;
  /** @deprecated use `EmptyObjectGetRequest$Outbound` instead. */
  export type Outbound = EmptyObjectGetRequest$Outbound;
}

export function emptyObjectGetRequestToJSON(
  emptyObjectGetRequest: EmptyObjectGetRequest,
): string {
  return JSON.stringify(
    EmptyObjectGetRequest$outboundSchema.parse(emptyObjectGetRequest),
  );
}

export function emptyObjectGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<EmptyObjectGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EmptyObjectGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EmptyObjectGetRequest' from JSON`,
  );
}
