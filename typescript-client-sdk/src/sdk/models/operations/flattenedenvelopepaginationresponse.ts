/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type FlattenedEnvelopePaginationResponseRequest = {
    /**
     * The page token used to request a specific page of the search results
     */
    cursor?: string | undefined;
};

/**
 * OK
 */
export type FlattenedEnvelopePaginationResponseRes = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<string>;
};

export type FlattenedEnvelopePaginationResponseResponse = {
    result: FlattenedEnvelopePaginationResponseRes;
};

/** @internal */
export namespace FlattenedEnvelopePaginationResponseRequest$ {
    export const inboundSchema: z.ZodType<
        FlattenedEnvelopePaginationResponseRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        cursor: z.string().optional(),
    });

    export type Outbound = {
        cursor?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FlattenedEnvelopePaginationResponseRequest
    > = z.object({
        cursor: z.string().optional(),
    });
}

/** @internal */
export namespace FlattenedEnvelopePaginationResponseRes$ {
    export const inboundSchema: z.ZodType<
        FlattenedEnvelopePaginationResponseRes,
        z.ZodTypeDef,
        unknown
    > = z.object({
        next: z.string().optional(),
        numPages: z.number().int(),
        resultArray: z.array(z.string()),
    });

    export type Outbound = {
        next?: string | undefined;
        numPages: number;
        resultArray: Array<string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FlattenedEnvelopePaginationResponseRes
    > = z.object({
        next: z.string().optional(),
        numPages: z.number().int(),
        resultArray: z.array(z.string()),
    });
}

/** @internal */
export namespace FlattenedEnvelopePaginationResponseResponse$ {
    export const inboundSchema: z.ZodType<
        FlattenedEnvelopePaginationResponseResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            Result: z.lazy(() => FlattenedEnvelopePaginationResponseRes$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: FlattenedEnvelopePaginationResponseRes$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FlattenedEnvelopePaginationResponseResponse
    > = z
        .object({
            result: z.lazy(() => FlattenedEnvelopePaginationResponseRes$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
