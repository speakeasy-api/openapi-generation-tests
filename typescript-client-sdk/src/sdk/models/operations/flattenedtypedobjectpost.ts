/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type FlattenedTypedObjectPostRes = {
  json: shared.FlattenedTypedObject1;
};

/** @internal */
export const FlattenedTypedObjectPostRes$inboundSchema: z.ZodType<
  FlattenedTypedObjectPostRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.FlattenedTypedObject1$inboundSchema,
});

/** @internal */
export type FlattenedTypedObjectPostRes$Outbound = {
  json: shared.FlattenedTypedObject1$Outbound;
};

/** @internal */
export const FlattenedTypedObjectPostRes$outboundSchema: z.ZodType<
  FlattenedTypedObjectPostRes$Outbound,
  z.ZodTypeDef,
  FlattenedTypedObjectPostRes
> = z.object({
  json: shared.FlattenedTypedObject1$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlattenedTypedObjectPostRes$ {
  /** @deprecated use `FlattenedTypedObjectPostRes$inboundSchema` instead. */
  export const inboundSchema = FlattenedTypedObjectPostRes$inboundSchema;
  /** @deprecated use `FlattenedTypedObjectPostRes$outboundSchema` instead. */
  export const outboundSchema = FlattenedTypedObjectPostRes$outboundSchema;
  /** @deprecated use `FlattenedTypedObjectPostRes$Outbound` instead. */
  export type Outbound = FlattenedTypedObjectPostRes$Outbound;
}

export function flattenedTypedObjectPostResToJSON(
  flattenedTypedObjectPostRes: FlattenedTypedObjectPostRes,
): string {
  return JSON.stringify(
    FlattenedTypedObjectPostRes$outboundSchema.parse(
      flattenedTypedObjectPostRes,
    ),
  );
}

export function flattenedTypedObjectPostResFromJSON(
  jsonString: string,
): SafeParseResult<FlattenedTypedObjectPostRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FlattenedTypedObjectPostRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FlattenedTypedObjectPostRes' from JSON`,
  );
}
