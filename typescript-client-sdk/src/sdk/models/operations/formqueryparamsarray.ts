/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type FormQueryParamsArrayRequest = {
    arrParam?: Array<string> | undefined;
    arrParamExploded?: Array<number> | undefined;
};

export type FormQueryParamsArrayArgs = {
    arrParam: string;
    arrParamExploded: Array<string>;
};

/**
 * OK
 */
export type FormQueryParamsArrayRes = {
    args: FormQueryParamsArrayArgs;
    url: string;
};

/** @internal */
export namespace FormQueryParamsArrayRequest$ {
    export const inboundSchema: z.ZodType<FormQueryParamsArrayRequest, z.ZodTypeDef, unknown> =
        z.object({
            arrParam: z.array(z.string()).optional(),
            arrParamExploded: z.array(z.number().int()).optional(),
        });

    export type Outbound = {
        arrParam?: Array<string> | undefined;
        arrParamExploded?: Array<number> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FormQueryParamsArrayRequest> =
        z.object({
            arrParam: z.array(z.string()).optional(),
            arrParamExploded: z.array(z.number().int()).optional(),
        });
}

/** @internal */
export namespace FormQueryParamsArrayArgs$ {
    export const inboundSchema: z.ZodType<FormQueryParamsArrayArgs, z.ZodTypeDef, unknown> =
        z.object({
            arrParam: z.string(),
            arrParamExploded: z.array(z.string()),
        });

    export type Outbound = {
        arrParam: string;
        arrParamExploded: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FormQueryParamsArrayArgs> =
        z.object({
            arrParam: z.string(),
            arrParamExploded: z.array(z.string()),
        });
}

/** @internal */
export namespace FormQueryParamsArrayRes$ {
    export const inboundSchema: z.ZodType<FormQueryParamsArrayRes, z.ZodTypeDef, unknown> =
        z.object({
            args: z.lazy(() => FormQueryParamsArrayArgs$.inboundSchema),
            url: z.string(),
        });

    export type Outbound = {
        args: FormQueryParamsArrayArgs$.Outbound;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FormQueryParamsArrayRes> =
        z.object({
            args: z.lazy(() => FormQueryParamsArrayArgs$.outboundSchema),
            url: z.string(),
        });
}
