/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FormQueryParamsPrimitiveRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=boolParam" })
    boolParam: boolean;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=intParam" })
    intParam: number;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=numParam" })
    numParam: number;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=strParam" })
    strParam: string;
}

export class FormQueryParamsPrimitiveArgs extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "boolParam" })
    boolParam: string;

    @SpeakeasyMetadata()
    @Expose({ name: "intParam" })
    intParam: string;

    @SpeakeasyMetadata()
    @Expose({ name: "numParam" })
    numParam: string;

    @SpeakeasyMetadata()
    @Expose({ name: "strParam" })
    strParam: string;
}

/**
 * OK
 */
export class FormQueryParamsPrimitiveRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "args" })
    @Type(() => FormQueryParamsPrimitiveArgs)
    args: FormQueryParamsPrimitiveArgs;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url: string;
}

export class FormQueryParamsPrimitiveResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: FormQueryParamsPrimitiveRes;
}
