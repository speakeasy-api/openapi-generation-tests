/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type FormQueryParamsRefParamObjectRequest = {
    refObjParam?: shared.RefQueryParamObj | undefined;
    refObjParamExploded?: shared.RefQueryParamObjExploded | undefined;
};

export type FormQueryParamsRefParamObjectArgs = {
    bool: string;
    int: string;
    num: string;
    refObjParam: string;
    str: string;
};

/**
 * OK
 */
export type FormQueryParamsRefParamObjectRes = {
    args: FormQueryParamsRefParamObjectArgs;
    url: string;
};

/** @internal */
export namespace FormQueryParamsRefParamObjectRequest$ {
    export const inboundSchema: z.ZodType<
        FormQueryParamsRefParamObjectRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        refObjParam: shared.RefQueryParamObj$.inboundSchema.optional(),
        refObjParamExploded: shared.RefQueryParamObjExploded$.inboundSchema.optional(),
    });

    export type Outbound = {
        refObjParam?: shared.RefQueryParamObj$.Outbound | undefined;
        refObjParamExploded?: shared.RefQueryParamObjExploded$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FormQueryParamsRefParamObjectRequest
    > = z.object({
        refObjParam: shared.RefQueryParamObj$.outboundSchema.optional(),
        refObjParamExploded: shared.RefQueryParamObjExploded$.outboundSchema.optional(),
    });
}

/** @internal */
export namespace FormQueryParamsRefParamObjectArgs$ {
    export const inboundSchema: z.ZodType<
        FormQueryParamsRefParamObjectArgs,
        z.ZodTypeDef,
        unknown
    > = z.object({
        bool: z.string(),
        int: z.string(),
        num: z.string(),
        refObjParam: z.string(),
        str: z.string(),
    });

    export type Outbound = {
        bool: string;
        int: string;
        num: string;
        refObjParam: string;
        str: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FormQueryParamsRefParamObjectArgs
    > = z.object({
        bool: z.string(),
        int: z.string(),
        num: z.string(),
        refObjParam: z.string(),
        str: z.string(),
    });
}

/** @internal */
export namespace FormQueryParamsRefParamObjectRes$ {
    export const inboundSchema: z.ZodType<FormQueryParamsRefParamObjectRes, z.ZodTypeDef, unknown> =
        z.object({
            args: z.lazy(() => FormQueryParamsRefParamObjectArgs$.inboundSchema),
            url: z.string(),
        });

    export type Outbound = {
        args: FormQueryParamsRefParamObjectArgs$.Outbound;
        url: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FormQueryParamsRefParamObjectRes
    > = z.object({
        args: z.lazy(() => FormQueryParamsRefParamObjectArgs$.outboundSchema),
        url: z.string(),
    });
}
