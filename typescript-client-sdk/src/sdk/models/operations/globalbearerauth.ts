/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Successful authentication.
 */
export type GlobalBearerAuthToken = {
    authenticated: boolean;
    token: string;
};

/** @internal */
export const GlobalBearerAuthToken$inboundSchema: z.ZodType<
    GlobalBearerAuthToken,
    z.ZodTypeDef,
    unknown
> = z.object({
    authenticated: z.boolean(),
    token: z.string(),
});

/** @internal */
export type GlobalBearerAuthToken$Outbound = {
    authenticated: boolean;
    token: string;
};

/** @internal */
export const GlobalBearerAuthToken$outboundSchema: z.ZodType<
    GlobalBearerAuthToken$Outbound,
    z.ZodTypeDef,
    GlobalBearerAuthToken
> = z.object({
    authenticated: z.boolean(),
    token: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalBearerAuthToken$ {
    /** @deprecated use `GlobalBearerAuthToken$inboundSchema` instead. */
    export const inboundSchema = GlobalBearerAuthToken$inboundSchema;
    /** @deprecated use `GlobalBearerAuthToken$outboundSchema` instead. */
    export const outboundSchema = GlobalBearerAuthToken$outboundSchema;
    /** @deprecated use `GlobalBearerAuthToken$Outbound` instead. */
    export type Outbound = GlobalBearerAuthToken$Outbound;
}
