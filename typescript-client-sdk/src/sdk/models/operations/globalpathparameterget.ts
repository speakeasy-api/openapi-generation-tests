/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GlobalPathParameterGetGlobals = {
    globalPathParam?: number | undefined;
};

export type GlobalPathParameterGetRequest = {
    globalPathParam?: number | undefined;
};

/**
 * OK
 */
export type GlobalPathParameterGetRes = {
    url: string;
};

/** @internal */
export const GlobalPathParameterGetGlobals$inboundSchema: z.ZodType<
    GlobalPathParameterGetGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    globalPathParam: z.number().int().optional(),
});

/** @internal */
export type GlobalPathParameterGetGlobals$Outbound = {
    globalPathParam?: number | undefined;
};

/** @internal */
export const GlobalPathParameterGetGlobals$outboundSchema: z.ZodType<
    GlobalPathParameterGetGlobals$Outbound,
    z.ZodTypeDef,
    GlobalPathParameterGetGlobals
> = z.object({
    globalPathParam: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalPathParameterGetGlobals$ {
    /** @deprecated use `GlobalPathParameterGetGlobals$inboundSchema` instead. */
    export const inboundSchema = GlobalPathParameterGetGlobals$inboundSchema;
    /** @deprecated use `GlobalPathParameterGetGlobals$outboundSchema` instead. */
    export const outboundSchema = GlobalPathParameterGetGlobals$outboundSchema;
    /** @deprecated use `GlobalPathParameterGetGlobals$Outbound` instead. */
    export type Outbound = GlobalPathParameterGetGlobals$Outbound;
}

/** @internal */
export const GlobalPathParameterGetRequest$inboundSchema: z.ZodType<
    GlobalPathParameterGetRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    globalPathParam: z.number().int().optional(),
});

/** @internal */
export type GlobalPathParameterGetRequest$Outbound = {
    globalPathParam?: number | undefined;
};

/** @internal */
export const GlobalPathParameterGetRequest$outboundSchema: z.ZodType<
    GlobalPathParameterGetRequest$Outbound,
    z.ZodTypeDef,
    GlobalPathParameterGetRequest
> = z.object({
    globalPathParam: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalPathParameterGetRequest$ {
    /** @deprecated use `GlobalPathParameterGetRequest$inboundSchema` instead. */
    export const inboundSchema = GlobalPathParameterGetRequest$inboundSchema;
    /** @deprecated use `GlobalPathParameterGetRequest$outboundSchema` instead. */
    export const outboundSchema = GlobalPathParameterGetRequest$outboundSchema;
    /** @deprecated use `GlobalPathParameterGetRequest$Outbound` instead. */
    export type Outbound = GlobalPathParameterGetRequest$Outbound;
}

/** @internal */
export const GlobalPathParameterGetRes$inboundSchema: z.ZodType<
    GlobalPathParameterGetRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    url: z.string(),
});

/** @internal */
export type GlobalPathParameterGetRes$Outbound = {
    url: string;
};

/** @internal */
export const GlobalPathParameterGetRes$outboundSchema: z.ZodType<
    GlobalPathParameterGetRes$Outbound,
    z.ZodTypeDef,
    GlobalPathParameterGetRes
> = z.object({
    url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalPathParameterGetRes$ {
    /** @deprecated use `GlobalPathParameterGetRes$inboundSchema` instead. */
    export const inboundSchema = GlobalPathParameterGetRes$inboundSchema;
    /** @deprecated use `GlobalPathParameterGetRes$outboundSchema` instead. */
    export const outboundSchema = GlobalPathParameterGetRes$outboundSchema;
    /** @deprecated use `GlobalPathParameterGetRes$Outbound` instead. */
    export type Outbound = GlobalPathParameterGetRes$Outbound;
}
