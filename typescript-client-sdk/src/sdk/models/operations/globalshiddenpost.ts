/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GlobalsHiddenPostGlobals = {
    globalHiddenHeaderParam?: string | undefined;
    globalHiddenPathParam?: string | undefined;
    globalHiddenQueryParam?: string | undefined;
};

export type GlobalsHiddenPostRequestBody = {
    other: number;
    test: string;
};

export type GlobalsHiddenPostArgs = {
    globalHiddenQueryParam: string;
};

export type GlobalsHiddenPostJson = {
    other: number;
    test: string;
};

/**
 * OK
 */
export type GlobalsHiddenPostRes = {
    args: GlobalsHiddenPostArgs;
    headers: { [k: string]: string };
    json: GlobalsHiddenPostJson;
    url: string;
};

/** @internal */
export const GlobalsHiddenPostGlobals$inboundSchema: z.ZodType<
    GlobalsHiddenPostGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    globalHiddenHeaderParam: z.string().optional(),
    globalHiddenPathParam: z.string().optional(),
    globalHiddenQueryParam: z.string().optional(),
});

/** @internal */
export type GlobalsHiddenPostGlobals$Outbound = {
    globalHiddenHeaderParam?: string | undefined;
    globalHiddenPathParam?: string | undefined;
    globalHiddenQueryParam?: string | undefined;
};

/** @internal */
export const GlobalsHiddenPostGlobals$outboundSchema: z.ZodType<
    GlobalsHiddenPostGlobals$Outbound,
    z.ZodTypeDef,
    GlobalsHiddenPostGlobals
> = z.object({
    globalHiddenHeaderParam: z.string().optional(),
    globalHiddenPathParam: z.string().optional(),
    globalHiddenQueryParam: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsHiddenPostGlobals$ {
    /** @deprecated use `GlobalsHiddenPostGlobals$inboundSchema` instead. */
    export const inboundSchema = GlobalsHiddenPostGlobals$inboundSchema;
    /** @deprecated use `GlobalsHiddenPostGlobals$outboundSchema` instead. */
    export const outboundSchema = GlobalsHiddenPostGlobals$outboundSchema;
    /** @deprecated use `GlobalsHiddenPostGlobals$Outbound` instead. */
    export type Outbound = GlobalsHiddenPostGlobals$Outbound;
}

/** @internal */
export const GlobalsHiddenPostRequestBody$inboundSchema: z.ZodType<
    GlobalsHiddenPostRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    other: z.number().int(),
    test: z.string(),
});

/** @internal */
export type GlobalsHiddenPostRequestBody$Outbound = {
    other: number;
    test: string;
};

/** @internal */
export const GlobalsHiddenPostRequestBody$outboundSchema: z.ZodType<
    GlobalsHiddenPostRequestBody$Outbound,
    z.ZodTypeDef,
    GlobalsHiddenPostRequestBody
> = z.object({
    other: z.number().int(),
    test: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsHiddenPostRequestBody$ {
    /** @deprecated use `GlobalsHiddenPostRequestBody$inboundSchema` instead. */
    export const inboundSchema = GlobalsHiddenPostRequestBody$inboundSchema;
    /** @deprecated use `GlobalsHiddenPostRequestBody$outboundSchema` instead. */
    export const outboundSchema = GlobalsHiddenPostRequestBody$outboundSchema;
    /** @deprecated use `GlobalsHiddenPostRequestBody$Outbound` instead. */
    export type Outbound = GlobalsHiddenPostRequestBody$Outbound;
}

/** @internal */
export const GlobalsHiddenPostArgs$inboundSchema: z.ZodType<
    GlobalsHiddenPostArgs,
    z.ZodTypeDef,
    unknown
> = z.object({
    globalHiddenQueryParam: z.string(),
});

/** @internal */
export type GlobalsHiddenPostArgs$Outbound = {
    globalHiddenQueryParam: string;
};

/** @internal */
export const GlobalsHiddenPostArgs$outboundSchema: z.ZodType<
    GlobalsHiddenPostArgs$Outbound,
    z.ZodTypeDef,
    GlobalsHiddenPostArgs
> = z.object({
    globalHiddenQueryParam: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsHiddenPostArgs$ {
    /** @deprecated use `GlobalsHiddenPostArgs$inboundSchema` instead. */
    export const inboundSchema = GlobalsHiddenPostArgs$inboundSchema;
    /** @deprecated use `GlobalsHiddenPostArgs$outboundSchema` instead. */
    export const outboundSchema = GlobalsHiddenPostArgs$outboundSchema;
    /** @deprecated use `GlobalsHiddenPostArgs$Outbound` instead. */
    export type Outbound = GlobalsHiddenPostArgs$Outbound;
}

/** @internal */
export const GlobalsHiddenPostJson$inboundSchema: z.ZodType<
    GlobalsHiddenPostJson,
    z.ZodTypeDef,
    unknown
> = z.object({
    other: z.number().int(),
    test: z.string(),
});

/** @internal */
export type GlobalsHiddenPostJson$Outbound = {
    other: number;
    test: string;
};

/** @internal */
export const GlobalsHiddenPostJson$outboundSchema: z.ZodType<
    GlobalsHiddenPostJson$Outbound,
    z.ZodTypeDef,
    GlobalsHiddenPostJson
> = z.object({
    other: z.number().int(),
    test: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsHiddenPostJson$ {
    /** @deprecated use `GlobalsHiddenPostJson$inboundSchema` instead. */
    export const inboundSchema = GlobalsHiddenPostJson$inboundSchema;
    /** @deprecated use `GlobalsHiddenPostJson$outboundSchema` instead. */
    export const outboundSchema = GlobalsHiddenPostJson$outboundSchema;
    /** @deprecated use `GlobalsHiddenPostJson$Outbound` instead. */
    export type Outbound = GlobalsHiddenPostJson$Outbound;
}

/** @internal */
export const GlobalsHiddenPostRes$inboundSchema: z.ZodType<
    GlobalsHiddenPostRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    args: z.lazy(() => GlobalsHiddenPostArgs$inboundSchema),
    headers: z.record(z.string()),
    json: z.lazy(() => GlobalsHiddenPostJson$inboundSchema),
    url: z.string(),
});

/** @internal */
export type GlobalsHiddenPostRes$Outbound = {
    args: GlobalsHiddenPostArgs$Outbound;
    headers: { [k: string]: string };
    json: GlobalsHiddenPostJson$Outbound;
    url: string;
};

/** @internal */
export const GlobalsHiddenPostRes$outboundSchema: z.ZodType<
    GlobalsHiddenPostRes$Outbound,
    z.ZodTypeDef,
    GlobalsHiddenPostRes
> = z.object({
    args: z.lazy(() => GlobalsHiddenPostArgs$outboundSchema),
    headers: z.record(z.string()),
    json: z.lazy(() => GlobalsHiddenPostJson$outboundSchema),
    url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsHiddenPostRes$ {
    /** @deprecated use `GlobalsHiddenPostRes$inboundSchema` instead. */
    export const inboundSchema = GlobalsHiddenPostRes$inboundSchema;
    /** @deprecated use `GlobalsHiddenPostRes$outboundSchema` instead. */
    export const outboundSchema = GlobalsHiddenPostRes$outboundSchema;
    /** @deprecated use `GlobalsHiddenPostRes$Outbound` instead. */
    export type Outbound = GlobalsHiddenPostRes$Outbound;
}
