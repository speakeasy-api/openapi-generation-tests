/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GlobalsQueryParameterGetGlobals = {
    globalQueryParam?: string | undefined;
};

export type GlobalsQueryParameterGetRequest = {
    globalQueryParam?: string | undefined;
};

export type GlobalsQueryParameterGetArgs = {
    globalQueryParam: string;
};

/**
 * OK
 */
export type GlobalsQueryParameterGetRes = {
    args: GlobalsQueryParameterGetArgs;
};

/** @internal */
export namespace GlobalsQueryParameterGetGlobals$ {
    export const inboundSchema: z.ZodType<GlobalsQueryParameterGetGlobals, z.ZodTypeDef, unknown> =
        z.object({
            globalQueryParam: z.string().optional(),
        });

    export type Outbound = {
        globalQueryParam?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GlobalsQueryParameterGetGlobals
    > = z.object({
        globalQueryParam: z.string().optional(),
    });
}

/** @internal */
export namespace GlobalsQueryParameterGetRequest$ {
    export const inboundSchema: z.ZodType<GlobalsQueryParameterGetRequest, z.ZodTypeDef, unknown> =
        z.object({
            globalQueryParam: z.string().optional(),
        });

    export type Outbound = {
        globalQueryParam?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GlobalsQueryParameterGetRequest
    > = z.object({
        globalQueryParam: z.string().optional(),
    });
}

/** @internal */
export namespace GlobalsQueryParameterGetArgs$ {
    export const inboundSchema: z.ZodType<GlobalsQueryParameterGetArgs, z.ZodTypeDef, unknown> =
        z.object({
            globalQueryParam: z.string(),
        });

    export type Outbound = {
        globalQueryParam: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GlobalsQueryParameterGetArgs> =
        z.object({
            globalQueryParam: z.string(),
        });
}

/** @internal */
export namespace GlobalsQueryParameterGetRes$ {
    export const inboundSchema: z.ZodType<GlobalsQueryParameterGetRes, z.ZodTypeDef, unknown> =
        z.object({
            args: z.lazy(() => GlobalsQueryParameterGetArgs$.inboundSchema),
        });

    export type Outbound = {
        args: GlobalsQueryParameterGetArgs$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GlobalsQueryParameterGetRes> =
        z.object({
            args: z.lazy(() => GlobalsQueryParameterGetArgs$.outboundSchema),
        });
}
