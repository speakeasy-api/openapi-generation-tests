/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GlobalsQueryParameterGetGlobals = {
  globalQueryParam?: string | undefined;
};

export type GlobalsQueryParameterGetRequest = {
  globalQueryParam?: string | undefined;
};

export type GlobalsQueryParameterGetArgs = {
  globalQueryParam: string;
};

/**
 * OK
 */
export type GlobalsQueryParameterGetRes = {
  args: GlobalsQueryParameterGetArgs;
};

/** @internal */
export const GlobalsQueryParameterGetGlobals$inboundSchema: z.ZodType<
  GlobalsQueryParameterGetGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  globalQueryParam: z.string().optional(),
});

/** @internal */
export type GlobalsQueryParameterGetGlobals$Outbound = {
  globalQueryParam?: string | undefined;
};

/** @internal */
export const GlobalsQueryParameterGetGlobals$outboundSchema: z.ZodType<
  GlobalsQueryParameterGetGlobals$Outbound,
  z.ZodTypeDef,
  GlobalsQueryParameterGetGlobals
> = z.object({
  globalQueryParam: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsQueryParameterGetGlobals$ {
  /** @deprecated use `GlobalsQueryParameterGetGlobals$inboundSchema` instead. */
  export const inboundSchema = GlobalsQueryParameterGetGlobals$inboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetGlobals$outboundSchema` instead. */
  export const outboundSchema = GlobalsQueryParameterGetGlobals$outboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetGlobals$Outbound` instead. */
  export type Outbound = GlobalsQueryParameterGetGlobals$Outbound;
}

/** @internal */
export const GlobalsQueryParameterGetRequest$inboundSchema: z.ZodType<
  GlobalsQueryParameterGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  globalQueryParam: z.string().optional(),
});

/** @internal */
export type GlobalsQueryParameterGetRequest$Outbound = {
  globalQueryParam?: string | undefined;
};

/** @internal */
export const GlobalsQueryParameterGetRequest$outboundSchema: z.ZodType<
  GlobalsQueryParameterGetRequest$Outbound,
  z.ZodTypeDef,
  GlobalsQueryParameterGetRequest
> = z.object({
  globalQueryParam: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsQueryParameterGetRequest$ {
  /** @deprecated use `GlobalsQueryParameterGetRequest$inboundSchema` instead. */
  export const inboundSchema = GlobalsQueryParameterGetRequest$inboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetRequest$outboundSchema` instead. */
  export const outboundSchema = GlobalsQueryParameterGetRequest$outboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetRequest$Outbound` instead. */
  export type Outbound = GlobalsQueryParameterGetRequest$Outbound;
}

/** @internal */
export const GlobalsQueryParameterGetArgs$inboundSchema: z.ZodType<
  GlobalsQueryParameterGetArgs,
  z.ZodTypeDef,
  unknown
> = z.object({
  globalQueryParam: z.string(),
});

/** @internal */
export type GlobalsQueryParameterGetArgs$Outbound = {
  globalQueryParam: string;
};

/** @internal */
export const GlobalsQueryParameterGetArgs$outboundSchema: z.ZodType<
  GlobalsQueryParameterGetArgs$Outbound,
  z.ZodTypeDef,
  GlobalsQueryParameterGetArgs
> = z.object({
  globalQueryParam: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsQueryParameterGetArgs$ {
  /** @deprecated use `GlobalsQueryParameterGetArgs$inboundSchema` instead. */
  export const inboundSchema = GlobalsQueryParameterGetArgs$inboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetArgs$outboundSchema` instead. */
  export const outboundSchema = GlobalsQueryParameterGetArgs$outboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetArgs$Outbound` instead. */
  export type Outbound = GlobalsQueryParameterGetArgs$Outbound;
}

/** @internal */
export const GlobalsQueryParameterGetRes$inboundSchema: z.ZodType<
  GlobalsQueryParameterGetRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  args: z.lazy(() => GlobalsQueryParameterGetArgs$inboundSchema),
});

/** @internal */
export type GlobalsQueryParameterGetRes$Outbound = {
  args: GlobalsQueryParameterGetArgs$Outbound;
};

/** @internal */
export const GlobalsQueryParameterGetRes$outboundSchema: z.ZodType<
  GlobalsQueryParameterGetRes$Outbound,
  z.ZodTypeDef,
  GlobalsQueryParameterGetRes
> = z.object({
  args: z.lazy(() => GlobalsQueryParameterGetArgs$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GlobalsQueryParameterGetRes$ {
  /** @deprecated use `GlobalsQueryParameterGetRes$inboundSchema` instead. */
  export const inboundSchema = GlobalsQueryParameterGetRes$inboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetRes$outboundSchema` instead. */
  export const outboundSchema = GlobalsQueryParameterGetRes$outboundSchema;
  /** @deprecated use `GlobalsQueryParameterGetRes$Outbound` instead. */
  export type Outbound = GlobalsQueryParameterGetRes$Outbound;
}
