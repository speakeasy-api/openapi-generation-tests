/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class HeaderParamsObjectRequest extends SpeakeasyBase {
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Header-Obj" })
    xHeaderObj: shared.SimpleObject;

    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    @SpeakeasyMetadata({ data: "header, style=simple;explode=true;name=X-Header-Obj-Explode" })
    xHeaderObjExplode: shared.SimpleObject;
}

export class HeaderParamsObjectResHeaders extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "X-Header-Obj" })
    xHeaderObj: string;

    @SpeakeasyMetadata()
    @Expose({ name: "X-Header-Obj-Explode" })
    xHeaderObjExplode: string;
}

/**
 * OK
 */
export class HeaderParamsObjectRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    @Type(() => HeaderParamsObjectResHeaders)
    headers: HeaderParamsObjectResHeaders;
}

export class HeaderParamsObjectResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: HeaderParamsObjectRes;
}
