/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type HeaderParamsPrimitiveRequest = {
    xHeaderBoolean: boolean;
    xHeaderInteger: number;
    xHeaderNumber: number;
    xHeaderString: string;
};

export type HeaderParamsPrimitiveHeaders = {
    xHeaderBoolean: string;
    xHeaderInteger: string;
    xHeaderNumber: string;
    xHeaderString: string;
};

/**
 * OK
 */
export type HeaderParamsPrimitiveRes = {
    headers: HeaderParamsPrimitiveHeaders;
};

/** @internal */
export namespace HeaderParamsPrimitiveRequest$ {
    export const inboundSchema: z.ZodType<HeaderParamsPrimitiveRequest, z.ZodTypeDef, unknown> = z
        .object({
            "X-Header-Boolean": z.boolean(),
            "X-Header-Integer": z.number().int(),
            "X-Header-Number": z.number(),
            "X-Header-String": z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                "X-Header-Boolean": "xHeaderBoolean",
                "X-Header-Integer": "xHeaderInteger",
                "X-Header-Number": "xHeaderNumber",
                "X-Header-String": "xHeaderString",
            });
        });

    export type Outbound = {
        "X-Header-Boolean": boolean;
        "X-Header-Integer": number;
        "X-Header-Number": number;
        "X-Header-String": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HeaderParamsPrimitiveRequest> = z
        .object({
            xHeaderBoolean: z.boolean(),
            xHeaderInteger: z.number().int(),
            xHeaderNumber: z.number(),
            xHeaderString: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                xHeaderBoolean: "X-Header-Boolean",
                xHeaderInteger: "X-Header-Integer",
                xHeaderNumber: "X-Header-Number",
                xHeaderString: "X-Header-String",
            });
        });
}

/** @internal */
export namespace HeaderParamsPrimitiveHeaders$ {
    export const inboundSchema: z.ZodType<HeaderParamsPrimitiveHeaders, z.ZodTypeDef, unknown> = z
        .object({
            "X-Header-Boolean": z.string(),
            "X-Header-Integer": z.string(),
            "X-Header-Number": z.string(),
            "X-Header-String": z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                "X-Header-Boolean": "xHeaderBoolean",
                "X-Header-Integer": "xHeaderInteger",
                "X-Header-Number": "xHeaderNumber",
                "X-Header-String": "xHeaderString",
            });
        });

    export type Outbound = {
        "X-Header-Boolean": string;
        "X-Header-Integer": string;
        "X-Header-Number": string;
        "X-Header-String": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HeaderParamsPrimitiveHeaders> = z
        .object({
            xHeaderBoolean: z.string(),
            xHeaderInteger: z.string(),
            xHeaderNumber: z.string(),
            xHeaderString: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                xHeaderBoolean: "X-Header-Boolean",
                xHeaderInteger: "X-Header-Integer",
                xHeaderNumber: "X-Header-Number",
                xHeaderString: "X-Header-String",
            });
        });
}

/** @internal */
export namespace HeaderParamsPrimitiveRes$ {
    export const inboundSchema: z.ZodType<HeaderParamsPrimitiveRes, z.ZodTypeDef, unknown> =
        z.object({
            headers: z.lazy(() => HeaderParamsPrimitiveHeaders$.inboundSchema),
        });

    export type Outbound = {
        headers: HeaderParamsPrimitiveHeaders$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HeaderParamsPrimitiveRes> =
        z.object({
            headers: z.lazy(() => HeaderParamsPrimitiveHeaders$.outboundSchema),
        });
}
