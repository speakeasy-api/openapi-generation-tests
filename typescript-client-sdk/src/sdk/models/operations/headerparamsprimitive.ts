/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class HeaderParamsPrimitiveRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Header-Boolean" })
    xHeaderBoolean: boolean;

    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Header-Integer" })
    xHeaderInteger: number;

    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Header-Number" })
    xHeaderNumber: number;

    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Header-String" })
    xHeaderString: string;
}

export class HeaderParamsPrimitiveResHeaders extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "X-Header-Boolean" })
    xHeaderBoolean: string;

    @SpeakeasyMetadata()
    @Expose({ name: "X-Header-Integer" })
    xHeaderInteger: string;

    @SpeakeasyMetadata()
    @Expose({ name: "X-Header-Number" })
    xHeaderNumber: string;

    @SpeakeasyMetadata()
    @Expose({ name: "X-Header-String" })
    xHeaderString: string;
}

/**
 * OK
 */
export class HeaderParamsPrimitiveRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    @Type(() => HeaderParamsPrimitiveResHeaders)
    headers: HeaderParamsPrimitiveResHeaders;
}

export class HeaderParamsPrimitiveResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: HeaderParamsPrimitiveRes;
}
