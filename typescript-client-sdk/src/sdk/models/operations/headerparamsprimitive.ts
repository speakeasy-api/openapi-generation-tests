/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type HeaderParamsPrimitiveRequest = {
    xHeaderBoolean: boolean;
    xHeaderInteger: number;
    xHeaderNumber: number;
    xHeaderString: string;
};

export type HeaderParamsPrimitiveHeaders = {
    xHeaderBoolean: string;
    xHeaderInteger: string;
    xHeaderNumber: string;
    xHeaderString: string;
};

/**
 * OK
 */
export type HeaderParamsPrimitiveRes = {
    headers: HeaderParamsPrimitiveHeaders;
};

/** @internal */
export const HeaderParamsPrimitiveRequest$inboundSchema: z.ZodType<
    HeaderParamsPrimitiveRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "X-Header-Boolean": z.boolean(),
        "X-Header-Integer": z.number().int(),
        "X-Header-Number": z.number(),
        "X-Header-String": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "X-Header-Boolean": "xHeaderBoolean",
            "X-Header-Integer": "xHeaderInteger",
            "X-Header-Number": "xHeaderNumber",
            "X-Header-String": "xHeaderString",
        });
    });

/** @internal */
export type HeaderParamsPrimitiveRequest$Outbound = {
    "X-Header-Boolean": boolean;
    "X-Header-Integer": number;
    "X-Header-Number": number;
    "X-Header-String": string;
};

/** @internal */
export const HeaderParamsPrimitiveRequest$outboundSchema: z.ZodType<
    HeaderParamsPrimitiveRequest$Outbound,
    z.ZodTypeDef,
    HeaderParamsPrimitiveRequest
> = z
    .object({
        xHeaderBoolean: z.boolean(),
        xHeaderInteger: z.number().int(),
        xHeaderNumber: z.number(),
        xHeaderString: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            xHeaderBoolean: "X-Header-Boolean",
            xHeaderInteger: "X-Header-Integer",
            xHeaderNumber: "X-Header-Number",
            xHeaderString: "X-Header-String",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HeaderParamsPrimitiveRequest$ {
    /** @deprecated use `HeaderParamsPrimitiveRequest$inboundSchema` instead. */
    export const inboundSchema = HeaderParamsPrimitiveRequest$inboundSchema;
    /** @deprecated use `HeaderParamsPrimitiveRequest$outboundSchema` instead. */
    export const outboundSchema = HeaderParamsPrimitiveRequest$outboundSchema;
    /** @deprecated use `HeaderParamsPrimitiveRequest$Outbound` instead. */
    export type Outbound = HeaderParamsPrimitiveRequest$Outbound;
}

/** @internal */
export const HeaderParamsPrimitiveHeaders$inboundSchema: z.ZodType<
    HeaderParamsPrimitiveHeaders,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "X-Header-Boolean": z.string(),
        "X-Header-Integer": z.string(),
        "X-Header-Number": z.string(),
        "X-Header-String": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "X-Header-Boolean": "xHeaderBoolean",
            "X-Header-Integer": "xHeaderInteger",
            "X-Header-Number": "xHeaderNumber",
            "X-Header-String": "xHeaderString",
        });
    });

/** @internal */
export type HeaderParamsPrimitiveHeaders$Outbound = {
    "X-Header-Boolean": string;
    "X-Header-Integer": string;
    "X-Header-Number": string;
    "X-Header-String": string;
};

/** @internal */
export const HeaderParamsPrimitiveHeaders$outboundSchema: z.ZodType<
    HeaderParamsPrimitiveHeaders$Outbound,
    z.ZodTypeDef,
    HeaderParamsPrimitiveHeaders
> = z
    .object({
        xHeaderBoolean: z.string(),
        xHeaderInteger: z.string(),
        xHeaderNumber: z.string(),
        xHeaderString: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            xHeaderBoolean: "X-Header-Boolean",
            xHeaderInteger: "X-Header-Integer",
            xHeaderNumber: "X-Header-Number",
            xHeaderString: "X-Header-String",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HeaderParamsPrimitiveHeaders$ {
    /** @deprecated use `HeaderParamsPrimitiveHeaders$inboundSchema` instead. */
    export const inboundSchema = HeaderParamsPrimitiveHeaders$inboundSchema;
    /** @deprecated use `HeaderParamsPrimitiveHeaders$outboundSchema` instead. */
    export const outboundSchema = HeaderParamsPrimitiveHeaders$outboundSchema;
    /** @deprecated use `HeaderParamsPrimitiveHeaders$Outbound` instead. */
    export type Outbound = HeaderParamsPrimitiveHeaders$Outbound;
}

/** @internal */
export const HeaderParamsPrimitiveRes$inboundSchema: z.ZodType<
    HeaderParamsPrimitiveRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    headers: z.lazy(() => HeaderParamsPrimitiveHeaders$inboundSchema),
});

/** @internal */
export type HeaderParamsPrimitiveRes$Outbound = {
    headers: HeaderParamsPrimitiveHeaders$Outbound;
};

/** @internal */
export const HeaderParamsPrimitiveRes$outboundSchema: z.ZodType<
    HeaderParamsPrimitiveRes$Outbound,
    z.ZodTypeDef,
    HeaderParamsPrimitiveRes
> = z.object({
    headers: z.lazy(() => HeaderParamsPrimitiveHeaders$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HeaderParamsPrimitiveRes$ {
    /** @deprecated use `HeaderParamsPrimitiveRes$inboundSchema` instead. */
    export const inboundSchema = HeaderParamsPrimitiveRes$inboundSchema;
    /** @deprecated use `HeaderParamsPrimitiveRes$outboundSchema` instead. */
    export const outboundSchema = HeaderParamsPrimitiveRes$outboundSchema;
    /** @deprecated use `HeaderParamsPrimitiveRes$Outbound` instead. */
    export type Outbound = HeaderParamsPrimitiveRes$Outbound;
}
