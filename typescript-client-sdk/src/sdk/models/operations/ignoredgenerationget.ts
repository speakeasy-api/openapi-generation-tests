/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * A successful response that contains the simpleObject sent in the request body
 */
export type IgnoredGenerationGetResponseBody = {
  /**
   * A simple object that uses all our supported primitive types and enums and has optional properties.
   */
  json?: shared.SimpleObject | undefined;
};

/** @internal */
export const IgnoredGenerationGetResponseBody$inboundSchema: z.ZodType<
  IgnoredGenerationGetResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.SimpleObject$inboundSchema.optional(),
});

/** @internal */
export type IgnoredGenerationGetResponseBody$Outbound = {
  json?: shared.SimpleObject$Outbound | undefined;
};

/** @internal */
export const IgnoredGenerationGetResponseBody$outboundSchema: z.ZodType<
  IgnoredGenerationGetResponseBody$Outbound,
  z.ZodTypeDef,
  IgnoredGenerationGetResponseBody
> = z.object({
  json: shared.SimpleObject$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IgnoredGenerationGetResponseBody$ {
  /** @deprecated use `IgnoredGenerationGetResponseBody$inboundSchema` instead. */
  export const inboundSchema = IgnoredGenerationGetResponseBody$inboundSchema;
  /** @deprecated use `IgnoredGenerationGetResponseBody$outboundSchema` instead. */
  export const outboundSchema = IgnoredGenerationGetResponseBody$outboundSchema;
  /** @deprecated use `IgnoredGenerationGetResponseBody$Outbound` instead. */
  export type Outbound = IgnoredGenerationGetResponseBody$Outbound;
}

export function ignoredGenerationGetResponseBodyToJSON(
  ignoredGenerationGetResponseBody: IgnoredGenerationGetResponseBody,
): string {
  return JSON.stringify(
    IgnoredGenerationGetResponseBody$outboundSchema.parse(
      ignoredGenerationGetResponseBody,
    ),
  );
}

export function ignoredGenerationGetResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<IgnoredGenerationGetResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IgnoredGenerationGetResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IgnoredGenerationGetResponseBody' from JSON`,
  );
}
