/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type IgnoredGenerationPutResponseBody = {
  json?: string | undefined;
};

/** @internal */
export const IgnoredGenerationPutResponseBody$inboundSchema: z.ZodType<
  IgnoredGenerationPutResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: z.string().optional(),
});

/** @internal */
export type IgnoredGenerationPutResponseBody$Outbound = {
  json?: string | undefined;
};

/** @internal */
export const IgnoredGenerationPutResponseBody$outboundSchema: z.ZodType<
  IgnoredGenerationPutResponseBody$Outbound,
  z.ZodTypeDef,
  IgnoredGenerationPutResponseBody
> = z.object({
  json: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IgnoredGenerationPutResponseBody$ {
  /** @deprecated use `IgnoredGenerationPutResponseBody$inboundSchema` instead. */
  export const inboundSchema = IgnoredGenerationPutResponseBody$inboundSchema;
  /** @deprecated use `IgnoredGenerationPutResponseBody$outboundSchema` instead. */
  export const outboundSchema = IgnoredGenerationPutResponseBody$outboundSchema;
  /** @deprecated use `IgnoredGenerationPutResponseBody$Outbound` instead. */
  export type Outbound = IgnoredGenerationPutResponseBody$Outbound;
}

export function ignoredGenerationPutResponseBodyToJSON(
  ignoredGenerationPutResponseBody: IgnoredGenerationPutResponseBody,
): string {
  return JSON.stringify(
    IgnoredGenerationPutResponseBody$outboundSchema.parse(
      ignoredGenerationPutResponseBody,
    ),
  );
}

export function ignoredGenerationPutResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<IgnoredGenerationPutResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IgnoredGenerationPutResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IgnoredGenerationPutResponseBody' from JSON`,
  );
}
