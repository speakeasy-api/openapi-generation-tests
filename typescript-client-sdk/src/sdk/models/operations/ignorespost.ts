/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type IgnoresPostRequestBody = {
    callbackUrl?: string | undefined;
    testProp?: string | undefined;
};

export type IgnoresPostRequest = {
    requestBody: IgnoresPostRequestBody;
    testParam?: string | undefined;
};

/** @internal */
export const IgnoresPostRequestBody$inboundSchema: z.ZodType<
    IgnoresPostRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    callbackUrl: z.string().optional(),
    testProp: z.string().optional(),
});

/** @internal */
export type IgnoresPostRequestBody$Outbound = {
    callbackUrl?: string | undefined;
    testProp?: string | undefined;
};

/** @internal */
export const IgnoresPostRequestBody$outboundSchema: z.ZodType<
    IgnoresPostRequestBody$Outbound,
    z.ZodTypeDef,
    IgnoresPostRequestBody
> = z.object({
    callbackUrl: z.string().optional(),
    testProp: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IgnoresPostRequestBody$ {
    /** @deprecated use `IgnoresPostRequestBody$inboundSchema` instead. */
    export const inboundSchema = IgnoresPostRequestBody$inboundSchema;
    /** @deprecated use `IgnoresPostRequestBody$outboundSchema` instead. */
    export const outboundSchema = IgnoresPostRequestBody$outboundSchema;
    /** @deprecated use `IgnoresPostRequestBody$Outbound` instead. */
    export type Outbound = IgnoresPostRequestBody$Outbound;
}

/** @internal */
export const IgnoresPostRequest$inboundSchema: z.ZodType<
    IgnoresPostRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.lazy(() => IgnoresPostRequestBody$inboundSchema),
        testParam: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type IgnoresPostRequest$Outbound = {
    RequestBody: IgnoresPostRequestBody$Outbound;
    testParam?: string | undefined;
};

/** @internal */
export const IgnoresPostRequest$outboundSchema: z.ZodType<
    IgnoresPostRequest$Outbound,
    z.ZodTypeDef,
    IgnoresPostRequest
> = z
    .object({
        requestBody: z.lazy(() => IgnoresPostRequestBody$outboundSchema),
        testParam: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IgnoresPostRequest$ {
    /** @deprecated use `IgnoresPostRequest$inboundSchema` instead. */
    export const inboundSchema = IgnoresPostRequest$inboundSchema;
    /** @deprecated use `IgnoresPostRequest$outboundSchema` instead. */
    export const outboundSchema = IgnoresPostRequest$outboundSchema;
    /** @deprecated use `IgnoresPostRequest$Outbound` instead. */
    export type Outbound = IgnoresPostRequest$Outbound;
}
