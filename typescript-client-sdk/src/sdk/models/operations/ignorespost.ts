/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type IgnoresPostRequestBody = {
    callbackUrl?: string | undefined;
    testProp?: string | undefined;
};

export type IgnoresPostRequest = {
    requestBody: IgnoresPostRequestBody;
    testParam?: string | undefined;
};

/** @internal */
export namespace IgnoresPostRequestBody$ {
    export const inboundSchema: z.ZodType<IgnoresPostRequestBody, z.ZodTypeDef, unknown> = z.object(
        {
            callbackUrl: z.string().optional(),
            testProp: z.string().optional(),
        }
    );

    export type Outbound = {
        callbackUrl?: string | undefined;
        testProp?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, IgnoresPostRequestBody> =
        z.object({
            callbackUrl: z.string().optional(),
            testProp: z.string().optional(),
        });
}

/** @internal */
export namespace IgnoresPostRequest$ {
    export const inboundSchema: z.ZodType<IgnoresPostRequest, z.ZodTypeDef, unknown> = z
        .object({
            RequestBody: z.lazy(() => IgnoresPostRequestBody$.inboundSchema),
            testParam: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                RequestBody: "requestBody",
            });
        });

    export type Outbound = {
        RequestBody: IgnoresPostRequestBody$.Outbound;
        testParam?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, IgnoresPostRequest> = z
        .object({
            requestBody: z.lazy(() => IgnoresPostRequestBody$.outboundSchema),
            testParam: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                requestBody: "RequestBody",
            });
        });
}
