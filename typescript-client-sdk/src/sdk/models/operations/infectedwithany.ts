/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

/**
 * OK
 */
export type InfectedWithAnyRes = {
    json: shared.InfectedWithAny;
};

/** @internal */
export const InfectedWithAnyRes$inboundSchema: z.ZodType<
    InfectedWithAnyRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    json: z.lazy(() => shared.InfectedWithAny$inboundSchema),
});

/** @internal */
export type InfectedWithAnyRes$Outbound = {
    json: shared.InfectedWithAny$Outbound;
};

/** @internal */
export const InfectedWithAnyRes$outboundSchema: z.ZodType<
    InfectedWithAnyRes$Outbound,
    z.ZodTypeDef,
    InfectedWithAnyRes
> = z.object({
    json: z.lazy(() => shared.InfectedWithAny$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InfectedWithAnyRes$ {
    /** @deprecated use `InfectedWithAnyRes$inboundSchema` instead. */
    export const inboundSchema = InfectedWithAnyRes$inboundSchema;
    /** @deprecated use `InfectedWithAnyRes$outboundSchema` instead. */
    export const outboundSchema = InfectedWithAnyRes$outboundSchema;
    /** @deprecated use `InfectedWithAnyRes$Outbound` instead. */
    export type Outbound = InfectedWithAnyRes$Outbound;
}
