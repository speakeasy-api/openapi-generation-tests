/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type JsonQueryParamsObjectRequest = {
    deepObjParam: shared.DeepObject;
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    simpleObjParam: shared.SimpleObject;
};

export type JsonQueryParamsObjectArgs = {
    deepObjParam: string;
    simpleObjParam: string;
};

/**
 * OK
 */
export type JsonQueryParamsObjectRes = {
    args: JsonQueryParamsObjectArgs;
    url: string;
};

/** @internal */
export namespace JsonQueryParamsObjectRequest$ {
    export const inboundSchema: z.ZodType<JsonQueryParamsObjectRequest, z.ZodTypeDef, unknown> =
        z.object({
            deepObjParam: shared.DeepObject$.inboundSchema,
            simpleObjParam: shared.SimpleObject$.inboundSchema,
        });

    export type Outbound = {
        deepObjParam: shared.DeepObject$.Outbound;
        simpleObjParam: shared.SimpleObject$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JsonQueryParamsObjectRequest> =
        z.object({
            deepObjParam: shared.DeepObject$.outboundSchema,
            simpleObjParam: shared.SimpleObject$.outboundSchema,
        });
}

/** @internal */
export namespace JsonQueryParamsObjectArgs$ {
    export const inboundSchema: z.ZodType<JsonQueryParamsObjectArgs, z.ZodTypeDef, unknown> =
        z.object({
            deepObjParam: z.string(),
            simpleObjParam: z.string(),
        });

    export type Outbound = {
        deepObjParam: string;
        simpleObjParam: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JsonQueryParamsObjectArgs> =
        z.object({
            deepObjParam: z.string(),
            simpleObjParam: z.string(),
        });
}

/** @internal */
export namespace JsonQueryParamsObjectRes$ {
    export const inboundSchema: z.ZodType<JsonQueryParamsObjectRes, z.ZodTypeDef, unknown> =
        z.object({
            args: z.lazy(() => JsonQueryParamsObjectArgs$.inboundSchema),
            url: z.string(),
        });

    export type Outbound = {
        args: JsonQueryParamsObjectArgs$.Outbound;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JsonQueryParamsObjectRes> =
        z.object({
            args: z.lazy(() => JsonQueryParamsObjectArgs$.outboundSchema),
            url: z.string(),
        });
}
