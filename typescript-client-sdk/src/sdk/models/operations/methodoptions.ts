/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const MethodOptionsServerList = ["http://localhost:35456"] as const;

export type MethodOptionsResponse = {
    headers: { [k: string]: Array<string> };
};

/** @internal */
export const MethodOptionsResponse$inboundSchema: z.ZodType<
    MethodOptionsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Headers: z.record(z.array(z.string())),
    })
    .transform((v) => {
        return remap$(v, {
            Headers: "headers",
        });
    });

/** @internal */
export type MethodOptionsResponse$Outbound = {
    Headers: { [k: string]: Array<string> };
};

/** @internal */
export const MethodOptionsResponse$outboundSchema: z.ZodType<
    MethodOptionsResponse$Outbound,
    z.ZodTypeDef,
    MethodOptionsResponse
> = z
    .object({
        headers: z.record(z.array(z.string())),
    })
    .transform((v) => {
        return remap$(v, {
            headers: "Headers",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MethodOptionsResponse$ {
    /** @deprecated use `MethodOptionsResponse$inboundSchema` instead. */
    export const inboundSchema = MethodOptionsResponse$inboundSchema;
    /** @deprecated use `MethodOptionsResponse$outboundSchema` instead. */
    export const outboundSchema = MethodOptionsResponse$outboundSchema;
    /** @deprecated use `MethodOptionsResponse$Outbound` instead. */
    export type Outbound = MethodOptionsResponse$Outbound;
}
