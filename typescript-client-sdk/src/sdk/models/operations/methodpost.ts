/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const MethodPostServerList = [
  "http://localhost:35456",
] as const;

export type MethodPostRequestBody = {
  id?: string | undefined;
};

/**
 * OK
 */
export type MethodPostResponseBody = {
  status?: string | undefined;
};

/** @internal */
export const MethodPostRequestBody$inboundSchema: z.ZodType<
  MethodPostRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
});

/** @internal */
export type MethodPostRequestBody$Outbound = {
  id?: string | undefined;
};

/** @internal */
export const MethodPostRequestBody$outboundSchema: z.ZodType<
  MethodPostRequestBody$Outbound,
  z.ZodTypeDef,
  MethodPostRequestBody
> = z.object({
  id: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MethodPostRequestBody$ {
  /** @deprecated use `MethodPostRequestBody$inboundSchema` instead. */
  export const inboundSchema = MethodPostRequestBody$inboundSchema;
  /** @deprecated use `MethodPostRequestBody$outboundSchema` instead. */
  export const outboundSchema = MethodPostRequestBody$outboundSchema;
  /** @deprecated use `MethodPostRequestBody$Outbound` instead. */
  export type Outbound = MethodPostRequestBody$Outbound;
}

export function methodPostRequestBodyToJSON(
  methodPostRequestBody: MethodPostRequestBody,
): string {
  return JSON.stringify(
    MethodPostRequestBody$outboundSchema.parse(methodPostRequestBody),
  );
}

export function methodPostRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<MethodPostRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MethodPostRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MethodPostRequestBody' from JSON`,
  );
}

/** @internal */
export const MethodPostResponseBody$inboundSchema: z.ZodType<
  MethodPostResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string().optional(),
});

/** @internal */
export type MethodPostResponseBody$Outbound = {
  status?: string | undefined;
};

/** @internal */
export const MethodPostResponseBody$outboundSchema: z.ZodType<
  MethodPostResponseBody$Outbound,
  z.ZodTypeDef,
  MethodPostResponseBody
> = z.object({
  status: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MethodPostResponseBody$ {
  /** @deprecated use `MethodPostResponseBody$inboundSchema` instead. */
  export const inboundSchema = MethodPostResponseBody$inboundSchema;
  /** @deprecated use `MethodPostResponseBody$outboundSchema` instead. */
  export const outboundSchema = MethodPostResponseBody$outboundSchema;
  /** @deprecated use `MethodPostResponseBody$Outbound` instead. */
  export type Outbound = MethodPostResponseBody$Outbound;
}

export function methodPostResponseBodyToJSON(
  methodPostResponseBody: MethodPostResponseBody,
): string {
  return JSON.stringify(
    MethodPostResponseBody$outboundSchema.parse(methodPostResponseBody),
  );
}

export function methodPostResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<MethodPostResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MethodPostResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MethodPostResponseBody' from JSON`,
  );
}
