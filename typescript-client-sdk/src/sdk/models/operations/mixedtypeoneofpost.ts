/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type MixedTypeOneOfPostRequestBody = shared.SimpleObject | string | number;

export type MixedTypeOneOfPostJson = shared.SimpleObject | string | number;

/**
 * OK
 */
export type MixedTypeOneOfPostRes = {
    json: shared.SimpleObject | string | number;
};

/** @internal */
export namespace MixedTypeOneOfPostRequestBody$ {
    export const inboundSchema: z.ZodType<MixedTypeOneOfPostRequestBody, z.ZodTypeDef, unknown> =
        z.union([shared.SimpleObject$.inboundSchema, z.string(), z.number().int()]);

    export type Outbound = shared.SimpleObject$.Outbound | string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MixedTypeOneOfPostRequestBody> =
        z.union([shared.SimpleObject$.outboundSchema, z.string(), z.number().int()]);
}

/** @internal */
export namespace MixedTypeOneOfPostJson$ {
    export const inboundSchema: z.ZodType<MixedTypeOneOfPostJson, z.ZodTypeDef, unknown> = z.union([
        shared.SimpleObject$.inboundSchema,
        z.string(),
        z.number().int(),
    ]);

    export type Outbound = shared.SimpleObject$.Outbound | string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MixedTypeOneOfPostJson> =
        z.union([shared.SimpleObject$.outboundSchema, z.string(), z.number().int()]);
}

/** @internal */
export namespace MixedTypeOneOfPostRes$ {
    export const inboundSchema: z.ZodType<MixedTypeOneOfPostRes, z.ZodTypeDef, unknown> = z.object({
        json: z.union([shared.SimpleObject$.inboundSchema, z.string(), z.number().int()]),
    });

    export type Outbound = {
        json: shared.SimpleObject$.Outbound | string | number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MixedTypeOneOfPostRes> =
        z.object({
            json: z.union([shared.SimpleObject$.outboundSchema, z.string(), z.number().int()]),
        });
}
