/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export const MultipleMixedSchemeAuthServerList = ["http://localhost:35456"] as const;

export type MultipleMixedSchemeAuthSecurity = {
    apiKeyAuthNew: string;
    basicAuth: shared.SchemeBasicAuth;
};

/** @internal */
export const MultipleMixedSchemeAuthSecurity$inboundSchema: z.ZodType<
    MultipleMixedSchemeAuthSecurity,
    z.ZodTypeDef,
    unknown
> = z.object({
    apiKeyAuthNew: z.string(),
    basicAuth: shared.SchemeBasicAuth$inboundSchema,
});

/** @internal */
export type MultipleMixedSchemeAuthSecurity$Outbound = {
    apiKeyAuthNew: string;
    basicAuth: shared.SchemeBasicAuth$Outbound;
};

/** @internal */
export const MultipleMixedSchemeAuthSecurity$outboundSchema: z.ZodType<
    MultipleMixedSchemeAuthSecurity$Outbound,
    z.ZodTypeDef,
    MultipleMixedSchemeAuthSecurity
> = z.object({
    apiKeyAuthNew: z.string(),
    basicAuth: shared.SchemeBasicAuth$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MultipleMixedSchemeAuthSecurity$ {
    /** @deprecated use `MultipleMixedSchemeAuthSecurity$inboundSchema` instead. */
    export const inboundSchema = MultipleMixedSchemeAuthSecurity$inboundSchema;
    /** @deprecated use `MultipleMixedSchemeAuthSecurity$outboundSchema` instead. */
    export const outboundSchema = MultipleMixedSchemeAuthSecurity$outboundSchema;
    /** @deprecated use `MultipleMixedSchemeAuthSecurity$Outbound` instead. */
    export type Outbound = MultipleMixedSchemeAuthSecurity$Outbound;
}
