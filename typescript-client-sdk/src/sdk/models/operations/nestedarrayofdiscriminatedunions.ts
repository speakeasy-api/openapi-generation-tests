/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type NestedArrayOfDiscriminatedUnionsRes = {
  json: shared.NestedArrayOfDiscriminatedUnions;
};

/** @internal */
export const NestedArrayOfDiscriminatedUnionsRes$inboundSchema: z.ZodType<
  NestedArrayOfDiscriminatedUnionsRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: z.lazy(() => shared.NestedArrayOfDiscriminatedUnions$inboundSchema),
});

/** @internal */
export type NestedArrayOfDiscriminatedUnionsRes$Outbound = {
  json: shared.NestedArrayOfDiscriminatedUnions$Outbound;
};

/** @internal */
export const NestedArrayOfDiscriminatedUnionsRes$outboundSchema: z.ZodType<
  NestedArrayOfDiscriminatedUnionsRes$Outbound,
  z.ZodTypeDef,
  NestedArrayOfDiscriminatedUnionsRes
> = z.object({
  json: z.lazy(() => shared.NestedArrayOfDiscriminatedUnions$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NestedArrayOfDiscriminatedUnionsRes$ {
  /** @deprecated use `NestedArrayOfDiscriminatedUnionsRes$inboundSchema` instead. */
  export const inboundSchema =
    NestedArrayOfDiscriminatedUnionsRes$inboundSchema;
  /** @deprecated use `NestedArrayOfDiscriminatedUnionsRes$outboundSchema` instead. */
  export const outboundSchema =
    NestedArrayOfDiscriminatedUnionsRes$outboundSchema;
  /** @deprecated use `NestedArrayOfDiscriminatedUnionsRes$Outbound` instead. */
  export type Outbound = NestedArrayOfDiscriminatedUnionsRes$Outbound;
}

export function nestedArrayOfDiscriminatedUnionsResToJSON(
  nestedArrayOfDiscriminatedUnionsRes: NestedArrayOfDiscriminatedUnionsRes,
): string {
  return JSON.stringify(
    NestedArrayOfDiscriminatedUnionsRes$outboundSchema.parse(
      nestedArrayOfDiscriminatedUnionsRes,
    ),
  );
}

export function nestedArrayOfDiscriminatedUnionsResFromJSON(
  jsonString: string,
): SafeParseResult<NestedArrayOfDiscriminatedUnionsRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NestedArrayOfDiscriminatedUnionsRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NestedArrayOfDiscriminatedUnionsRes' from JSON`,
  );
}
