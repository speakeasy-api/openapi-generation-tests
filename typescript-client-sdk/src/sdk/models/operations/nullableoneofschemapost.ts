/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type NullableOneOfSchemaPostRequestBody = shared.TypedObject1 | shared.TypedObject2;

export type NullableOneOfSchemaPostJson = shared.TypedObject1 | shared.TypedObject2;

/**
 * OK
 */
export type NullableOneOfSchemaPostRes = {
    json: shared.TypedObject1 | shared.TypedObject2 | null;
};

/** @internal */
export namespace NullableOneOfSchemaPostRequestBody$ {
    export const inboundSchema: z.ZodType<
        NullableOneOfSchemaPostRequestBody,
        z.ZodTypeDef,
        unknown
    > = z.union([shared.TypedObject1$.inboundSchema, shared.TypedObject2$.inboundSchema]);

    export type Outbound = shared.TypedObject1$.Outbound | shared.TypedObject2$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        NullableOneOfSchemaPostRequestBody
    > = z.union([shared.TypedObject1$.outboundSchema, shared.TypedObject2$.outboundSchema]);
}

/** @internal */
export namespace NullableOneOfSchemaPostJson$ {
    export const inboundSchema: z.ZodType<NullableOneOfSchemaPostJson, z.ZodTypeDef, unknown> =
        z.union([shared.TypedObject1$.inboundSchema, shared.TypedObject2$.inboundSchema]);

    export type Outbound = shared.TypedObject1$.Outbound | shared.TypedObject2$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NullableOneOfSchemaPostJson> =
        z.union([shared.TypedObject1$.outboundSchema, shared.TypedObject2$.outboundSchema]);
}

/** @internal */
export namespace NullableOneOfSchemaPostRes$ {
    export const inboundSchema: z.ZodType<NullableOneOfSchemaPostRes, z.ZodTypeDef, unknown> =
        z.object({
            json: z.nullable(
                z.union([shared.TypedObject1$.inboundSchema, shared.TypedObject2$.inboundSchema])
            ),
        });

    export type Outbound = {
        json: shared.TypedObject1$.Outbound | shared.TypedObject2$.Outbound | null;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NullableOneOfSchemaPostRes> =
        z.object({
            json: z.nullable(
                z.union([shared.TypedObject1$.outboundSchema, shared.TypedObject2$.outboundSchema])
            ),
        });
}
