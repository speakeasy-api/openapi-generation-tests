/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type NullableOptionalFieldsPostRequestBody = {
  nullableOptional?: string | null | undefined;
  nullableRequired: string | null;
  optional?: string | undefined;
};

export type NullableOptionalFieldsPostJson = {
  nullableOptional?: string | null | undefined;
  nullableRequired: string | null;
  optional?: string | undefined;
};

/**
 * OK
 */
export type NullableOptionalFieldsPostResponseBody = {
  json: NullableOptionalFieldsPostJson;
};

/** @internal */
export const NullableOptionalFieldsPostRequestBody$inboundSchema: z.ZodType<
  NullableOptionalFieldsPostRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  nullableOptional: z.nullable(z.string()).optional(),
  nullableRequired: z.nullable(z.string()),
  optional: z.string().optional(),
});

/** @internal */
export type NullableOptionalFieldsPostRequestBody$Outbound = {
  nullableOptional?: string | null | undefined;
  nullableRequired: string | null;
  optional?: string | undefined;
};

/** @internal */
export const NullableOptionalFieldsPostRequestBody$outboundSchema: z.ZodType<
  NullableOptionalFieldsPostRequestBody$Outbound,
  z.ZodTypeDef,
  NullableOptionalFieldsPostRequestBody
> = z.object({
  nullableOptional: z.nullable(z.string()).optional(),
  nullableRequired: z.nullable(z.string()),
  optional: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableOptionalFieldsPostRequestBody$ {
  /** @deprecated use `NullableOptionalFieldsPostRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    NullableOptionalFieldsPostRequestBody$inboundSchema;
  /** @deprecated use `NullableOptionalFieldsPostRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    NullableOptionalFieldsPostRequestBody$outboundSchema;
  /** @deprecated use `NullableOptionalFieldsPostRequestBody$Outbound` instead. */
  export type Outbound = NullableOptionalFieldsPostRequestBody$Outbound;
}

export function nullableOptionalFieldsPostRequestBodyToJSON(
  nullableOptionalFieldsPostRequestBody: NullableOptionalFieldsPostRequestBody,
): string {
  return JSON.stringify(
    NullableOptionalFieldsPostRequestBody$outboundSchema.parse(
      nullableOptionalFieldsPostRequestBody,
    ),
  );
}

export function nullableOptionalFieldsPostRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<NullableOptionalFieldsPostRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NullableOptionalFieldsPostRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableOptionalFieldsPostRequestBody' from JSON`,
  );
}

/** @internal */
export const NullableOptionalFieldsPostJson$inboundSchema: z.ZodType<
  NullableOptionalFieldsPostJson,
  z.ZodTypeDef,
  unknown
> = z.object({
  nullableOptional: z.nullable(z.string()).optional(),
  nullableRequired: z.nullable(z.string()),
  optional: z.string().optional(),
});

/** @internal */
export type NullableOptionalFieldsPostJson$Outbound = {
  nullableOptional?: string | null | undefined;
  nullableRequired: string | null;
  optional?: string | undefined;
};

/** @internal */
export const NullableOptionalFieldsPostJson$outboundSchema: z.ZodType<
  NullableOptionalFieldsPostJson$Outbound,
  z.ZodTypeDef,
  NullableOptionalFieldsPostJson
> = z.object({
  nullableOptional: z.nullable(z.string()).optional(),
  nullableRequired: z.nullable(z.string()),
  optional: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableOptionalFieldsPostJson$ {
  /** @deprecated use `NullableOptionalFieldsPostJson$inboundSchema` instead. */
  export const inboundSchema = NullableOptionalFieldsPostJson$inboundSchema;
  /** @deprecated use `NullableOptionalFieldsPostJson$outboundSchema` instead. */
  export const outboundSchema = NullableOptionalFieldsPostJson$outboundSchema;
  /** @deprecated use `NullableOptionalFieldsPostJson$Outbound` instead. */
  export type Outbound = NullableOptionalFieldsPostJson$Outbound;
}

export function nullableOptionalFieldsPostJsonToJSON(
  nullableOptionalFieldsPostJson: NullableOptionalFieldsPostJson,
): string {
  return JSON.stringify(
    NullableOptionalFieldsPostJson$outboundSchema.parse(
      nullableOptionalFieldsPostJson,
    ),
  );
}

export function nullableOptionalFieldsPostJsonFromJSON(
  jsonString: string,
): SafeParseResult<NullableOptionalFieldsPostJson, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NullableOptionalFieldsPostJson$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableOptionalFieldsPostJson' from JSON`,
  );
}

/** @internal */
export const NullableOptionalFieldsPostResponseBody$inboundSchema: z.ZodType<
  NullableOptionalFieldsPostResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: z.lazy(() => NullableOptionalFieldsPostJson$inboundSchema),
});

/** @internal */
export type NullableOptionalFieldsPostResponseBody$Outbound = {
  json: NullableOptionalFieldsPostJson$Outbound;
};

/** @internal */
export const NullableOptionalFieldsPostResponseBody$outboundSchema: z.ZodType<
  NullableOptionalFieldsPostResponseBody$Outbound,
  z.ZodTypeDef,
  NullableOptionalFieldsPostResponseBody
> = z.object({
  json: z.lazy(() => NullableOptionalFieldsPostJson$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableOptionalFieldsPostResponseBody$ {
  /** @deprecated use `NullableOptionalFieldsPostResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    NullableOptionalFieldsPostResponseBody$inboundSchema;
  /** @deprecated use `NullableOptionalFieldsPostResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    NullableOptionalFieldsPostResponseBody$outboundSchema;
  /** @deprecated use `NullableOptionalFieldsPostResponseBody$Outbound` instead. */
  export type Outbound = NullableOptionalFieldsPostResponseBody$Outbound;
}

export function nullableOptionalFieldsPostResponseBodyToJSON(
  nullableOptionalFieldsPostResponseBody:
    NullableOptionalFieldsPostResponseBody,
): string {
  return JSON.stringify(
    NullableOptionalFieldsPostResponseBody$outboundSchema.parse(
      nullableOptionalFieldsPostResponseBody,
    ),
  );
}

export function nullableOptionalFieldsPostResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<NullableOptionalFieldsPostResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      NullableOptionalFieldsPostResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullableOptionalFieldsPostResponseBody' from JSON`,
  );
}
