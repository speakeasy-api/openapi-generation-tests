/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { Decimal as Decimal$ } from "../../types/decimal.js";
import { ClosedEnum } from "../../types/enums.js";

export const NullableRequiredEnum = {
  First: "first",
  Second: "second",
  Null: "null",
} as const;
export type NullableRequiredEnum = ClosedEnum<typeof NullableRequiredEnum>;

export type NullableRequiredPropertyPostRequestBody = {
  nullableOptionalInt?: number | null | undefined;
  nullableRequiredArray: Array<number> | null;
  nullableRequiredBigIntStr: bigint | null;
  nullableRequiredDateTime: Date | null;
  nullableRequiredDecimalStr: Decimal$ | number | null;
  nullableRequiredEnum: NullableRequiredEnum | null;
  nullableRequiredInt: number | null;
};

export const NullableRequiredPropertyPostNullableRequiredEnum = {
  First: "first",
  Second: "second",
  Null: "null",
} as const;
export type NullableRequiredPropertyPostNullableRequiredEnum = ClosedEnum<
  typeof NullableRequiredPropertyPostNullableRequiredEnum
>;

export type NullableRequiredPropertyPostJson = {
  nullableOptionalInt?: number | null | undefined;
  nullableRequiredArray: Array<number> | null;
  nullableRequiredBigIntStr: bigint | null;
  nullableRequiredDateTime: Date | null;
  nullableRequiredDecimalStr: Decimal$ | number | null;
  nullableRequiredEnum: NullableRequiredPropertyPostNullableRequiredEnum | null;
  nullableRequiredInt: number | null;
  xSpeakeasyTestInternalDirectives?: any | undefined;
};

/**
 * OK
 */
export type NullableRequiredPropertyPostResponseBody = {
  data?: string | undefined;
  json?: NullableRequiredPropertyPostJson | undefined;
};

/** @internal */
export const NullableRequiredEnum$inboundSchema: z.ZodNativeEnum<
  typeof NullableRequiredEnum
> = z.nativeEnum(NullableRequiredEnum);

/** @internal */
export const NullableRequiredEnum$outboundSchema: z.ZodNativeEnum<
  typeof NullableRequiredEnum
> = NullableRequiredEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRequiredEnum$ {
  /** @deprecated use `NullableRequiredEnum$inboundSchema` instead. */
  export const inboundSchema = NullableRequiredEnum$inboundSchema;
  /** @deprecated use `NullableRequiredEnum$outboundSchema` instead. */
  export const outboundSchema = NullableRequiredEnum$outboundSchema;
}

/** @internal */
export const NullableRequiredPropertyPostRequestBody$inboundSchema: z.ZodType<
  NullableRequiredPropertyPostRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  NullableOptionalInt: z.nullable(z.number().int()).optional(),
  NullableRequiredArray: z.nullable(z.array(z.number())),
  NullableRequiredBigIntStr: z.nullable(z.string().transform(v => BigInt(v))),
  NullableRequiredDateTime: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  NullableRequiredDecimalStr: z.nullable(
    z.string().transform(v => new Decimal$(v)),
  ),
  NullableRequiredEnum: z.nullable(NullableRequiredEnum$inboundSchema),
  NullableRequiredInt: z.nullable(z.number().int()),
}).transform((v) => {
  return remap$(v, {
    "NullableOptionalInt": "nullableOptionalInt",
    "NullableRequiredArray": "nullableRequiredArray",
    "NullableRequiredBigIntStr": "nullableRequiredBigIntStr",
    "NullableRequiredDateTime": "nullableRequiredDateTime",
    "NullableRequiredDecimalStr": "nullableRequiredDecimalStr",
    "NullableRequiredEnum": "nullableRequiredEnum",
    "NullableRequiredInt": "nullableRequiredInt",
  });
});

/** @internal */
export type NullableRequiredPropertyPostRequestBody$Outbound = {
  NullableOptionalInt?: number | null | undefined;
  NullableRequiredArray: Array<number> | null;
  NullableRequiredBigIntStr: string | null;
  NullableRequiredDateTime: string | null;
  NullableRequiredDecimalStr: string | null;
  NullableRequiredEnum: string | null;
  NullableRequiredInt: number | null;
};

/** @internal */
export const NullableRequiredPropertyPostRequestBody$outboundSchema: z.ZodType<
  NullableRequiredPropertyPostRequestBody$Outbound,
  z.ZodTypeDef,
  NullableRequiredPropertyPostRequestBody
> = z.object({
  nullableOptionalInt: z.nullable(z.number().int()).optional(),
  nullableRequiredArray: z.nullable(z.array(z.number())),
  nullableRequiredBigIntStr: z.nullable(z.bigint().transform(v => `${v}`)),
  nullableRequiredDateTime: z.nullable(
    z.date().transform(v => v.toISOString()),
  ),
  nullableRequiredDecimalStr: z.nullable(
    z.union([z.instanceof(Decimal$), z.number()]).transform(v => `${v}`),
  ),
  nullableRequiredEnum: z.nullable(NullableRequiredEnum$outboundSchema),
  nullableRequiredInt: z.nullable(z.number().int()),
}).transform((v) => {
  return remap$(v, {
    nullableOptionalInt: "NullableOptionalInt",
    nullableRequiredArray: "NullableRequiredArray",
    nullableRequiredBigIntStr: "NullableRequiredBigIntStr",
    nullableRequiredDateTime: "NullableRequiredDateTime",
    nullableRequiredDecimalStr: "NullableRequiredDecimalStr",
    nullableRequiredEnum: "NullableRequiredEnum",
    nullableRequiredInt: "NullableRequiredInt",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRequiredPropertyPostRequestBody$ {
  /** @deprecated use `NullableRequiredPropertyPostRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    NullableRequiredPropertyPostRequestBody$inboundSchema;
  /** @deprecated use `NullableRequiredPropertyPostRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    NullableRequiredPropertyPostRequestBody$outboundSchema;
  /** @deprecated use `NullableRequiredPropertyPostRequestBody$Outbound` instead. */
  export type Outbound = NullableRequiredPropertyPostRequestBody$Outbound;
}

/** @internal */
export const NullableRequiredPropertyPostNullableRequiredEnum$inboundSchema:
  z.ZodNativeEnum<typeof NullableRequiredPropertyPostNullableRequiredEnum> = z
    .nativeEnum(NullableRequiredPropertyPostNullableRequiredEnum);

/** @internal */
export const NullableRequiredPropertyPostNullableRequiredEnum$outboundSchema:
  z.ZodNativeEnum<typeof NullableRequiredPropertyPostNullableRequiredEnum> =
    NullableRequiredPropertyPostNullableRequiredEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRequiredPropertyPostNullableRequiredEnum$ {
  /** @deprecated use `NullableRequiredPropertyPostNullableRequiredEnum$inboundSchema` instead. */
  export const inboundSchema =
    NullableRequiredPropertyPostNullableRequiredEnum$inboundSchema;
  /** @deprecated use `NullableRequiredPropertyPostNullableRequiredEnum$outboundSchema` instead. */
  export const outboundSchema =
    NullableRequiredPropertyPostNullableRequiredEnum$outboundSchema;
}

/** @internal */
export const NullableRequiredPropertyPostJson$inboundSchema: z.ZodType<
  NullableRequiredPropertyPostJson,
  z.ZodTypeDef,
  unknown
> = z.object({
  NullableOptionalInt: z.nullable(z.number().int()).optional(),
  NullableRequiredArray: z.nullable(z.array(z.number())),
  NullableRequiredBigIntStr: z.nullable(z.string().transform(v => BigInt(v))),
  NullableRequiredDateTime: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  NullableRequiredDecimalStr: z.nullable(
    z.string().transform(v => new Decimal$(v)),
  ),
  NullableRequiredEnum: z.nullable(
    NullableRequiredPropertyPostNullableRequiredEnum$inboundSchema,
  ),
  NullableRequiredInt: z.nullable(z.number().int()),
  "x-speakeasy-test-internal-directives": z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    "NullableOptionalInt": "nullableOptionalInt",
    "NullableRequiredArray": "nullableRequiredArray",
    "NullableRequiredBigIntStr": "nullableRequiredBigIntStr",
    "NullableRequiredDateTime": "nullableRequiredDateTime",
    "NullableRequiredDecimalStr": "nullableRequiredDecimalStr",
    "NullableRequiredEnum": "nullableRequiredEnum",
    "NullableRequiredInt": "nullableRequiredInt",
    "x-speakeasy-test-internal-directives": "xSpeakeasyTestInternalDirectives",
  });
});

/** @internal */
export type NullableRequiredPropertyPostJson$Outbound = {
  NullableOptionalInt?: number | null | undefined;
  NullableRequiredArray: Array<number> | null;
  NullableRequiredBigIntStr: string | null;
  NullableRequiredDateTime: string | null;
  NullableRequiredDecimalStr: string | null;
  NullableRequiredEnum: string | null;
  NullableRequiredInt: number | null;
  "x-speakeasy-test-internal-directives"?: any | undefined;
};

/** @internal */
export const NullableRequiredPropertyPostJson$outboundSchema: z.ZodType<
  NullableRequiredPropertyPostJson$Outbound,
  z.ZodTypeDef,
  NullableRequiredPropertyPostJson
> = z.object({
  nullableOptionalInt: z.nullable(z.number().int()).optional(),
  nullableRequiredArray: z.nullable(z.array(z.number())),
  nullableRequiredBigIntStr: z.nullable(z.bigint().transform(v => `${v}`)),
  nullableRequiredDateTime: z.nullable(
    z.date().transform(v => v.toISOString()),
  ),
  nullableRequiredDecimalStr: z.nullable(
    z.union([z.instanceof(Decimal$), z.number()]).transform(v => `${v}`),
  ),
  nullableRequiredEnum: z.nullable(
    NullableRequiredPropertyPostNullableRequiredEnum$outboundSchema,
  ),
  nullableRequiredInt: z.nullable(z.number().int()),
  xSpeakeasyTestInternalDirectives: z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    nullableOptionalInt: "NullableOptionalInt",
    nullableRequiredArray: "NullableRequiredArray",
    nullableRequiredBigIntStr: "NullableRequiredBigIntStr",
    nullableRequiredDateTime: "NullableRequiredDateTime",
    nullableRequiredDecimalStr: "NullableRequiredDecimalStr",
    nullableRequiredEnum: "NullableRequiredEnum",
    nullableRequiredInt: "NullableRequiredInt",
    xSpeakeasyTestInternalDirectives: "x-speakeasy-test-internal-directives",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRequiredPropertyPostJson$ {
  /** @deprecated use `NullableRequiredPropertyPostJson$inboundSchema` instead. */
  export const inboundSchema = NullableRequiredPropertyPostJson$inboundSchema;
  /** @deprecated use `NullableRequiredPropertyPostJson$outboundSchema` instead. */
  export const outboundSchema = NullableRequiredPropertyPostJson$outboundSchema;
  /** @deprecated use `NullableRequiredPropertyPostJson$Outbound` instead. */
  export type Outbound = NullableRequiredPropertyPostJson$Outbound;
}

/** @internal */
export const NullableRequiredPropertyPostResponseBody$inboundSchema: z.ZodType<
  NullableRequiredPropertyPostResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.string().optional(),
  json: z.lazy(() => NullableRequiredPropertyPostJson$inboundSchema).optional(),
});

/** @internal */
export type NullableRequiredPropertyPostResponseBody$Outbound = {
  data?: string | undefined;
  json?: NullableRequiredPropertyPostJson$Outbound | undefined;
};

/** @internal */
export const NullableRequiredPropertyPostResponseBody$outboundSchema: z.ZodType<
  NullableRequiredPropertyPostResponseBody$Outbound,
  z.ZodTypeDef,
  NullableRequiredPropertyPostResponseBody
> = z.object({
  data: z.string().optional(),
  json: z.lazy(() => NullableRequiredPropertyPostJson$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableRequiredPropertyPostResponseBody$ {
  /** @deprecated use `NullableRequiredPropertyPostResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    NullableRequiredPropertyPostResponseBody$inboundSchema;
  /** @deprecated use `NullableRequiredPropertyPostResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    NullableRequiredPropertyPostResponseBody$outboundSchema;
  /** @deprecated use `NullableRequiredPropertyPostResponseBody$Outbound` instead. */
  export type Outbound = NullableRequiredPropertyPostResponseBody$Outbound;
}
