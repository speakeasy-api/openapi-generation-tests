/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type NullableRequiredSharedObjectPostRequestBody = {
    nullableOptionalObj?: shared.NullableOptionalObject | null | undefined;
    nullableRequiredObj: shared.NullableObject | null;
};

export type NullableRequiredSharedObjectPostJson = {
    nullableOptionalObj?: shared.NullableOptionalObject | null | undefined;
    nullableRequiredObj: shared.NullableObject | null;
};

/**
 * OK
 */
export type NullableRequiredSharedObjectPostResponseBody = {
    data?: string | undefined;
    json?: NullableRequiredSharedObjectPostJson | undefined;
};

/** @internal */
export namespace NullableRequiredSharedObjectPostRequestBody$ {
    export const inboundSchema: z.ZodType<
        NullableRequiredSharedObjectPostRequestBody,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            NullableOptionalObj: z
                .nullable(shared.NullableOptionalObject$.inboundSchema)
                .optional(),
            NullableRequiredObj: z.nullable(shared.NullableObject$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                NullableOptionalObj: "nullableOptionalObj",
                NullableRequiredObj: "nullableRequiredObj",
            });
        });

    export type Outbound = {
        NullableOptionalObj?: shared.NullableOptionalObject$.Outbound | null | undefined;
        NullableRequiredObj: shared.NullableObject$.Outbound | null;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        NullableRequiredSharedObjectPostRequestBody
    > = z
        .object({
            nullableOptionalObj: z
                .nullable(shared.NullableOptionalObject$.outboundSchema)
                .optional(),
            nullableRequiredObj: z.nullable(shared.NullableObject$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                nullableOptionalObj: "NullableOptionalObj",
                nullableRequiredObj: "NullableRequiredObj",
            });
        });
}

/** @internal */
export namespace NullableRequiredSharedObjectPostJson$ {
    export const inboundSchema: z.ZodType<
        NullableRequiredSharedObjectPostJson,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            NullableOptionalObj: z
                .nullable(shared.NullableOptionalObject$.inboundSchema)
                .optional(),
            NullableRequiredObj: z.nullable(shared.NullableObject$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                NullableOptionalObj: "nullableOptionalObj",
                NullableRequiredObj: "nullableRequiredObj",
            });
        });

    export type Outbound = {
        NullableOptionalObj?: shared.NullableOptionalObject$.Outbound | null | undefined;
        NullableRequiredObj: shared.NullableObject$.Outbound | null;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        NullableRequiredSharedObjectPostJson
    > = z
        .object({
            nullableOptionalObj: z
                .nullable(shared.NullableOptionalObject$.outboundSchema)
                .optional(),
            nullableRequiredObj: z.nullable(shared.NullableObject$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                nullableOptionalObj: "NullableOptionalObj",
                nullableRequiredObj: "NullableRequiredObj",
            });
        });
}

/** @internal */
export namespace NullableRequiredSharedObjectPostResponseBody$ {
    export const inboundSchema: z.ZodType<
        NullableRequiredSharedObjectPostResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        data: z.string().optional(),
        json: z.lazy(() => NullableRequiredSharedObjectPostJson$.inboundSchema).optional(),
    });

    export type Outbound = {
        data?: string | undefined;
        json?: NullableRequiredSharedObjectPostJson$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        NullableRequiredSharedObjectPostResponseBody
    > = z.object({
        data: z.string().optional(),
        json: z.lazy(() => NullableRequiredSharedObjectPostJson$.outboundSchema).optional(),
    });
}
