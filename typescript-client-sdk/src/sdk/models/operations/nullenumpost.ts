/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type NullEnumPostRes = {
  json: shared.ObjectWithNullEnums;
};

/** @internal */
export const NullEnumPostRes$inboundSchema: z.ZodType<
  NullEnumPostRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.ObjectWithNullEnums$inboundSchema,
});

/** @internal */
export type NullEnumPostRes$Outbound = {
  json: shared.ObjectWithNullEnums$Outbound;
};

/** @internal */
export const NullEnumPostRes$outboundSchema: z.ZodType<
  NullEnumPostRes$Outbound,
  z.ZodTypeDef,
  NullEnumPostRes
> = z.object({
  json: shared.ObjectWithNullEnums$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullEnumPostRes$ {
  /** @deprecated use `NullEnumPostRes$inboundSchema` instead. */
  export const inboundSchema = NullEnumPostRes$inboundSchema;
  /** @deprecated use `NullEnumPostRes$outboundSchema` instead. */
  export const outboundSchema = NullEnumPostRes$outboundSchema;
  /** @deprecated use `NullEnumPostRes$Outbound` instead. */
  export type Outbound = NullEnumPostRes$Outbound;
}

export function nullEnumPostResToJSON(
  nullEnumPostRes: NullEnumPostRes,
): string {
  return JSON.stringify(NullEnumPostRes$outboundSchema.parse(nullEnumPostRes));
}

export function nullEnumPostResFromJSON(
  jsonString: string,
): SafeParseResult<NullEnumPostRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NullEnumPostRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NullEnumPostRes' from JSON`,
  );
}
