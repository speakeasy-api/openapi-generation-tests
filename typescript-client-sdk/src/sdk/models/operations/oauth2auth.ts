/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Successful authentication.
 */
export type Oauth2AuthToken = {
    authenticated: boolean;
    token: string;
};

/** @internal */
export const Oauth2AuthToken$inboundSchema: z.ZodType<Oauth2AuthToken, z.ZodTypeDef, unknown> =
    z.object({
        authenticated: z.boolean(),
        token: z.string(),
    });

/** @internal */
export type Oauth2AuthToken$Outbound = {
    authenticated: boolean;
    token: string;
};

/** @internal */
export const Oauth2AuthToken$outboundSchema: z.ZodType<
    Oauth2AuthToken$Outbound,
    z.ZodTypeDef,
    Oauth2AuthToken
> = z.object({
    authenticated: z.boolean(),
    token: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Oauth2AuthToken$ {
    /** @deprecated use `Oauth2AuthToken$inboundSchema` instead. */
    export const inboundSchema = Oauth2AuthToken$inboundSchema;
    /** @deprecated use `Oauth2AuthToken$outboundSchema` instead. */
    export const outboundSchema = Oauth2AuthToken$outboundSchema;
    /** @deprecated use `Oauth2AuthToken$Outbound` instead. */
    export type Outbound = Oauth2AuthToken$Outbound;
}
