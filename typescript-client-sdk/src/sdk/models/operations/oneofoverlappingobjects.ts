/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type OneOfOverlappingObjectsRequestBody = {
    field1: string;
    field2?: boolean | undefined;
    field3?: number | undefined;
};

/**
 * OK
 */
export type OneOfOverlappingObjectsRes = {
    json: shared.OneOfOverlappingObjects;
};

/** @internal */
export namespace OneOfOverlappingObjectsRequestBody$ {
    export const inboundSchema: z.ZodType<
        OneOfOverlappingObjectsRequestBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        field1: z.string(),
        field2: z.boolean().optional(),
        field3: z.number().optional(),
    });

    export type Outbound = {
        field1: string;
        field2?: boolean | undefined;
        field3?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        OneOfOverlappingObjectsRequestBody
    > = z.object({
        field1: z.string(),
        field2: z.boolean().optional(),
        field3: z.number().optional(),
    });
}

/** @internal */
export namespace OneOfOverlappingObjectsRes$ {
    export const inboundSchema: z.ZodType<OneOfOverlappingObjectsRes, z.ZodTypeDef, unknown> =
        z.object({
            json: shared.OneOfOverlappingObjects$.inboundSchema,
        });

    export type Outbound = {
        json: shared.OneOfOverlappingObjects$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OneOfOverlappingObjectsRes> =
        z.object({
            json: shared.OneOfOverlappingObjects$.outboundSchema,
        });
}
