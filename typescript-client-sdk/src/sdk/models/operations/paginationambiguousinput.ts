/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export const PaginationAmbiguousInputServerList = [
  "http://localhost:35456",
] as const;

export type PaginationAmbiguousInputRequestBody = {
  cursor: number;
};

export type PaginationAmbiguousInputRequest = {
  requestBody: PaginationAmbiguousInputRequestBody;
  cursor?: number | undefined;
};

/**
 * OK
 */
export type PaginationAmbiguousInputRes = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

export type PaginationAmbiguousInputResponse = {
  result: PaginationAmbiguousInputRes;
};

/** @internal */
export const PaginationAmbiguousInputRequestBody$inboundSchema: z.ZodType<
  PaginationAmbiguousInputRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.number().int(),
});

/** @internal */
export type PaginationAmbiguousInputRequestBody$Outbound = {
  cursor: number;
};

/** @internal */
export const PaginationAmbiguousInputRequestBody$outboundSchema: z.ZodType<
  PaginationAmbiguousInputRequestBody$Outbound,
  z.ZodTypeDef,
  PaginationAmbiguousInputRequestBody
> = z.object({
  cursor: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationAmbiguousInputRequestBody$ {
  /** @deprecated use `PaginationAmbiguousInputRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PaginationAmbiguousInputRequestBody$inboundSchema;
  /** @deprecated use `PaginationAmbiguousInputRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PaginationAmbiguousInputRequestBody$outboundSchema;
  /** @deprecated use `PaginationAmbiguousInputRequestBody$Outbound` instead. */
  export type Outbound = PaginationAmbiguousInputRequestBody$Outbound;
}

/** @internal */
export const PaginationAmbiguousInputRequest$inboundSchema: z.ZodType<
  PaginationAmbiguousInputRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => PaginationAmbiguousInputRequestBody$inboundSchema),
  cursor: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PaginationAmbiguousInputRequest$Outbound = {
  RequestBody: PaginationAmbiguousInputRequestBody$Outbound;
  cursor?: number | undefined;
};

/** @internal */
export const PaginationAmbiguousInputRequest$outboundSchema: z.ZodType<
  PaginationAmbiguousInputRequest$Outbound,
  z.ZodTypeDef,
  PaginationAmbiguousInputRequest
> = z.object({
  requestBody: z.lazy(() => PaginationAmbiguousInputRequestBody$outboundSchema),
  cursor: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationAmbiguousInputRequest$ {
  /** @deprecated use `PaginationAmbiguousInputRequest$inboundSchema` instead. */
  export const inboundSchema = PaginationAmbiguousInputRequest$inboundSchema;
  /** @deprecated use `PaginationAmbiguousInputRequest$outboundSchema` instead. */
  export const outboundSchema = PaginationAmbiguousInputRequest$outboundSchema;
  /** @deprecated use `PaginationAmbiguousInputRequest$Outbound` instead. */
  export type Outbound = PaginationAmbiguousInputRequest$Outbound;
}

/** @internal */
export const PaginationAmbiguousInputRes$inboundSchema: z.ZodType<
  PaginationAmbiguousInputRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.number().int()),
});

/** @internal */
export type PaginationAmbiguousInputRes$Outbound = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

/** @internal */
export const PaginationAmbiguousInputRes$outboundSchema: z.ZodType<
  PaginationAmbiguousInputRes$Outbound,
  z.ZodTypeDef,
  PaginationAmbiguousInputRes
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationAmbiguousInputRes$ {
  /** @deprecated use `PaginationAmbiguousInputRes$inboundSchema` instead. */
  export const inboundSchema = PaginationAmbiguousInputRes$inboundSchema;
  /** @deprecated use `PaginationAmbiguousInputRes$outboundSchema` instead. */
  export const outboundSchema = PaginationAmbiguousInputRes$outboundSchema;
  /** @deprecated use `PaginationAmbiguousInputRes$Outbound` instead. */
  export type Outbound = PaginationAmbiguousInputRes$Outbound;
}

/** @internal */
export const PaginationAmbiguousInputResponse$inboundSchema: z.ZodType<
  PaginationAmbiguousInputResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => PaginationAmbiguousInputRes$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type PaginationAmbiguousInputResponse$Outbound = {
  Result: PaginationAmbiguousInputRes$Outbound;
};

/** @internal */
export const PaginationAmbiguousInputResponse$outboundSchema: z.ZodType<
  PaginationAmbiguousInputResponse$Outbound,
  z.ZodTypeDef,
  PaginationAmbiguousInputResponse
> = z.object({
  result: z.lazy(() => PaginationAmbiguousInputRes$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationAmbiguousInputResponse$ {
  /** @deprecated use `PaginationAmbiguousInputResponse$inboundSchema` instead. */
  export const inboundSchema = PaginationAmbiguousInputResponse$inboundSchema;
  /** @deprecated use `PaginationAmbiguousInputResponse$outboundSchema` instead. */
  export const outboundSchema = PaginationAmbiguousInputResponse$outboundSchema;
  /** @deprecated use `PaginationAmbiguousInputResponse$Outbound` instead. */
  export type Outbound = PaginationAmbiguousInputResponse$Outbound;
}
