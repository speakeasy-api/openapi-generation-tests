/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const PaginationCursorBodyServerList = ["http://localhost:35456"] as const;

export type PaginationCursorBodyRequestBody = {
    cursor: number;
};

/**
 * OK
 */
export type PaginationCursorBodyRes = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<number>;
};

export type PaginationCursorBodyResponse = {
    result: PaginationCursorBodyRes;
};

/** @internal */
export namespace PaginationCursorBodyRequestBody$ {
    export const inboundSchema: z.ZodType<PaginationCursorBodyRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.number().int(),
        });

    export type Outbound = {
        cursor: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PaginationCursorBodyRequestBody
    > = z.object({
        cursor: z.number().int(),
    });
}

/** @internal */
export namespace PaginationCursorBodyRes$ {
    export const inboundSchema: z.ZodType<PaginationCursorBodyRes, z.ZodTypeDef, unknown> =
        z.object({
            next: z.string().optional(),
            numPages: z.number().int(),
            resultArray: z.array(z.number().int()),
        });

    export type Outbound = {
        next?: string | undefined;
        numPages: number;
        resultArray: Array<number>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaginationCursorBodyRes> =
        z.object({
            next: z.string().optional(),
            numPages: z.number().int(),
            resultArray: z.array(z.number().int()),
        });
}

/** @internal */
export namespace PaginationCursorBodyResponse$ {
    export const inboundSchema: z.ZodType<PaginationCursorBodyResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => PaginationCursorBodyRes$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: PaginationCursorBodyRes$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaginationCursorBodyResponse> = z
        .object({
            result: z.lazy(() => PaginationCursorBodyRes$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
