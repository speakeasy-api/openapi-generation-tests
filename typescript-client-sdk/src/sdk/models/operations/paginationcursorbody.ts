/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PaginationCursorBodyServerList = [
  "http://localhost:35456",
] as const;

export type PaginationCursorBodyRequestBody = {
  cursor: number;
};

/**
 * OK
 */
export type PaginationCursorBodyRes = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

export type PaginationCursorBodyResponse = {
  result: PaginationCursorBodyRes;
};

/** @internal */
export const PaginationCursorBodyRequestBody$inboundSchema: z.ZodType<
  PaginationCursorBodyRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.number().int(),
});

/** @internal */
export type PaginationCursorBodyRequestBody$Outbound = {
  cursor: number;
};

/** @internal */
export const PaginationCursorBodyRequestBody$outboundSchema: z.ZodType<
  PaginationCursorBodyRequestBody$Outbound,
  z.ZodTypeDef,
  PaginationCursorBodyRequestBody
> = z.object({
  cursor: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorBodyRequestBody$ {
  /** @deprecated use `PaginationCursorBodyRequestBody$inboundSchema` instead. */
  export const inboundSchema = PaginationCursorBodyRequestBody$inboundSchema;
  /** @deprecated use `PaginationCursorBodyRequestBody$outboundSchema` instead. */
  export const outboundSchema = PaginationCursorBodyRequestBody$outboundSchema;
  /** @deprecated use `PaginationCursorBodyRequestBody$Outbound` instead. */
  export type Outbound = PaginationCursorBodyRequestBody$Outbound;
}

export function paginationCursorBodyRequestBodyToJSON(
  paginationCursorBodyRequestBody: PaginationCursorBodyRequestBody,
): string {
  return JSON.stringify(
    PaginationCursorBodyRequestBody$outboundSchema.parse(
      paginationCursorBodyRequestBody,
    ),
  );
}

export function paginationCursorBodyRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PaginationCursorBodyRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaginationCursorBodyRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationCursorBodyRequestBody' from JSON`,
  );
}

/** @internal */
export const PaginationCursorBodyRes$inboundSchema: z.ZodType<
  PaginationCursorBodyRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.number().int()),
});

/** @internal */
export type PaginationCursorBodyRes$Outbound = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

/** @internal */
export const PaginationCursorBodyRes$outboundSchema: z.ZodType<
  PaginationCursorBodyRes$Outbound,
  z.ZodTypeDef,
  PaginationCursorBodyRes
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorBodyRes$ {
  /** @deprecated use `PaginationCursorBodyRes$inboundSchema` instead. */
  export const inboundSchema = PaginationCursorBodyRes$inboundSchema;
  /** @deprecated use `PaginationCursorBodyRes$outboundSchema` instead. */
  export const outboundSchema = PaginationCursorBodyRes$outboundSchema;
  /** @deprecated use `PaginationCursorBodyRes$Outbound` instead. */
  export type Outbound = PaginationCursorBodyRes$Outbound;
}

export function paginationCursorBodyResToJSON(
  paginationCursorBodyRes: PaginationCursorBodyRes,
): string {
  return JSON.stringify(
    PaginationCursorBodyRes$outboundSchema.parse(paginationCursorBodyRes),
  );
}

export function paginationCursorBodyResFromJSON(
  jsonString: string,
): SafeParseResult<PaginationCursorBodyRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaginationCursorBodyRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationCursorBodyRes' from JSON`,
  );
}

/** @internal */
export const PaginationCursorBodyResponse$inboundSchema: z.ZodType<
  PaginationCursorBodyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => PaginationCursorBodyRes$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type PaginationCursorBodyResponse$Outbound = {
  Result: PaginationCursorBodyRes$Outbound;
};

/** @internal */
export const PaginationCursorBodyResponse$outboundSchema: z.ZodType<
  PaginationCursorBodyResponse$Outbound,
  z.ZodTypeDef,
  PaginationCursorBodyResponse
> = z.object({
  result: z.lazy(() => PaginationCursorBodyRes$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorBodyResponse$ {
  /** @deprecated use `PaginationCursorBodyResponse$inboundSchema` instead. */
  export const inboundSchema = PaginationCursorBodyResponse$inboundSchema;
  /** @deprecated use `PaginationCursorBodyResponse$outboundSchema` instead. */
  export const outboundSchema = PaginationCursorBodyResponse$outboundSchema;
  /** @deprecated use `PaginationCursorBodyResponse$Outbound` instead. */
  export type Outbound = PaginationCursorBodyResponse$Outbound;
}

export function paginationCursorBodyResponseToJSON(
  paginationCursorBodyResponse: PaginationCursorBodyResponse,
): string {
  return JSON.stringify(
    PaginationCursorBodyResponse$outboundSchema.parse(
      paginationCursorBodyResponse,
    ),
  );
}

export function paginationCursorBodyResponseFromJSON(
  jsonString: string,
): SafeParseResult<PaginationCursorBodyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaginationCursorBodyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationCursorBodyResponse' from JSON`,
  );
}
