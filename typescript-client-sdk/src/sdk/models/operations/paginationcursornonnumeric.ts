/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PaginationCursorNonNumericServerList = [
  "http://localhost:35456",
] as const;

export type PaginationCursorNonNumericRequest = {
  /**
   * The page token used to request a specific page of the search results
   */
  cursor?: string | undefined;
};

/**
 * OK
 */
export type PaginationCursorNonNumericRes = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<string>;
};

export type PaginationCursorNonNumericResponse = {
  result: PaginationCursorNonNumericRes;
};

/** @internal */
export const PaginationCursorNonNumericRequest$inboundSchema: z.ZodType<
  PaginationCursorNonNumericRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
});

/** @internal */
export type PaginationCursorNonNumericRequest$Outbound = {
  cursor?: string | undefined;
};

/** @internal */
export const PaginationCursorNonNumericRequest$outboundSchema: z.ZodType<
  PaginationCursorNonNumericRequest$Outbound,
  z.ZodTypeDef,
  PaginationCursorNonNumericRequest
> = z.object({
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorNonNumericRequest$ {
  /** @deprecated use `PaginationCursorNonNumericRequest$inboundSchema` instead. */
  export const inboundSchema = PaginationCursorNonNumericRequest$inboundSchema;
  /** @deprecated use `PaginationCursorNonNumericRequest$outboundSchema` instead. */
  export const outboundSchema =
    PaginationCursorNonNumericRequest$outboundSchema;
  /** @deprecated use `PaginationCursorNonNumericRequest$Outbound` instead. */
  export type Outbound = PaginationCursorNonNumericRequest$Outbound;
}

export function paginationCursorNonNumericRequestToJSON(
  paginationCursorNonNumericRequest: PaginationCursorNonNumericRequest,
): string {
  return JSON.stringify(
    PaginationCursorNonNumericRequest$outboundSchema.parse(
      paginationCursorNonNumericRequest,
    ),
  );
}

export function paginationCursorNonNumericRequestFromJSON(
  jsonString: string,
): SafeParseResult<PaginationCursorNonNumericRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaginationCursorNonNumericRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationCursorNonNumericRequest' from JSON`,
  );
}

/** @internal */
export const PaginationCursorNonNumericRes$inboundSchema: z.ZodType<
  PaginationCursorNonNumericRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.string()),
});

/** @internal */
export type PaginationCursorNonNumericRes$Outbound = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<string>;
};

/** @internal */
export const PaginationCursorNonNumericRes$outboundSchema: z.ZodType<
  PaginationCursorNonNumericRes$Outbound,
  z.ZodTypeDef,
  PaginationCursorNonNumericRes
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorNonNumericRes$ {
  /** @deprecated use `PaginationCursorNonNumericRes$inboundSchema` instead. */
  export const inboundSchema = PaginationCursorNonNumericRes$inboundSchema;
  /** @deprecated use `PaginationCursorNonNumericRes$outboundSchema` instead. */
  export const outboundSchema = PaginationCursorNonNumericRes$outboundSchema;
  /** @deprecated use `PaginationCursorNonNumericRes$Outbound` instead. */
  export type Outbound = PaginationCursorNonNumericRes$Outbound;
}

export function paginationCursorNonNumericResToJSON(
  paginationCursorNonNumericRes: PaginationCursorNonNumericRes,
): string {
  return JSON.stringify(
    PaginationCursorNonNumericRes$outboundSchema.parse(
      paginationCursorNonNumericRes,
    ),
  );
}

export function paginationCursorNonNumericResFromJSON(
  jsonString: string,
): SafeParseResult<PaginationCursorNonNumericRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaginationCursorNonNumericRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationCursorNonNumericRes' from JSON`,
  );
}

/** @internal */
export const PaginationCursorNonNumericResponse$inboundSchema: z.ZodType<
  PaginationCursorNonNumericResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => PaginationCursorNonNumericRes$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type PaginationCursorNonNumericResponse$Outbound = {
  Result: PaginationCursorNonNumericRes$Outbound;
};

/** @internal */
export const PaginationCursorNonNumericResponse$outboundSchema: z.ZodType<
  PaginationCursorNonNumericResponse$Outbound,
  z.ZodTypeDef,
  PaginationCursorNonNumericResponse
> = z.object({
  result: z.lazy(() => PaginationCursorNonNumericRes$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorNonNumericResponse$ {
  /** @deprecated use `PaginationCursorNonNumericResponse$inboundSchema` instead. */
  export const inboundSchema = PaginationCursorNonNumericResponse$inboundSchema;
  /** @deprecated use `PaginationCursorNonNumericResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaginationCursorNonNumericResponse$outboundSchema;
  /** @deprecated use `PaginationCursorNonNumericResponse$Outbound` instead. */
  export type Outbound = PaginationCursorNonNumericResponse$Outbound;
}

export function paginationCursorNonNumericResponseToJSON(
  paginationCursorNonNumericResponse: PaginationCursorNonNumericResponse,
): string {
  return JSON.stringify(
    PaginationCursorNonNumericResponse$outboundSchema.parse(
      paginationCursorNonNumericResponse,
    ),
  );
}

export function paginationCursorNonNumericResponseFromJSON(
  jsonString: string,
): SafeParseResult<PaginationCursorNonNumericResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PaginationCursorNonNumericResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationCursorNonNumericResponse' from JSON`,
  );
}
