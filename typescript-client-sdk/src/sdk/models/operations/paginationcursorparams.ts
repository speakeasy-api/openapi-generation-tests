/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const PaginationCursorParamsServerList = ["http://localhost:35456"] as const;

export type PaginationCursorParamsRequest = {
    cursor: number;
};

/**
 * OK
 */
export type PaginationCursorParamsRes = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<number>;
};

export type PaginationCursorParamsResponse = {
    result: PaginationCursorParamsRes;
};

/** @internal */
export namespace PaginationCursorParamsRequest$ {
    export const inboundSchema: z.ZodType<PaginationCursorParamsRequest, z.ZodTypeDef, unknown> =
        z.object({
            cursor: z.number().int(),
        });

    export type Outbound = {
        cursor: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaginationCursorParamsRequest> =
        z.object({
            cursor: z.number().int(),
        });
}

/** @internal */
export namespace PaginationCursorParamsRes$ {
    export const inboundSchema: z.ZodType<PaginationCursorParamsRes, z.ZodTypeDef, unknown> =
        z.object({
            next: z.string().optional(),
            numPages: z.number().int(),
            resultArray: z.array(z.number().int()),
        });

    export type Outbound = {
        next?: string | undefined;
        numPages: number;
        resultArray: Array<number>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaginationCursorParamsRes> =
        z.object({
            next: z.string().optional(),
            numPages: z.number().int(),
            resultArray: z.array(z.number().int()),
        });
}

/** @internal */
export namespace PaginationCursorParamsResponse$ {
    export const inboundSchema: z.ZodType<PaginationCursorParamsResponse, z.ZodTypeDef, unknown> = z
        .object({
            Result: z.lazy(() => PaginationCursorParamsRes$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: PaginationCursorParamsRes$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaginationCursorParamsResponse> =
        z
            .object({
                result: z.lazy(() => PaginationCursorParamsRes$.outboundSchema),
            })
            .transform((v) => {
                return remap$(v, {
                    result: "Result",
                });
            });
}
