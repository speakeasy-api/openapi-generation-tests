/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const PaginationCursorParamsServerList = ["http://localhost:35456"] as const;

export type PaginationCursorParamsRequest = {
    cursor: number;
};

/**
 * OK
 */
export type PaginationCursorParamsRes = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<number>;
};

export type PaginationCursorParamsResponse = {
    result: PaginationCursorParamsRes;
};

/** @internal */
export const PaginationCursorParamsRequest$inboundSchema: z.ZodType<
    PaginationCursorParamsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    cursor: z.number().int(),
});

/** @internal */
export type PaginationCursorParamsRequest$Outbound = {
    cursor: number;
};

/** @internal */
export const PaginationCursorParamsRequest$outboundSchema: z.ZodType<
    PaginationCursorParamsRequest$Outbound,
    z.ZodTypeDef,
    PaginationCursorParamsRequest
> = z.object({
    cursor: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorParamsRequest$ {
    /** @deprecated use `PaginationCursorParamsRequest$inboundSchema` instead. */
    export const inboundSchema = PaginationCursorParamsRequest$inboundSchema;
    /** @deprecated use `PaginationCursorParamsRequest$outboundSchema` instead. */
    export const outboundSchema = PaginationCursorParamsRequest$outboundSchema;
    /** @deprecated use `PaginationCursorParamsRequest$Outbound` instead. */
    export type Outbound = PaginationCursorParamsRequest$Outbound;
}

/** @internal */
export const PaginationCursorParamsRes$inboundSchema: z.ZodType<
    PaginationCursorParamsRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    next: z.string().optional(),
    numPages: z.number().int(),
    resultArray: z.array(z.number().int()),
});

/** @internal */
export type PaginationCursorParamsRes$Outbound = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<number>;
};

/** @internal */
export const PaginationCursorParamsRes$outboundSchema: z.ZodType<
    PaginationCursorParamsRes$Outbound,
    z.ZodTypeDef,
    PaginationCursorParamsRes
> = z.object({
    next: z.string().optional(),
    numPages: z.number().int(),
    resultArray: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorParamsRes$ {
    /** @deprecated use `PaginationCursorParamsRes$inboundSchema` instead. */
    export const inboundSchema = PaginationCursorParamsRes$inboundSchema;
    /** @deprecated use `PaginationCursorParamsRes$outboundSchema` instead. */
    export const outboundSchema = PaginationCursorParamsRes$outboundSchema;
    /** @deprecated use `PaginationCursorParamsRes$Outbound` instead. */
    export type Outbound = PaginationCursorParamsRes$Outbound;
}

/** @internal */
export const PaginationCursorParamsResponse$inboundSchema: z.ZodType<
    PaginationCursorParamsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.lazy(() => PaginationCursorParamsRes$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type PaginationCursorParamsResponse$Outbound = {
    Result: PaginationCursorParamsRes$Outbound;
};

/** @internal */
export const PaginationCursorParamsResponse$outboundSchema: z.ZodType<
    PaginationCursorParamsResponse$Outbound,
    z.ZodTypeDef,
    PaginationCursorParamsResponse
> = z
    .object({
        result: z.lazy(() => PaginationCursorParamsRes$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationCursorParamsResponse$ {
    /** @deprecated use `PaginationCursorParamsResponse$inboundSchema` instead. */
    export const inboundSchema = PaginationCursorParamsResponse$inboundSchema;
    /** @deprecated use `PaginationCursorParamsResponse$outboundSchema` instead. */
    export const outboundSchema = PaginationCursorParamsResponse$outboundSchema;
    /** @deprecated use `PaginationCursorParamsResponse$Outbound` instead. */
    export type Outbound = PaginationCursorParamsResponse$Outbound;
}
