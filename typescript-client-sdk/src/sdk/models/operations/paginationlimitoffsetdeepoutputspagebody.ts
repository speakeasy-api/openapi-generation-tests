/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const PaginationLimitOffsetDeepOutputsPageBodyServerList = [
    "http://localhost:35456",
] as const;

export type PageInfo = {
    next?: string | undefined;
    numPages: number;
};

/**
 * OK
 */
export type PaginationLimitOffsetDeepOutputsPageBodyRes = {
    pageInfo: PageInfo;
    resultArray: Array<number>;
};

export type PaginationLimitOffsetDeepOutputsPageBodyResponse = {
    result: PaginationLimitOffsetDeepOutputsPageBodyRes;
};

/** @internal */
export const PageInfo$inboundSchema: z.ZodType<PageInfo, z.ZodTypeDef, unknown> = z.object({
    next: z.string().optional(),
    numPages: z.number().int(),
});

/** @internal */
export type PageInfo$Outbound = {
    next?: string | undefined;
    numPages: number;
};

/** @internal */
export const PageInfo$outboundSchema: z.ZodType<PageInfo$Outbound, z.ZodTypeDef, PageInfo> =
    z.object({
        next: z.string().optional(),
        numPages: z.number().int(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PageInfo$ {
    /** @deprecated use `PageInfo$inboundSchema` instead. */
    export const inboundSchema = PageInfo$inboundSchema;
    /** @deprecated use `PageInfo$outboundSchema` instead. */
    export const outboundSchema = PageInfo$outboundSchema;
    /** @deprecated use `PageInfo$Outbound` instead. */
    export type Outbound = PageInfo$Outbound;
}

/** @internal */
export const PaginationLimitOffsetDeepOutputsPageBodyRes$inboundSchema: z.ZodType<
    PaginationLimitOffsetDeepOutputsPageBodyRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    pageInfo: z.lazy(() => PageInfo$inboundSchema),
    resultArray: z.array(z.number().int()),
});

/** @internal */
export type PaginationLimitOffsetDeepOutputsPageBodyRes$Outbound = {
    pageInfo: PageInfo$Outbound;
    resultArray: Array<number>;
};

/** @internal */
export const PaginationLimitOffsetDeepOutputsPageBodyRes$outboundSchema: z.ZodType<
    PaginationLimitOffsetDeepOutputsPageBodyRes$Outbound,
    z.ZodTypeDef,
    PaginationLimitOffsetDeepOutputsPageBodyRes
> = z.object({
    pageInfo: z.lazy(() => PageInfo$outboundSchema),
    resultArray: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationLimitOffsetDeepOutputsPageBodyRes$ {
    /** @deprecated use `PaginationLimitOffsetDeepOutputsPageBodyRes$inboundSchema` instead. */
    export const inboundSchema = PaginationLimitOffsetDeepOutputsPageBodyRes$inboundSchema;
    /** @deprecated use `PaginationLimitOffsetDeepOutputsPageBodyRes$outboundSchema` instead. */
    export const outboundSchema = PaginationLimitOffsetDeepOutputsPageBodyRes$outboundSchema;
    /** @deprecated use `PaginationLimitOffsetDeepOutputsPageBodyRes$Outbound` instead. */
    export type Outbound = PaginationLimitOffsetDeepOutputsPageBodyRes$Outbound;
}

/** @internal */
export const PaginationLimitOffsetDeepOutputsPageBodyResponse$inboundSchema: z.ZodType<
    PaginationLimitOffsetDeepOutputsPageBodyResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.lazy(() => PaginationLimitOffsetDeepOutputsPageBodyRes$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type PaginationLimitOffsetDeepOutputsPageBodyResponse$Outbound = {
    Result: PaginationLimitOffsetDeepOutputsPageBodyRes$Outbound;
};

/** @internal */
export const PaginationLimitOffsetDeepOutputsPageBodyResponse$outboundSchema: z.ZodType<
    PaginationLimitOffsetDeepOutputsPageBodyResponse$Outbound,
    z.ZodTypeDef,
    PaginationLimitOffsetDeepOutputsPageBodyResponse
> = z
    .object({
        result: z.lazy(() => PaginationLimitOffsetDeepOutputsPageBodyRes$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationLimitOffsetDeepOutputsPageBodyResponse$ {
    /** @deprecated use `PaginationLimitOffsetDeepOutputsPageBodyResponse$inboundSchema` instead. */
    export const inboundSchema = PaginationLimitOffsetDeepOutputsPageBodyResponse$inboundSchema;
    /** @deprecated use `PaginationLimitOffsetDeepOutputsPageBodyResponse$outboundSchema` instead. */
    export const outboundSchema = PaginationLimitOffsetDeepOutputsPageBodyResponse$outboundSchema;
    /** @deprecated use `PaginationLimitOffsetDeepOutputsPageBodyResponse$Outbound` instead. */
    export type Outbound = PaginationLimitOffsetDeepOutputsPageBodyResponse$Outbound;
}
