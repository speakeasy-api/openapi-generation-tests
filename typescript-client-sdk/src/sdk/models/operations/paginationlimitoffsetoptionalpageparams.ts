/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PaginationLimitOffsetOptionalPageParamsServerList = [
  "http://localhost:35456",
] as const;

export type PaginationLimitOffsetOptionalPageParamsRequest = {
  page?: number | undefined;
};

/**
 * OK
 */
export type PaginationLimitOffsetOptionalPageParamsRes = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

export type PaginationLimitOffsetOptionalPageParamsResponse = {
  result: PaginationLimitOffsetOptionalPageParamsRes;
};

/** @internal */
export const PaginationLimitOffsetOptionalPageParamsRequest$inboundSchema:
  z.ZodType<
    PaginationLimitOffsetOptionalPageParamsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    page: z.number().int().optional(),
  });

/** @internal */
export type PaginationLimitOffsetOptionalPageParamsRequest$Outbound = {
  page?: number | undefined;
};

/** @internal */
export const PaginationLimitOffsetOptionalPageParamsRequest$outboundSchema:
  z.ZodType<
    PaginationLimitOffsetOptionalPageParamsRequest$Outbound,
    z.ZodTypeDef,
    PaginationLimitOffsetOptionalPageParamsRequest
  > = z.object({
    page: z.number().int().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationLimitOffsetOptionalPageParamsRequest$ {
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsRequest$inboundSchema` instead. */
  export const inboundSchema =
    PaginationLimitOffsetOptionalPageParamsRequest$inboundSchema;
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsRequest$outboundSchema` instead. */
  export const outboundSchema =
    PaginationLimitOffsetOptionalPageParamsRequest$outboundSchema;
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsRequest$Outbound` instead. */
  export type Outbound =
    PaginationLimitOffsetOptionalPageParamsRequest$Outbound;
}

export function paginationLimitOffsetOptionalPageParamsRequestToJSON(
  paginationLimitOffsetOptionalPageParamsRequest:
    PaginationLimitOffsetOptionalPageParamsRequest,
): string {
  return JSON.stringify(
    PaginationLimitOffsetOptionalPageParamsRequest$outboundSchema.parse(
      paginationLimitOffsetOptionalPageParamsRequest,
    ),
  );
}

export function paginationLimitOffsetOptionalPageParamsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PaginationLimitOffsetOptionalPageParamsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PaginationLimitOffsetOptionalPageParamsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PaginationLimitOffsetOptionalPageParamsRequest' from JSON`,
  );
}

/** @internal */
export const PaginationLimitOffsetOptionalPageParamsRes$inboundSchema:
  z.ZodType<PaginationLimitOffsetOptionalPageParamsRes, z.ZodTypeDef, unknown> =
    z.object({
      next: z.string().optional(),
      numPages: z.number().int(),
      resultArray: z.array(z.number().int()),
    });

/** @internal */
export type PaginationLimitOffsetOptionalPageParamsRes$Outbound = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

/** @internal */
export const PaginationLimitOffsetOptionalPageParamsRes$outboundSchema:
  z.ZodType<
    PaginationLimitOffsetOptionalPageParamsRes$Outbound,
    z.ZodTypeDef,
    PaginationLimitOffsetOptionalPageParamsRes
  > = z.object({
    next: z.string().optional(),
    numPages: z.number().int(),
    resultArray: z.array(z.number().int()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationLimitOffsetOptionalPageParamsRes$ {
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsRes$inboundSchema` instead. */
  export const inboundSchema =
    PaginationLimitOffsetOptionalPageParamsRes$inboundSchema;
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsRes$outboundSchema` instead. */
  export const outboundSchema =
    PaginationLimitOffsetOptionalPageParamsRes$outboundSchema;
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsRes$Outbound` instead. */
  export type Outbound = PaginationLimitOffsetOptionalPageParamsRes$Outbound;
}

export function paginationLimitOffsetOptionalPageParamsResToJSON(
  paginationLimitOffsetOptionalPageParamsRes:
    PaginationLimitOffsetOptionalPageParamsRes,
): string {
  return JSON.stringify(
    PaginationLimitOffsetOptionalPageParamsRes$outboundSchema.parse(
      paginationLimitOffsetOptionalPageParamsRes,
    ),
  );
}

export function paginationLimitOffsetOptionalPageParamsResFromJSON(
  jsonString: string,
): SafeParseResult<
  PaginationLimitOffsetOptionalPageParamsRes,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PaginationLimitOffsetOptionalPageParamsRes$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PaginationLimitOffsetOptionalPageParamsRes' from JSON`,
  );
}

/** @internal */
export const PaginationLimitOffsetOptionalPageParamsResponse$inboundSchema:
  z.ZodType<
    PaginationLimitOffsetOptionalPageParamsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Result: z.lazy(() =>
      PaginationLimitOffsetOptionalPageParamsRes$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "Result": "result",
    });
  });

/** @internal */
export type PaginationLimitOffsetOptionalPageParamsResponse$Outbound = {
  Result: PaginationLimitOffsetOptionalPageParamsRes$Outbound;
};

/** @internal */
export const PaginationLimitOffsetOptionalPageParamsResponse$outboundSchema:
  z.ZodType<
    PaginationLimitOffsetOptionalPageParamsResponse$Outbound,
    z.ZodTypeDef,
    PaginationLimitOffsetOptionalPageParamsResponse
  > = z.object({
    result: z.lazy(() =>
      PaginationLimitOffsetOptionalPageParamsRes$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationLimitOffsetOptionalPageParamsResponse$ {
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsResponse$inboundSchema` instead. */
  export const inboundSchema =
    PaginationLimitOffsetOptionalPageParamsResponse$inboundSchema;
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaginationLimitOffsetOptionalPageParamsResponse$outboundSchema;
  /** @deprecated use `PaginationLimitOffsetOptionalPageParamsResponse$Outbound` instead. */
  export type Outbound =
    PaginationLimitOffsetOptionalPageParamsResponse$Outbound;
}

export function paginationLimitOffsetOptionalPageParamsResponseToJSON(
  paginationLimitOffsetOptionalPageParamsResponse:
    PaginationLimitOffsetOptionalPageParamsResponse,
): string {
  return JSON.stringify(
    PaginationLimitOffsetOptionalPageParamsResponse$outboundSchema.parse(
      paginationLimitOffsetOptionalPageParamsResponse,
    ),
  );
}

export function paginationLimitOffsetOptionalPageParamsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PaginationLimitOffsetOptionalPageParamsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PaginationLimitOffsetOptionalPageParamsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PaginationLimitOffsetOptionalPageParamsResponse' from JSON`,
  );
}
