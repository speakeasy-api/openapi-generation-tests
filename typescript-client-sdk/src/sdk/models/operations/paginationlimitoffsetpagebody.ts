/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const PaginationLimitOffsetPageBodyServerList = [
  "http://localhost:35456",
] as const;

/**
 * OK
 */
export type PaginationLimitOffsetPageBodyRes = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

export type PaginationLimitOffsetPageBodyResponse = {
  result: PaginationLimitOffsetPageBodyRes;
};

/** @internal */
export const PaginationLimitOffsetPageBodyRes$inboundSchema: z.ZodType<
  PaginationLimitOffsetPageBodyRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.number().int()),
});

/** @internal */
export type PaginationLimitOffsetPageBodyRes$Outbound = {
  next?: string | undefined;
  numPages: number;
  resultArray: Array<number>;
};

/** @internal */
export const PaginationLimitOffsetPageBodyRes$outboundSchema: z.ZodType<
  PaginationLimitOffsetPageBodyRes$Outbound,
  z.ZodTypeDef,
  PaginationLimitOffsetPageBodyRes
> = z.object({
  next: z.string().optional(),
  numPages: z.number().int(),
  resultArray: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationLimitOffsetPageBodyRes$ {
  /** @deprecated use `PaginationLimitOffsetPageBodyRes$inboundSchema` instead. */
  export const inboundSchema = PaginationLimitOffsetPageBodyRes$inboundSchema;
  /** @deprecated use `PaginationLimitOffsetPageBodyRes$outboundSchema` instead. */
  export const outboundSchema = PaginationLimitOffsetPageBodyRes$outboundSchema;
  /** @deprecated use `PaginationLimitOffsetPageBodyRes$Outbound` instead. */
  export type Outbound = PaginationLimitOffsetPageBodyRes$Outbound;
}

export function paginationLimitOffsetPageBodyResToJSON(
  paginationLimitOffsetPageBodyRes: PaginationLimitOffsetPageBodyRes,
): string {
  return JSON.stringify(
    PaginationLimitOffsetPageBodyRes$outboundSchema.parse(
      paginationLimitOffsetPageBodyRes,
    ),
  );
}

export function paginationLimitOffsetPageBodyResFromJSON(
  jsonString: string,
): SafeParseResult<PaginationLimitOffsetPageBodyRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaginationLimitOffsetPageBodyRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationLimitOffsetPageBodyRes' from JSON`,
  );
}

/** @internal */
export const PaginationLimitOffsetPageBodyResponse$inboundSchema: z.ZodType<
  PaginationLimitOffsetPageBodyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => PaginationLimitOffsetPageBodyRes$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type PaginationLimitOffsetPageBodyResponse$Outbound = {
  Result: PaginationLimitOffsetPageBodyRes$Outbound;
};

/** @internal */
export const PaginationLimitOffsetPageBodyResponse$outboundSchema: z.ZodType<
  PaginationLimitOffsetPageBodyResponse$Outbound,
  z.ZodTypeDef,
  PaginationLimitOffsetPageBodyResponse
> = z.object({
  result: z.lazy(() => PaginationLimitOffsetPageBodyRes$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationLimitOffsetPageBodyResponse$ {
  /** @deprecated use `PaginationLimitOffsetPageBodyResponse$inboundSchema` instead. */
  export const inboundSchema =
    PaginationLimitOffsetPageBodyResponse$inboundSchema;
  /** @deprecated use `PaginationLimitOffsetPageBodyResponse$outboundSchema` instead. */
  export const outboundSchema =
    PaginationLimitOffsetPageBodyResponse$outboundSchema;
  /** @deprecated use `PaginationLimitOffsetPageBodyResponse$Outbound` instead. */
  export type Outbound = PaginationLimitOffsetPageBodyResponse$Outbound;
}

export function paginationLimitOffsetPageBodyResponseToJSON(
  paginationLimitOffsetPageBodyResponse: PaginationLimitOffsetPageBodyResponse,
): string {
  return JSON.stringify(
    PaginationLimitOffsetPageBodyResponse$outboundSchema.parse(
      paginationLimitOffsetPageBodyResponse,
    ),
  );
}

export function paginationLimitOffsetPageBodyResponseFromJSON(
  jsonString: string,
): SafeParseResult<PaginationLimitOffsetPageBodyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PaginationLimitOffsetPageBodyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaginationLimitOffsetPageBodyResponse' from JSON`,
  );
}
