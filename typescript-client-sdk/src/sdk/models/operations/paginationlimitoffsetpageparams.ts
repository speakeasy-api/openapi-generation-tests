/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const PaginationLimitOffsetPageParamsServerList = ["http://localhost:35456"] as const;

export type PaginationLimitOffsetPageParamsRequest = {
    page: number;
};

/**
 * OK
 */
export type PaginationLimitOffsetPageParamsRes = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<number>;
};

export type PaginationLimitOffsetPageParamsResponse = {
    result: PaginationLimitOffsetPageParamsRes;
};

/** @internal */
export namespace PaginationLimitOffsetPageParamsRequest$ {
    export const inboundSchema: z.ZodType<
        PaginationLimitOffsetPageParamsRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        page: z.number().int(),
    });

    export type Outbound = {
        page: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PaginationLimitOffsetPageParamsRequest
    > = z.object({
        page: z.number().int(),
    });
}

/** @internal */
export namespace PaginationLimitOffsetPageParamsRes$ {
    export const inboundSchema: z.ZodType<
        PaginationLimitOffsetPageParamsRes,
        z.ZodTypeDef,
        unknown
    > = z.object({
        next: z.string().optional(),
        numPages: z.number().int(),
        resultArray: z.array(z.number().int()),
    });

    export type Outbound = {
        next?: string | undefined;
        numPages: number;
        resultArray: Array<number>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PaginationLimitOffsetPageParamsRes
    > = z.object({
        next: z.string().optional(),
        numPages: z.number().int(),
        resultArray: z.array(z.number().int()),
    });
}

/** @internal */
export namespace PaginationLimitOffsetPageParamsResponse$ {
    export const inboundSchema: z.ZodType<
        PaginationLimitOffsetPageParamsResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            Result: z.lazy(() => PaginationLimitOffsetPageParamsRes$.inboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                Result: "result",
            });
        });

    export type Outbound = {
        Result: PaginationLimitOffsetPageParamsRes$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PaginationLimitOffsetPageParamsResponse
    > = z
        .object({
            result: z.lazy(() => PaginationLimitOffsetPageParamsRes$.outboundSchema),
        })
        .transform((v) => {
            return remap$(v, {
                result: "Result",
            });
        });
}
