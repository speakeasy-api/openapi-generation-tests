/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const PaginationURLParamsServerList = ["http://localhost:35456"] as const;

export type PaginationURLParamsRequest = {
    attempts: number;
    isReferencePath?: string | undefined;
};

/**
 * OK
 */
export type PaginationURLParamsRes = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<number>;
};

export type PaginationURLParamsResponse = {
    result: PaginationURLParamsRes;
};

/** @internal */
export const PaginationURLParamsRequest$inboundSchema: z.ZodType<
    PaginationURLParamsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        attempts: z.number().int(),
        "is-reference-path": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "is-reference-path": "isReferencePath",
        });
    });

/** @internal */
export type PaginationURLParamsRequest$Outbound = {
    attempts: number;
    "is-reference-path"?: string | undefined;
};

/** @internal */
export const PaginationURLParamsRequest$outboundSchema: z.ZodType<
    PaginationURLParamsRequest$Outbound,
    z.ZodTypeDef,
    PaginationURLParamsRequest
> = z
    .object({
        attempts: z.number().int(),
        isReferencePath: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            isReferencePath: "is-reference-path",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationURLParamsRequest$ {
    /** @deprecated use `PaginationURLParamsRequest$inboundSchema` instead. */
    export const inboundSchema = PaginationURLParamsRequest$inboundSchema;
    /** @deprecated use `PaginationURLParamsRequest$outboundSchema` instead. */
    export const outboundSchema = PaginationURLParamsRequest$outboundSchema;
    /** @deprecated use `PaginationURLParamsRequest$Outbound` instead. */
    export type Outbound = PaginationURLParamsRequest$Outbound;
}

/** @internal */
export const PaginationURLParamsRes$inboundSchema: z.ZodType<
    PaginationURLParamsRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    next: z.string().optional(),
    numPages: z.number().int(),
    resultArray: z.array(z.number().int()),
});

/** @internal */
export type PaginationURLParamsRes$Outbound = {
    next?: string | undefined;
    numPages: number;
    resultArray: Array<number>;
};

/** @internal */
export const PaginationURLParamsRes$outboundSchema: z.ZodType<
    PaginationURLParamsRes$Outbound,
    z.ZodTypeDef,
    PaginationURLParamsRes
> = z.object({
    next: z.string().optional(),
    numPages: z.number().int(),
    resultArray: z.array(z.number().int()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationURLParamsRes$ {
    /** @deprecated use `PaginationURLParamsRes$inboundSchema` instead. */
    export const inboundSchema = PaginationURLParamsRes$inboundSchema;
    /** @deprecated use `PaginationURLParamsRes$outboundSchema` instead. */
    export const outboundSchema = PaginationURLParamsRes$outboundSchema;
    /** @deprecated use `PaginationURLParamsRes$Outbound` instead. */
    export type Outbound = PaginationURLParamsRes$Outbound;
}

/** @internal */
export const PaginationURLParamsResponse$inboundSchema: z.ZodType<
    PaginationURLParamsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.lazy(() => PaginationURLParamsRes$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type PaginationURLParamsResponse$Outbound = {
    Result: PaginationURLParamsRes$Outbound;
};

/** @internal */
export const PaginationURLParamsResponse$outboundSchema: z.ZodType<
    PaginationURLParamsResponse$Outbound,
    z.ZodTypeDef,
    PaginationURLParamsResponse
> = z
    .object({
        result: z.lazy(() => PaginationURLParamsRes$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaginationURLParamsResponse$ {
    /** @deprecated use `PaginationURLParamsResponse$inboundSchema` instead. */
    export const inboundSchema = PaginationURLParamsResponse$inboundSchema;
    /** @deprecated use `PaginationURLParamsResponse$outboundSchema` instead. */
    export const outboundSchema = PaginationURLParamsResponse$outboundSchema;
    /** @deprecated use `PaginationURLParamsResponse$Outbound` instead. */
    export type Outbound = PaginationURLParamsResponse$Outbound;
}
