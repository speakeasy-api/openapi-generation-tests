/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type PathEncodingRequest = {
  param1: string;
  param2: string;
};

/** @internal */
export const PathEncodingRequest$inboundSchema: z.ZodType<
  PathEncodingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  param1: z.string(),
  param2: z.string(),
});

/** @internal */
export type PathEncodingRequest$Outbound = {
  param1: string;
  param2: string;
};

/** @internal */
export const PathEncodingRequest$outboundSchema: z.ZodType<
  PathEncodingRequest$Outbound,
  z.ZodTypeDef,
  PathEncodingRequest
> = z.object({
  param1: z.string(),
  param2: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PathEncodingRequest$ {
  /** @deprecated use `PathEncodingRequest$inboundSchema` instead. */
  export const inboundSchema = PathEncodingRequest$inboundSchema;
  /** @deprecated use `PathEncodingRequest$outboundSchema` instead. */
  export const outboundSchema = PathEncodingRequest$outboundSchema;
  /** @deprecated use `PathEncodingRequest$Outbound` instead. */
  export type Outbound = PathEncodingRequest$Outbound;
}
