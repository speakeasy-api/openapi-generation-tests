/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type PrimitiveTypeOneOfPostRequestBody = string | number | number | boolean;

export type PrimitiveTypeOneOfPostJson = string | number | number | boolean;

/**
 * OK
 */
export type PrimitiveTypeOneOfPostRes = {
    json: string | number | number | boolean;
};

/** @internal */
export const PrimitiveTypeOneOfPostRequestBody$inboundSchema: z.ZodType<
    PrimitiveTypeOneOfPostRequestBody,
    z.ZodTypeDef,
    unknown
> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);

/** @internal */
export type PrimitiveTypeOneOfPostRequestBody$Outbound = string | number | number | boolean;

/** @internal */
export const PrimitiveTypeOneOfPostRequestBody$outboundSchema: z.ZodType<
    PrimitiveTypeOneOfPostRequestBody$Outbound,
    z.ZodTypeDef,
    PrimitiveTypeOneOfPostRequestBody
> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrimitiveTypeOneOfPostRequestBody$ {
    /** @deprecated use `PrimitiveTypeOneOfPostRequestBody$inboundSchema` instead. */
    export const inboundSchema = PrimitiveTypeOneOfPostRequestBody$inboundSchema;
    /** @deprecated use `PrimitiveTypeOneOfPostRequestBody$outboundSchema` instead. */
    export const outboundSchema = PrimitiveTypeOneOfPostRequestBody$outboundSchema;
    /** @deprecated use `PrimitiveTypeOneOfPostRequestBody$Outbound` instead. */
    export type Outbound = PrimitiveTypeOneOfPostRequestBody$Outbound;
}

/** @internal */
export const PrimitiveTypeOneOfPostJson$inboundSchema: z.ZodType<
    PrimitiveTypeOneOfPostJson,
    z.ZodTypeDef,
    unknown
> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);

/** @internal */
export type PrimitiveTypeOneOfPostJson$Outbound = string | number | number | boolean;

/** @internal */
export const PrimitiveTypeOneOfPostJson$outboundSchema: z.ZodType<
    PrimitiveTypeOneOfPostJson$Outbound,
    z.ZodTypeDef,
    PrimitiveTypeOneOfPostJson
> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrimitiveTypeOneOfPostJson$ {
    /** @deprecated use `PrimitiveTypeOneOfPostJson$inboundSchema` instead. */
    export const inboundSchema = PrimitiveTypeOneOfPostJson$inboundSchema;
    /** @deprecated use `PrimitiveTypeOneOfPostJson$outboundSchema` instead. */
    export const outboundSchema = PrimitiveTypeOneOfPostJson$outboundSchema;
    /** @deprecated use `PrimitiveTypeOneOfPostJson$Outbound` instead. */
    export type Outbound = PrimitiveTypeOneOfPostJson$Outbound;
}

/** @internal */
export const PrimitiveTypeOneOfPostRes$inboundSchema: z.ZodType<
    PrimitiveTypeOneOfPostRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    json: z.union([z.string(), z.number().int(), z.number(), z.boolean()]),
});

/** @internal */
export type PrimitiveTypeOneOfPostRes$Outbound = {
    json: string | number | number | boolean;
};

/** @internal */
export const PrimitiveTypeOneOfPostRes$outboundSchema: z.ZodType<
    PrimitiveTypeOneOfPostRes$Outbound,
    z.ZodTypeDef,
    PrimitiveTypeOneOfPostRes
> = z.object({
    json: z.union([z.string(), z.number().int(), z.number(), z.boolean()]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrimitiveTypeOneOfPostRes$ {
    /** @deprecated use `PrimitiveTypeOneOfPostRes$inboundSchema` instead. */
    export const inboundSchema = PrimitiveTypeOneOfPostRes$inboundSchema;
    /** @deprecated use `PrimitiveTypeOneOfPostRes$outboundSchema` instead. */
    export const outboundSchema = PrimitiveTypeOneOfPostRes$outboundSchema;
    /** @deprecated use `PrimitiveTypeOneOfPostRes$Outbound` instead. */
    export type Outbound = PrimitiveTypeOneOfPostRes$Outbound;
}
