/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type PrimitiveTypeOneOfPostRequestBody = string | number | number | boolean;

export type PrimitiveTypeOneOfPostJson = string | number | number | boolean;

/**
 * OK
 */
export type PrimitiveTypeOneOfPostRes = {
    json: string | number | number | boolean;
};

/** @internal */
export namespace PrimitiveTypeOneOfPostRequestBody$ {
    export const inboundSchema: z.ZodType<
        PrimitiveTypeOneOfPostRequestBody,
        z.ZodTypeDef,
        unknown
    > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);

    export type Outbound = string | number | number | boolean;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PrimitiveTypeOneOfPostRequestBody
    > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
}

/** @internal */
export namespace PrimitiveTypeOneOfPostJson$ {
    export const inboundSchema: z.ZodType<PrimitiveTypeOneOfPostJson, z.ZodTypeDef, unknown> =
        z.union([z.string(), z.number().int(), z.number(), z.boolean()]);

    export type Outbound = string | number | number | boolean;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PrimitiveTypeOneOfPostJson> =
        z.union([z.string(), z.number().int(), z.number(), z.boolean()]);
}

/** @internal */
export namespace PrimitiveTypeOneOfPostRes$ {
    export const inboundSchema: z.ZodType<PrimitiveTypeOneOfPostRes, z.ZodTypeDef, unknown> =
        z.object({
            json: z.union([z.string(), z.number().int(), z.number(), z.boolean()]),
        });

    export type Outbound = {
        json: string | number | number | boolean;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PrimitiveTypeOneOfPostRes> =
        z.object({
            json: z.union([z.string(), z.number().int(), z.number(), z.boolean()]),
        });
}
