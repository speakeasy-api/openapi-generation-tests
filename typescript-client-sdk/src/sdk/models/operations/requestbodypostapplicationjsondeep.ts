/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type RequestBodyPostApplicationJsonDeepRes = {
  json?: shared.DeepObject | undefined;
};

/** @internal */
export const RequestBodyPostApplicationJsonDeepRes$inboundSchema: z.ZodType<
  RequestBodyPostApplicationJsonDeepRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.DeepObject$inboundSchema.optional(),
});

/** @internal */
export type RequestBodyPostApplicationJsonDeepRes$Outbound = {
  json?: shared.DeepObject$Outbound | undefined;
};

/** @internal */
export const RequestBodyPostApplicationJsonDeepRes$outboundSchema: z.ZodType<
  RequestBodyPostApplicationJsonDeepRes$Outbound,
  z.ZodTypeDef,
  RequestBodyPostApplicationJsonDeepRes
> = z.object({
  json: shared.DeepObject$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostApplicationJsonDeepRes$ {
  /** @deprecated use `RequestBodyPostApplicationJsonDeepRes$inboundSchema` instead. */
  export const inboundSchema =
    RequestBodyPostApplicationJsonDeepRes$inboundSchema;
  /** @deprecated use `RequestBodyPostApplicationJsonDeepRes$outboundSchema` instead. */
  export const outboundSchema =
    RequestBodyPostApplicationJsonDeepRes$outboundSchema;
  /** @deprecated use `RequestBodyPostApplicationJsonDeepRes$Outbound` instead. */
  export type Outbound = RequestBodyPostApplicationJsonDeepRes$Outbound;
}

export function requestBodyPostApplicationJsonDeepResToJSON(
  requestBodyPostApplicationJsonDeepRes: RequestBodyPostApplicationJsonDeepRes,
): string {
  return JSON.stringify(
    RequestBodyPostApplicationJsonDeepRes$outboundSchema.parse(
      requestBodyPostApplicationJsonDeepRes,
    ),
  );
}

export function requestBodyPostApplicationJsonDeepResFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyPostApplicationJsonDeepRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RequestBodyPostApplicationJsonDeepRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyPostApplicationJsonDeepRes' from JSON`,
  );
}
