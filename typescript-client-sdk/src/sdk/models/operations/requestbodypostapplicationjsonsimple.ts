/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type RequestBodyPostApplicationJsonSimpleRes = {
  /**
   * A simple object that uses all our supported primitive types and enums and has optional properties.
   */
  json: shared.SimpleObject;
};

/** @internal */
export const RequestBodyPostApplicationJsonSimpleRes$inboundSchema: z.ZodType<
  RequestBodyPostApplicationJsonSimpleRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.SimpleObject$inboundSchema,
});

/** @internal */
export type RequestBodyPostApplicationJsonSimpleRes$Outbound = {
  json: shared.SimpleObject$Outbound;
};

/** @internal */
export const RequestBodyPostApplicationJsonSimpleRes$outboundSchema: z.ZodType<
  RequestBodyPostApplicationJsonSimpleRes$Outbound,
  z.ZodTypeDef,
  RequestBodyPostApplicationJsonSimpleRes
> = z.object({
  json: shared.SimpleObject$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostApplicationJsonSimpleRes$ {
  /** @deprecated use `RequestBodyPostApplicationJsonSimpleRes$inboundSchema` instead. */
  export const inboundSchema =
    RequestBodyPostApplicationJsonSimpleRes$inboundSchema;
  /** @deprecated use `RequestBodyPostApplicationJsonSimpleRes$outboundSchema` instead. */
  export const outboundSchema =
    RequestBodyPostApplicationJsonSimpleRes$outboundSchema;
  /** @deprecated use `RequestBodyPostApplicationJsonSimpleRes$Outbound` instead. */
  export type Outbound = RequestBodyPostApplicationJsonSimpleRes$Outbound;
}

export function requestBodyPostApplicationJsonSimpleResToJSON(
  requestBodyPostApplicationJsonSimpleRes:
    RequestBodyPostApplicationJsonSimpleRes,
): string {
  return JSON.stringify(
    RequestBodyPostApplicationJsonSimpleRes$outboundSchema.parse(
      requestBodyPostApplicationJsonSimpleRes,
    ),
  );
}

export function requestBodyPostApplicationJsonSimpleResFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestBodyPostApplicationJsonSimpleRes,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestBodyPostApplicationJsonSimpleRes$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RequestBodyPostApplicationJsonSimpleRes' from JSON`,
  );
}
