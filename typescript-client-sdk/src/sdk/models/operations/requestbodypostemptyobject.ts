/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class RequestBodyPostEmptyObjectRequestBodyEmpty extends SpeakeasyBase {}

export class RequestBodyPostEmptyObjectRequestBodyEmptyWithEmptyProperties extends SpeakeasyBase {}

export class RequestBodyPostEmptyObjectRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "empty" })
    @Type(() => RequestBodyPostEmptyObjectRequestBodyEmpty)
    empty?: RequestBodyPostEmptyObjectRequestBodyEmpty;

    @SpeakeasyMetadata()
    @Expose({ name: "emptyWithEmptyProperties" })
    @Type(() => RequestBodyPostEmptyObjectRequestBodyEmptyWithEmptyProperties)
    emptyWithEmptyProperties?: RequestBodyPostEmptyObjectRequestBodyEmptyWithEmptyProperties;
}

export class RequestBodyPostEmptyObject200ApplicationJSONEmpty extends SpeakeasyBase {}

export class RequestBodyPostEmptyObject200ApplicationJSONEmptyRespWithEmptyProperies extends SpeakeasyBase {}

/**
 * OK
 */
export class RequestBodyPostEmptyObject200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "empty" })
    @Type(() => RequestBodyPostEmptyObject200ApplicationJSONEmpty)
    empty?: RequestBodyPostEmptyObject200ApplicationJSONEmpty;

    @SpeakeasyMetadata()
    @Expose({ name: "emptyRespWithEmptyProperies" })
    @Type(() => RequestBodyPostEmptyObject200ApplicationJSONEmptyRespWithEmptyProperies)
    emptyRespWithEmptyProperies?: RequestBodyPostEmptyObject200ApplicationJSONEmptyRespWithEmptyProperies;
}

export class RequestBodyPostEmptyObjectResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    requestBodyPostEmptyObject200ApplicationJSONObject?: RequestBodyPostEmptyObject200ApplicationJSON;
}
