/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class Empty extends SpeakeasyBase {}

export class EmptyWithEmptyProperties extends SpeakeasyBase {}

export class RequestBodyPostEmptyObjectRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "empty" })
    @Type(() => Empty)
    empty?: Empty;

    @SpeakeasyMetadata()
    @Expose({ name: "emptyWithEmptyProperties" })
    @Type(() => EmptyWithEmptyProperties)
    emptyWithEmptyProperties?: EmptyWithEmptyProperties;
}

export class RequestBodyPostEmptyObjectEmpty extends SpeakeasyBase {}

export class EmptyRespWithEmptyProperies extends SpeakeasyBase {}

/**
 * OK
 */
export class RequestBodyPostEmptyObjectResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "empty" })
    @Type(() => RequestBodyPostEmptyObjectEmpty)
    empty?: RequestBodyPostEmptyObjectEmpty;

    @SpeakeasyMetadata()
    @Expose({ name: "emptyRespWithEmptyProperies" })
    @Type(() => EmptyRespWithEmptyProperies)
    emptyRespWithEmptyProperies?: EmptyRespWithEmptyProperies;
}

export class RequestBodyPostEmptyObjectResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    object?: RequestBodyPostEmptyObjectResponseBody;
}
