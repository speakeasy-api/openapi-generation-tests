/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostFormMapPrimitiveRes = {
    form: { [k: string]: string };
};

/** @internal */
export const RequestBodyPostFormMapPrimitiveRes$inboundSchema: z.ZodType<
    RequestBodyPostFormMapPrimitiveRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    form: z.record(z.string()),
});

/** @internal */
export type RequestBodyPostFormMapPrimitiveRes$Outbound = {
    form: { [k: string]: string };
};

/** @internal */
export const RequestBodyPostFormMapPrimitiveRes$outboundSchema: z.ZodType<
    RequestBodyPostFormMapPrimitiveRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPostFormMapPrimitiveRes
> = z.object({
    form: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostFormMapPrimitiveRes$ {
    /** @deprecated use `RequestBodyPostFormMapPrimitiveRes$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostFormMapPrimitiveRes$inboundSchema;
    /** @deprecated use `RequestBodyPostFormMapPrimitiveRes$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostFormMapPrimitiveRes$outboundSchema;
    /** @deprecated use `RequestBodyPostFormMapPrimitiveRes$Outbound` instead. */
    export type Outbound = RequestBodyPostFormMapPrimitiveRes$Outbound;
}
