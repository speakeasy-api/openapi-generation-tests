/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type RequestBodyPostFormSimpleForm = {
    any: string;
    bigint?: string | undefined;
    bigintStr?: string | undefined;
    bool: string;
    boolOpt?: string | undefined;
    date: string;
    dateTime: string;
    decimal?: string | undefined;
    decimalStr?: string | undefined;
    enum: string;
    float32: string;
    int: string;
    int32: string;
    int32Enum: string;
    intEnum: string;
    intOptNull?: string | undefined;
    num: string;
    numOptNull?: string | undefined;
    str: string;
    strOpt?: string | undefined;
};

export type RequestBodyPostFormSimpleHeaders = {
    contentType: string;
};

/**
 * OK
 */
export type RequestBodyPostFormSimpleRes = {
    form: RequestBodyPostFormSimpleForm;
    headers: RequestBodyPostFormSimpleHeaders;
};

/** @internal */
export const RequestBodyPostFormSimpleForm$inboundSchema: z.ZodType<
    RequestBodyPostFormSimpleForm,
    z.ZodTypeDef,
    unknown
> = z.object({
    any: z.string(),
    bigint: z.string().optional(),
    bigintStr: z.string().optional(),
    bool: z.string(),
    boolOpt: z.string().optional(),
    date: z.string(),
    dateTime: z.string(),
    decimal: z.string().optional(),
    decimalStr: z.string().optional(),
    enum: z.string(),
    float32: z.string(),
    int: z.string(),
    int32: z.string(),
    int32Enum: z.string(),
    intEnum: z.string(),
    intOptNull: z.string().optional(),
    num: z.string(),
    numOptNull: z.string().optional(),
    str: z.string(),
    strOpt: z.string().optional(),
});

/** @internal */
export type RequestBodyPostFormSimpleForm$Outbound = {
    any: string;
    bigint?: string | undefined;
    bigintStr?: string | undefined;
    bool: string;
    boolOpt?: string | undefined;
    date: string;
    dateTime: string;
    decimal?: string | undefined;
    decimalStr?: string | undefined;
    enum: string;
    float32: string;
    int: string;
    int32: string;
    int32Enum: string;
    intEnum: string;
    intOptNull?: string | undefined;
    num: string;
    numOptNull?: string | undefined;
    str: string;
    strOpt?: string | undefined;
};

/** @internal */
export const RequestBodyPostFormSimpleForm$outboundSchema: z.ZodType<
    RequestBodyPostFormSimpleForm$Outbound,
    z.ZodTypeDef,
    RequestBodyPostFormSimpleForm
> = z.object({
    any: z.string(),
    bigint: z.string().optional(),
    bigintStr: z.string().optional(),
    bool: z.string(),
    boolOpt: z.string().optional(),
    date: z.string(),
    dateTime: z.string(),
    decimal: z.string().optional(),
    decimalStr: z.string().optional(),
    enum: z.string(),
    float32: z.string(),
    int: z.string(),
    int32: z.string(),
    int32Enum: z.string(),
    intEnum: z.string(),
    intOptNull: z.string().optional(),
    num: z.string(),
    numOptNull: z.string().optional(),
    str: z.string(),
    strOpt: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostFormSimpleForm$ {
    /** @deprecated use `RequestBodyPostFormSimpleForm$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostFormSimpleForm$inboundSchema;
    /** @deprecated use `RequestBodyPostFormSimpleForm$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostFormSimpleForm$outboundSchema;
    /** @deprecated use `RequestBodyPostFormSimpleForm$Outbound` instead. */
    export type Outbound = RequestBodyPostFormSimpleForm$Outbound;
}

/** @internal */
export const RequestBodyPostFormSimpleHeaders$inboundSchema: z.ZodType<
    RequestBodyPostFormSimpleHeaders,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "Content-Type": z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "Content-Type": "contentType",
        });
    });

/** @internal */
export type RequestBodyPostFormSimpleHeaders$Outbound = {
    "Content-Type": string;
};

/** @internal */
export const RequestBodyPostFormSimpleHeaders$outboundSchema: z.ZodType<
    RequestBodyPostFormSimpleHeaders$Outbound,
    z.ZodTypeDef,
    RequestBodyPostFormSimpleHeaders
> = z
    .object({
        contentType: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "Content-Type",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostFormSimpleHeaders$ {
    /** @deprecated use `RequestBodyPostFormSimpleHeaders$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostFormSimpleHeaders$inboundSchema;
    /** @deprecated use `RequestBodyPostFormSimpleHeaders$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostFormSimpleHeaders$outboundSchema;
    /** @deprecated use `RequestBodyPostFormSimpleHeaders$Outbound` instead. */
    export type Outbound = RequestBodyPostFormSimpleHeaders$Outbound;
}

/** @internal */
export const RequestBodyPostFormSimpleRes$inboundSchema: z.ZodType<
    RequestBodyPostFormSimpleRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    form: z.lazy(() => RequestBodyPostFormSimpleForm$inboundSchema),
    headers: z.lazy(() => RequestBodyPostFormSimpleHeaders$inboundSchema),
});

/** @internal */
export type RequestBodyPostFormSimpleRes$Outbound = {
    form: RequestBodyPostFormSimpleForm$Outbound;
    headers: RequestBodyPostFormSimpleHeaders$Outbound;
};

/** @internal */
export const RequestBodyPostFormSimpleRes$outboundSchema: z.ZodType<
    RequestBodyPostFormSimpleRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPostFormSimpleRes
> = z.object({
    form: z.lazy(() => RequestBodyPostFormSimpleForm$outboundSchema),
    headers: z.lazy(() => RequestBodyPostFormSimpleHeaders$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostFormSimpleRes$ {
    /** @deprecated use `RequestBodyPostFormSimpleRes$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostFormSimpleRes$inboundSchema;
    /** @deprecated use `RequestBodyPostFormSimpleRes$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostFormSimpleRes$outboundSchema;
    /** @deprecated use `RequestBodyPostFormSimpleRes$Outbound` instead. */
    export type Outbound = RequestBodyPostFormSimpleRes$Outbound;
}
