/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { RFCDate } from "../../types/rfcdate.js";
import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesArrayDateResponseBody = {
    data: string;
    json: Array<RFCDate>;
};

/** @internal */
export namespace RequestBodyPostJsonDataTypesArrayDateResponseBody$ {
    export const inboundSchema: z.ZodType<
        RequestBodyPostJsonDataTypesArrayDateResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        data: z.string(),
        json: z.array(z.string().transform((v) => new RFCDate(v))),
    });

    export type Outbound = {
        data: string;
        json: Array<string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestBodyPostJsonDataTypesArrayDateResponseBody
    > = z.object({
        data: z.string(),
        json: z.array(z.instanceof(RFCDate).transform((v) => v.toString())),
    });
}
