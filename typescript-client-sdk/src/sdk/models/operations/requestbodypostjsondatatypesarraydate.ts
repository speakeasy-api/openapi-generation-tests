/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { RFCDate } from "../../types/rfcdate.js";
import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesArrayDateResponseBody = {
    data: string;
    json: Array<RFCDate>;
};

/** @internal */
export const RequestBodyPostJsonDataTypesArrayDateResponseBody$inboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesArrayDateResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.string(),
    json: z.array(z.string().transform((v) => new RFCDate(v))),
});

/** @internal */
export type RequestBodyPostJsonDataTypesArrayDateResponseBody$Outbound = {
    data: string;
    json: Array<string>;
};

/** @internal */
export const RequestBodyPostJsonDataTypesArrayDateResponseBody$outboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesArrayDateResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesArrayDateResponseBody
> = z.object({
    data: z.string(),
    json: z.array(z.instanceof(RFCDate).transform((v) => v.toString())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesArrayDateResponseBody$ {
    /** @deprecated use `RequestBodyPostJsonDataTypesArrayDateResponseBody$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostJsonDataTypesArrayDateResponseBody$inboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesArrayDateResponseBody$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostJsonDataTypesArrayDateResponseBody$outboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesArrayDateResponseBody$Outbound` instead. */
    export type Outbound = RequestBodyPostJsonDataTypesArrayDateResponseBody$Outbound;
}
