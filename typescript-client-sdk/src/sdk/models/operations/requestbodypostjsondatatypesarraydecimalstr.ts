/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Decimal as Decimal$ } from "../../types/decimal.js";
import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody = {
    data: string;
    json: Array<Decimal$ | number>;
};

/** @internal */
export const RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$inboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.string(),
    json: z.array(z.string().transform((v) => new Decimal$(v))),
});

/** @internal */
export type RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$Outbound = {
    data: string;
    json: Array<string>;
};

/** @internal */
export const RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$outboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody
> = z.object({
    data: z.string(),
    json: z.array(z.union([z.instanceof(Decimal$), z.number()]).transform((v) => `${v}`)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$ {
    /** @deprecated use `RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$inboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$outboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$Outbound` instead. */
    export type Outbound = RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$Outbound;
}
