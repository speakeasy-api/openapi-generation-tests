/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Decimal as Decimal$ } from "../../types/decimal.js";
import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody = {
    data: string;
    json: Array<Decimal$ | number>;
};

/** @internal */
export namespace RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody$ {
    export const inboundSchema: z.ZodType<
        RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        data: z.string(),
        json: z.array(z.string().transform((v) => new Decimal$(v))),
    });

    export type Outbound = {
        data: string;
        json: Array<string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestBodyPostJsonDataTypesArrayDecimalStrResponseBody
    > = z.object({
        data: z.string(),
        json: z.array(z.union([z.instanceof(Decimal$), z.number()]).transform((v) => `${v}`)),
    });
}
