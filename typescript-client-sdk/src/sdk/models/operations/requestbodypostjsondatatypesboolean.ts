/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesBooleanResponseBody = {
  json: boolean;
};

/** @internal */
export const RequestBodyPostJsonDataTypesBooleanResponseBody$inboundSchema:
  z.ZodType<
    RequestBodyPostJsonDataTypesBooleanResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    json: z.boolean(),
  });

/** @internal */
export type RequestBodyPostJsonDataTypesBooleanResponseBody$Outbound = {
  json: boolean;
};

/** @internal */
export const RequestBodyPostJsonDataTypesBooleanResponseBody$outboundSchema:
  z.ZodType<
    RequestBodyPostJsonDataTypesBooleanResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesBooleanResponseBody
  > = z.object({
    json: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesBooleanResponseBody$ {
  /** @deprecated use `RequestBodyPostJsonDataTypesBooleanResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RequestBodyPostJsonDataTypesBooleanResponseBody$inboundSchema;
  /** @deprecated use `RequestBodyPostJsonDataTypesBooleanResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RequestBodyPostJsonDataTypesBooleanResponseBody$outboundSchema;
  /** @deprecated use `RequestBodyPostJsonDataTypesBooleanResponseBody$Outbound` instead. */
  export type Outbound =
    RequestBodyPostJsonDataTypesBooleanResponseBody$Outbound;
}

export function requestBodyPostJsonDataTypesBooleanResponseBodyToJSON(
  requestBodyPostJsonDataTypesBooleanResponseBody:
    RequestBodyPostJsonDataTypesBooleanResponseBody,
): string {
  return JSON.stringify(
    RequestBodyPostJsonDataTypesBooleanResponseBody$outboundSchema.parse(
      requestBodyPostJsonDataTypesBooleanResponseBody,
    ),
  );
}

export function requestBodyPostJsonDataTypesBooleanResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestBodyPostJsonDataTypesBooleanResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestBodyPostJsonDataTypesBooleanResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RequestBodyPostJsonDataTypesBooleanResponseBody' from JSON`,
  );
}
