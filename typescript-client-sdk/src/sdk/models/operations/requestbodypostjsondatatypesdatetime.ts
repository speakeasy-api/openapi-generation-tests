/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesDateTimeResponseBody = {
    data: string;
    json: Date;
};

/** @internal */
export const RequestBodyPostJsonDataTypesDateTimeResponseBody$inboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesDateTimeResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.string(),
    json: z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
});

/** @internal */
export type RequestBodyPostJsonDataTypesDateTimeResponseBody$Outbound = {
    data: string;
    json: string;
};

/** @internal */
export const RequestBodyPostJsonDataTypesDateTimeResponseBody$outboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesDateTimeResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesDateTimeResponseBody
> = z.object({
    data: z.string(),
    json: z.date().transform((v) => v.toISOString()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesDateTimeResponseBody$ {
    /** @deprecated use `RequestBodyPostJsonDataTypesDateTimeResponseBody$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostJsonDataTypesDateTimeResponseBody$inboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesDateTimeResponseBody$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostJsonDataTypesDateTimeResponseBody$outboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesDateTimeResponseBody$Outbound` instead. */
    export type Outbound = RequestBodyPostJsonDataTypesDateTimeResponseBody$Outbound;
}
