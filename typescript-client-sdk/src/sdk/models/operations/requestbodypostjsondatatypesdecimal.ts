/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Decimal as Decimal$ } from "../../types/decimal.js";
import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesDecimalResponseBody = {
    data: string;
    json: Decimal$ | number;
};

/** @internal */
export const RequestBodyPostJsonDataTypesDecimalResponseBody$inboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesDecimalResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.string(),
    json: z.number().transform((v) => new Decimal$(v)),
});

/** @internal */
export type RequestBodyPostJsonDataTypesDecimalResponseBody$Outbound = {
    data: string;
    json: number;
};

/** @internal */
export const RequestBodyPostJsonDataTypesDecimalResponseBody$outboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesDecimalResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesDecimalResponseBody
> = z.object({
    data: z.string(),
    json: z
        .union([z.instanceof(Decimal$), z.number()])
        .transform((v) => (typeof v === "number" ? v : v.toNumber())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesDecimalResponseBody$ {
    /** @deprecated use `RequestBodyPostJsonDataTypesDecimalResponseBody$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostJsonDataTypesDecimalResponseBody$inboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesDecimalResponseBody$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostJsonDataTypesDecimalResponseBody$outboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesDecimalResponseBody$Outbound` instead. */
    export type Outbound = RequestBodyPostJsonDataTypesDecimalResponseBody$Outbound;
}
