/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { Decimal as Decimal$ } from "../../types/decimal.js";
import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesDecimalStrResponseBody = {
    data: string;
    json: Decimal$ | number;
};

/** @internal */
export const RequestBodyPostJsonDataTypesDecimalStrResponseBody$inboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesDecimalStrResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.string(),
    json: z.string().transform((v) => new Decimal$(v)),
});

/** @internal */
export type RequestBodyPostJsonDataTypesDecimalStrResponseBody$Outbound = {
    data: string;
    json: string;
};

/** @internal */
export const RequestBodyPostJsonDataTypesDecimalStrResponseBody$outboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesDecimalStrResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesDecimalStrResponseBody
> = z.object({
    data: z.string(),
    json: z.union([z.instanceof(Decimal$), z.number()]).transform((v) => `${v}`),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesDecimalStrResponseBody$ {
    /** @deprecated use `RequestBodyPostJsonDataTypesDecimalStrResponseBody$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostJsonDataTypesDecimalStrResponseBody$inboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesDecimalStrResponseBody$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostJsonDataTypesDecimalStrResponseBody$outboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesDecimalStrResponseBody$Outbound` instead. */
    export type Outbound = RequestBodyPostJsonDataTypesDecimalStrResponseBody$Outbound;
}
