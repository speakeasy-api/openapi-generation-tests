/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { Decimal as Decimal$ } from "../../types/decimal.js";
import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesMapDecimalResponseBody = {
    data: string;
    json: { [k: string]: Decimal$ | number };
};

/** @internal */
export const RequestBodyPostJsonDataTypesMapDecimalResponseBody$inboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesMapDecimalResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.string(),
    json: z.record(z.number().transform((v) => new Decimal$(v))),
});

/** @internal */
export type RequestBodyPostJsonDataTypesMapDecimalResponseBody$Outbound = {
    data: string;
    json: { [k: string]: number };
};

/** @internal */
export const RequestBodyPostJsonDataTypesMapDecimalResponseBody$outboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesMapDecimalResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesMapDecimalResponseBody
> = z.object({
    data: z.string(),
    json: z.record(
        z
            .union([z.instanceof(Decimal$), z.number()])
            .transform((v) => (typeof v === "number" ? v : v.toNumber()))
    ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesMapDecimalResponseBody$ {
    /** @deprecated use `RequestBodyPostJsonDataTypesMapDecimalResponseBody$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostJsonDataTypesMapDecimalResponseBody$inboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesMapDecimalResponseBody$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostJsonDataTypesMapDecimalResponseBody$outboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesMapDecimalResponseBody$Outbound` instead. */
    export type Outbound = RequestBodyPostJsonDataTypesMapDecimalResponseBody$Outbound;
}
