/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * OK
 */
export type RequestBodyPostJsonDataTypesStringResponseBody = {
    json: string;
};

/** @internal */
export const RequestBodyPostJsonDataTypesStringResponseBody$inboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesStringResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    json: z.string(),
});

/** @internal */
export type RequestBodyPostJsonDataTypesStringResponseBody$Outbound = {
    json: string;
};

/** @internal */
export const RequestBodyPostJsonDataTypesStringResponseBody$outboundSchema: z.ZodType<
    RequestBodyPostJsonDataTypesStringResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostJsonDataTypesStringResponseBody
> = z.object({
    json: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostJsonDataTypesStringResponseBody$ {
    /** @deprecated use `RequestBodyPostJsonDataTypesStringResponseBody$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostJsonDataTypesStringResponseBody$inboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesStringResponseBody$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostJsonDataTypesStringResponseBody$outboundSchema;
    /** @deprecated use `RequestBodyPostJsonDataTypesStringResponseBody$Outbound` instead. */
    export type Outbound = RequestBodyPostJsonDataTypesStringResponseBody$Outbound;
}
