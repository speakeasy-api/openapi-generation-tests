/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes =
  {
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    json: shared.SimpleObject;
  };

/** @internal */
export const RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$inboundSchema:
  z.ZodType<
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes,
    z.ZodTypeDef,
    unknown
  > = z.object({
    json: shared.SimpleObject$inboundSchema,
  });

/** @internal */
export type RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$Outbound =
  {
    json: shared.SimpleObject$Outbound;
  };

/** @internal */
export const RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$outboundSchema:
  z.ZodType<
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes
  > = z.object({
    json: shared.SimpleObject$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$ {
  /** @deprecated use `RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$inboundSchema` instead. */
  export const inboundSchema =
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$inboundSchema;
  /** @deprecated use `RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$outboundSchema` instead. */
  export const outboundSchema =
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$outboundSchema;
  /** @deprecated use `RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$Outbound` instead. */
  export type Outbound =
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$Outbound;
}

export function requestBodyPostMultipleContentTypesComponentFilteredDefaultTestResToJSON(
  requestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes:
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes,
): string {
  return JSON.stringify(
    RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$outboundSchema
      .parse(
        requestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes,
      ),
  );
}

export function requestBodyPostMultipleContentTypesComponentFilteredDefaultTestResFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyPostMultipleContentTypesComponentFilteredDefaultTestRes' from JSON`,
  );
}
