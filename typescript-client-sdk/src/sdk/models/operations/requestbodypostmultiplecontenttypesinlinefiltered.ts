/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RequestBodyPostMultipleContentTypesInlineFilteredRequestBody = {
    bool: boolean;
    num: number;
    str: string;
};

/**
 * OK
 */
export type RequestBodyPostMultipleContentTypesInlineFilteredRes = {
    json?: { [k: string]: any } | undefined;
};

/** @internal */
export const RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$inboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesInlineFilteredRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    bool: z.boolean(),
    num: z.number(),
    str: z.string(),
});

/** @internal */
export type RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$Outbound = {
    bool: boolean;
    num: number;
    str: string;
};

/** @internal */
export const RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$outboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostMultipleContentTypesInlineFilteredRequestBody
> = z.object({
    bool: z.boolean(),
    num: z.number(),
    str: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$ {
    /** @deprecated use `RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$inboundSchema` instead. */
    export const inboundSchema =
        RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$inboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$outboundSchema` instead. */
    export const outboundSchema =
        RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$outboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$Outbound` instead. */
    export type Outbound = RequestBodyPostMultipleContentTypesInlineFilteredRequestBody$Outbound;
}

/** @internal */
export const RequestBodyPostMultipleContentTypesInlineFilteredRes$inboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesInlineFilteredRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    json: z.record(z.any()).optional(),
});

/** @internal */
export type RequestBodyPostMultipleContentTypesInlineFilteredRes$Outbound = {
    json?: { [k: string]: any } | undefined;
};

/** @internal */
export const RequestBodyPostMultipleContentTypesInlineFilteredRes$outboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesInlineFilteredRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPostMultipleContentTypesInlineFilteredRes
> = z.object({
    json: z.record(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostMultipleContentTypesInlineFilteredRes$ {
    /** @deprecated use `RequestBodyPostMultipleContentTypesInlineFilteredRes$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostMultipleContentTypesInlineFilteredRes$inboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesInlineFilteredRes$outboundSchema` instead. */
    export const outboundSchema =
        RequestBodyPostMultipleContentTypesInlineFilteredRes$outboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesInlineFilteredRes$Outbound` instead. */
    export type Outbound = RequestBodyPostMultipleContentTypesInlineFilteredRes$Outbound;
}
