/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RequestBodyPostMultipleContentTypesSplitFormRequestBody = {
    bool3: boolean;
    num3: number;
    str3: string;
};

/**
 * OK
 */
export type RequestBodyPostMultipleContentTypesSplitFormRes = {
    form?: { [k: string]: any } | undefined;
    json?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const RequestBodyPostMultipleContentTypesSplitFormRequestBody$inboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesSplitFormRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    bool3: z.boolean(),
    num3: z.number(),
    str3: z.string(),
});

/** @internal */
export type RequestBodyPostMultipleContentTypesSplitFormRequestBody$Outbound = {
    bool3: boolean;
    num3: number;
    str3: string;
};

/** @internal */
export const RequestBodyPostMultipleContentTypesSplitFormRequestBody$outboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesSplitFormRequestBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostMultipleContentTypesSplitFormRequestBody
> = z.object({
    bool3: z.boolean(),
    num3: z.number(),
    str3: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostMultipleContentTypesSplitFormRequestBody$ {
    /** @deprecated use `RequestBodyPostMultipleContentTypesSplitFormRequestBody$inboundSchema` instead. */
    export const inboundSchema =
        RequestBodyPostMultipleContentTypesSplitFormRequestBody$inboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesSplitFormRequestBody$outboundSchema` instead. */
    export const outboundSchema =
        RequestBodyPostMultipleContentTypesSplitFormRequestBody$outboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesSplitFormRequestBody$Outbound` instead. */
    export type Outbound = RequestBodyPostMultipleContentTypesSplitFormRequestBody$Outbound;
}

/** @internal */
export const RequestBodyPostMultipleContentTypesSplitFormRes$inboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesSplitFormRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    form: z.record(z.any()).optional(),
    json: z.nullable(z.record(z.any())).optional(),
});

/** @internal */
export type RequestBodyPostMultipleContentTypesSplitFormRes$Outbound = {
    form?: { [k: string]: any } | undefined;
    json?: { [k: string]: any } | null | undefined;
};

/** @internal */
export const RequestBodyPostMultipleContentTypesSplitFormRes$outboundSchema: z.ZodType<
    RequestBodyPostMultipleContentTypesSplitFormRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPostMultipleContentTypesSplitFormRes
> = z.object({
    form: z.record(z.any()).optional(),
    json: z.nullable(z.record(z.any())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostMultipleContentTypesSplitFormRes$ {
    /** @deprecated use `RequestBodyPostMultipleContentTypesSplitFormRes$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPostMultipleContentTypesSplitFormRes$inboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesSplitFormRes$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPostMultipleContentTypesSplitFormRes$outboundSchema;
    /** @deprecated use `RequestBodyPostMultipleContentTypesSplitFormRes$Outbound` instead. */
    export type Outbound = RequestBodyPostMultipleContentTypesSplitFormRes$Outbound;
}
