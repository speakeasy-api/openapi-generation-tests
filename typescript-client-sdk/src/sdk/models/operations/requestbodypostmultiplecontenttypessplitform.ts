/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RequestBodyPostMultipleContentTypesSplitFormRequestBody = {
    bool3: boolean;
    num3: number;
    str3: string;
};

/**
 * OK
 */
export type RequestBodyPostMultipleContentTypesSplitFormRes = {
    form?: { [k: string]: any } | undefined;
    json?: { [k: string]: any } | null | undefined;
};

/** @internal */
export namespace RequestBodyPostMultipleContentTypesSplitFormRequestBody$ {
    export const inboundSchema: z.ZodType<
        RequestBodyPostMultipleContentTypesSplitFormRequestBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        bool3: z.boolean(),
        num3: z.number(),
        str3: z.string(),
    });

    export type Outbound = {
        bool3: boolean;
        num3: number;
        str3: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestBodyPostMultipleContentTypesSplitFormRequestBody
    > = z.object({
        bool3: z.boolean(),
        num3: z.number(),
        str3: z.string(),
    });
}

/** @internal */
export namespace RequestBodyPostMultipleContentTypesSplitFormRes$ {
    export const inboundSchema: z.ZodType<
        RequestBodyPostMultipleContentTypesSplitFormRes,
        z.ZodTypeDef,
        unknown
    > = z.object({
        form: z.record(z.any()).optional(),
        json: z.nullable(z.record(z.any())).optional(),
    });

    export type Outbound = {
        form?: { [k: string]: any } | undefined;
        json?: { [k: string]: any } | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestBodyPostMultipleContentTypesSplitFormRes
    > = z.object({
        form: z.record(z.any()).optional(),
        json: z.nullable(z.record(z.any())).optional(),
    });
}
