/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RequestBodyPostMultipleContentTypesSplitMultipartRequestBody = {
    bool2: boolean;
    num2: number;
    str2: string;
};

/**
 * OK
 */
export type RequestBodyPostMultipleContentTypesSplitMultipartRes = {
    form?: { [k: string]: any } | undefined;
    json?: { [k: string]: any } | null | undefined;
};

/** @internal */
export namespace RequestBodyPostMultipleContentTypesSplitMultipartRequestBody$ {
    export const inboundSchema: z.ZodType<
        RequestBodyPostMultipleContentTypesSplitMultipartRequestBody,
        z.ZodTypeDef,
        unknown
    > = z.object({
        bool2: z.boolean(),
        num2: z.number(),
        str2: z.string(),
    });

    export type Outbound = {
        bool2: boolean;
        num2: number;
        str2: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestBodyPostMultipleContentTypesSplitMultipartRequestBody
    > = z.object({
        bool2: z.boolean(),
        num2: z.number(),
        str2: z.string(),
    });
}

/** @internal */
export namespace RequestBodyPostMultipleContentTypesSplitMultipartRes$ {
    export const inboundSchema: z.ZodType<
        RequestBodyPostMultipleContentTypesSplitMultipartRes,
        z.ZodTypeDef,
        unknown
    > = z.object({
        form: z.record(z.any()).optional(),
        json: z.nullable(z.record(z.any())).optional(),
    });

    export type Outbound = {
        form?: { [k: string]: any } | undefined;
        json?: { [k: string]: any } | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestBodyPostMultipleContentTypesSplitMultipartRes
    > = z.object({
        form: z.record(z.any()).optional(),
        json: z.nullable(z.record(z.any())).optional(),
    });
}
