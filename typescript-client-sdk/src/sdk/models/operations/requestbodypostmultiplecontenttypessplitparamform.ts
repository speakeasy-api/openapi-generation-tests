/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RequestBodyPostMultipleContentTypesSplitParamFormRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "form, name=bool3" })
    bool3: boolean;

    @SpeakeasyMetadata({ data: "form, name=num3" })
    num3: number;

    @SpeakeasyMetadata({ data: "form, name=str3" })
    str3: string;
}

export class RequestBodyPostMultipleContentTypesSplitParamFormRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/x-www-form-urlencoded" })
    requestBody: RequestBodyPostMultipleContentTypesSplitParamFormRequestBody;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=paramStr" })
    paramStr: string;
}

/**
 * OK
 */
export class RequestBodyPostMultipleContentTypesSplitParamFormRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "args" })
    args?: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "form" })
    form?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "json" })
    json?: Record<string, any>;
}

export class RequestBodyPostMultipleContentTypesSplitParamFormResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: RequestBodyPostMultipleContentTypesSplitParamFormRes;
}
