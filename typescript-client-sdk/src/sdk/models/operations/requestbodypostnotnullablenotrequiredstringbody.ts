/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type RequestBodyPostNotNullableNotRequiredStringBodyResponseBody = {
  data: string;
};

/** @internal */
export const RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$inboundSchema:
  z.ZodType<
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    data: z.string(),
  });

/** @internal */
export type RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$Outbound =
  {
    data: string;
  };

/** @internal */
export const RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$outboundSchema:
  z.ZodType<
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody
  > = z.object({
    data: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$ {
  /** @deprecated use `RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$inboundSchema;
  /** @deprecated use `RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$outboundSchema;
  /** @deprecated use `RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$Outbound` instead. */
  export type Outbound =
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$Outbound;
}

export function requestBodyPostNotNullableNotRequiredStringBodyResponseBodyToJSON(
  requestBodyPostNotNullableNotRequiredStringBodyResponseBody:
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody,
): string {
  return JSON.stringify(
    RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$outboundSchema
      .parse(requestBodyPostNotNullableNotRequiredStringBodyResponseBody),
  );
}

export function requestBodyPostNotNullableNotRequiredStringBodyResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestBodyPostNotNullableNotRequiredStringBodyResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestBodyPostNotNullableNotRequiredStringBodyResponseBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyPostNotNullableNotRequiredStringBodyResponseBody' from JSON`,
  );
}
