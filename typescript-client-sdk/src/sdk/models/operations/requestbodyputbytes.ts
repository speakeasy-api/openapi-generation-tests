/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type RequestBodyPutBytesRes = {
  data: string;
};

/** @internal */
export const RequestBodyPutBytesRes$inboundSchema: z.ZodType<
  RequestBodyPutBytesRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.string(),
});

/** @internal */
export type RequestBodyPutBytesRes$Outbound = {
  data: string;
};

/** @internal */
export const RequestBodyPutBytesRes$outboundSchema: z.ZodType<
  RequestBodyPutBytesRes$Outbound,
  z.ZodTypeDef,
  RequestBodyPutBytesRes
> = z.object({
  data: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutBytesRes$ {
  /** @deprecated use `RequestBodyPutBytesRes$inboundSchema` instead. */
  export const inboundSchema = RequestBodyPutBytesRes$inboundSchema;
  /** @deprecated use `RequestBodyPutBytesRes$outboundSchema` instead. */
  export const outboundSchema = RequestBodyPutBytesRes$outboundSchema;
  /** @deprecated use `RequestBodyPutBytesRes$Outbound` instead. */
  export type Outbound = RequestBodyPutBytesRes$Outbound;
}

export function requestBodyPutBytesResToJSON(
  requestBodyPutBytesRes: RequestBodyPutBytesRes,
): string {
  return JSON.stringify(
    RequestBodyPutBytesRes$outboundSchema.parse(requestBodyPutBytesRes),
  );
}

export function requestBodyPutBytesResFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyPutBytesRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyPutBytesRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyPutBytesRes' from JSON`,
  );
}
