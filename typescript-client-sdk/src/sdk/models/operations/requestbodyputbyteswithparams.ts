/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as b64$ from "../../../lib/base64.js";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type RequestBodyPutBytesWithParamsRequest = {
    requestBody: Uint8Array | string;
    queryStringParam: string;
};

export type RequestBodyPutBytesWithParamsArgs = {
    queryStringParam: string;
};

/**
 * OK
 */
export type RequestBodyPutBytesWithParamsRes = {
    args: RequestBodyPutBytesWithParamsArgs;
    data: string;
};

/** @internal */
export const RequestBodyPutBytesWithParamsRequest$inboundSchema: z.ZodType<
    RequestBodyPutBytesWithParamsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: b64$.zodInbound,
        queryStringParam: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type RequestBodyPutBytesWithParamsRequest$Outbound = {
    RequestBody: Uint8Array;
    queryStringParam: string;
};

/** @internal */
export const RequestBodyPutBytesWithParamsRequest$outboundSchema: z.ZodType<
    RequestBodyPutBytesWithParamsRequest$Outbound,
    z.ZodTypeDef,
    RequestBodyPutBytesWithParamsRequest
> = z
    .object({
        requestBody: b64$.zodOutbound,
        queryStringParam: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutBytesWithParamsRequest$ {
    /** @deprecated use `RequestBodyPutBytesWithParamsRequest$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutBytesWithParamsRequest$inboundSchema;
    /** @deprecated use `RequestBodyPutBytesWithParamsRequest$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutBytesWithParamsRequest$outboundSchema;
    /** @deprecated use `RequestBodyPutBytesWithParamsRequest$Outbound` instead. */
    export type Outbound = RequestBodyPutBytesWithParamsRequest$Outbound;
}

/** @internal */
export const RequestBodyPutBytesWithParamsArgs$inboundSchema: z.ZodType<
    RequestBodyPutBytesWithParamsArgs,
    z.ZodTypeDef,
    unknown
> = z.object({
    queryStringParam: z.string(),
});

/** @internal */
export type RequestBodyPutBytesWithParamsArgs$Outbound = {
    queryStringParam: string;
};

/** @internal */
export const RequestBodyPutBytesWithParamsArgs$outboundSchema: z.ZodType<
    RequestBodyPutBytesWithParamsArgs$Outbound,
    z.ZodTypeDef,
    RequestBodyPutBytesWithParamsArgs
> = z.object({
    queryStringParam: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutBytesWithParamsArgs$ {
    /** @deprecated use `RequestBodyPutBytesWithParamsArgs$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutBytesWithParamsArgs$inboundSchema;
    /** @deprecated use `RequestBodyPutBytesWithParamsArgs$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutBytesWithParamsArgs$outboundSchema;
    /** @deprecated use `RequestBodyPutBytesWithParamsArgs$Outbound` instead. */
    export type Outbound = RequestBodyPutBytesWithParamsArgs$Outbound;
}

/** @internal */
export const RequestBodyPutBytesWithParamsRes$inboundSchema: z.ZodType<
    RequestBodyPutBytesWithParamsRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    args: z.lazy(() => RequestBodyPutBytesWithParamsArgs$inboundSchema),
    data: z.string(),
});

/** @internal */
export type RequestBodyPutBytesWithParamsRes$Outbound = {
    args: RequestBodyPutBytesWithParamsArgs$Outbound;
    data: string;
};

/** @internal */
export const RequestBodyPutBytesWithParamsRes$outboundSchema: z.ZodType<
    RequestBodyPutBytesWithParamsRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPutBytesWithParamsRes
> = z.object({
    args: z.lazy(() => RequestBodyPutBytesWithParamsArgs$outboundSchema),
    data: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutBytesWithParamsRes$ {
    /** @deprecated use `RequestBodyPutBytesWithParamsRes$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutBytesWithParamsRes$inboundSchema;
    /** @deprecated use `RequestBodyPutBytesWithParamsRes$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutBytesWithParamsRes$outboundSchema;
    /** @deprecated use `RequestBodyPutBytesWithParamsRes$Outbound` instead. */
    export type Outbound = RequestBodyPutBytesWithParamsRes$Outbound;
}
