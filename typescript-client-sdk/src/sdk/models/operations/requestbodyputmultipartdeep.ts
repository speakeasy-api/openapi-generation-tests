/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RequestBodyPutMultipartDeepForm = {
    arr: string;
    bool: string;
    int: string;
    map: string;
    num: string;
    obj: string;
    str: string;
};

/**
 * OK
 */
export type RequestBodyPutMultipartDeepRes = {
    form: RequestBodyPutMultipartDeepForm;
};

/** @internal */
export namespace RequestBodyPutMultipartDeepForm$ {
    export const inboundSchema: z.ZodType<RequestBodyPutMultipartDeepForm, z.ZodTypeDef, unknown> =
        z.object({
            arr: z.string(),
            bool: z.string(),
            int: z.string(),
            map: z.string(),
            num: z.string(),
            obj: z.string(),
            str: z.string(),
        });

    export type Outbound = {
        arr: string;
        bool: string;
        int: string;
        map: string;
        num: string;
        obj: string;
        str: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestBodyPutMultipartDeepForm
    > = z.object({
        arr: z.string(),
        bool: z.string(),
        int: z.string(),
        map: z.string(),
        num: z.string(),
        obj: z.string(),
        str: z.string(),
    });
}

/** @internal */
export namespace RequestBodyPutMultipartDeepRes$ {
    export const inboundSchema: z.ZodType<RequestBodyPutMultipartDeepRes, z.ZodTypeDef, unknown> =
        z.object({
            form: z.lazy(() => RequestBodyPutMultipartDeepForm$.inboundSchema),
        });

    export type Outbound = {
        form: RequestBodyPutMultipartDeepForm$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RequestBodyPutMultipartDeepRes> =
        z.object({
            form: z.lazy(() => RequestBodyPutMultipartDeepForm$.outboundSchema),
        });
}
