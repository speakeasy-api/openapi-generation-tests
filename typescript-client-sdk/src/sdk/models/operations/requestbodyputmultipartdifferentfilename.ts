/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { blobLikeSchema } from "../../types/blobs.js";

export type DifferentFileName = {
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
  fileName: string;
};

export type RequestBodyPutMultipartDifferentFileNameRequestBody = {
  differentFileName?: DifferentFileName | Blob | undefined;
};

/**
 * OK
 */
export type RequestBodyPutMultipartDifferentFileNameRes = {
  files: { [k: string]: string };
};

/** @internal */
export const DifferentFileName$inboundSchema: z.ZodType<
  DifferentFileName,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
  fileName: z.string(),
});

/** @internal */
export type DifferentFileName$Outbound = {
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
  fileName: string;
};

/** @internal */
export const DifferentFileName$outboundSchema: z.ZodType<
  DifferentFileName$Outbound,
  z.ZodTypeDef,
  DifferentFileName
> = z.object({
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
  fileName: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DifferentFileName$ {
  /** @deprecated use `DifferentFileName$inboundSchema` instead. */
  export const inboundSchema = DifferentFileName$inboundSchema;
  /** @deprecated use `DifferentFileName$outboundSchema` instead. */
  export const outboundSchema = DifferentFileName$outboundSchema;
  /** @deprecated use `DifferentFileName$Outbound` instead. */
  export type Outbound = DifferentFileName$Outbound;
}

/** @internal */
export const RequestBodyPutMultipartDifferentFileNameRequestBody$inboundSchema:
  z.ZodType<
    RequestBodyPutMultipartDifferentFileNameRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    differentFileName: z.lazy(() => DifferentFileName$inboundSchema).optional(),
  });

/** @internal */
export type RequestBodyPutMultipartDifferentFileNameRequestBody$Outbound = {
  differentFileName?: DifferentFileName$Outbound | Blob | undefined;
};

/** @internal */
export const RequestBodyPutMultipartDifferentFileNameRequestBody$outboundSchema:
  z.ZodType<
    RequestBodyPutMultipartDifferentFileNameRequestBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPutMultipartDifferentFileNameRequestBody
  > = z.object({
    differentFileName: z.lazy(() => DifferentFileName$outboundSchema).or(
      blobLikeSchema,
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutMultipartDifferentFileNameRequestBody$ {
  /** @deprecated use `RequestBodyPutMultipartDifferentFileNameRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RequestBodyPutMultipartDifferentFileNameRequestBody$inboundSchema;
  /** @deprecated use `RequestBodyPutMultipartDifferentFileNameRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RequestBodyPutMultipartDifferentFileNameRequestBody$outboundSchema;
  /** @deprecated use `RequestBodyPutMultipartDifferentFileNameRequestBody$Outbound` instead. */
  export type Outbound =
    RequestBodyPutMultipartDifferentFileNameRequestBody$Outbound;
}

/** @internal */
export const RequestBodyPutMultipartDifferentFileNameRes$inboundSchema:
  z.ZodType<
    RequestBodyPutMultipartDifferentFileNameRes,
    z.ZodTypeDef,
    unknown
  > = z.object({
    files: z.record(z.string()),
  });

/** @internal */
export type RequestBodyPutMultipartDifferentFileNameRes$Outbound = {
  files: { [k: string]: string };
};

/** @internal */
export const RequestBodyPutMultipartDifferentFileNameRes$outboundSchema:
  z.ZodType<
    RequestBodyPutMultipartDifferentFileNameRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPutMultipartDifferentFileNameRes
  > = z.object({
    files: z.record(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutMultipartDifferentFileNameRes$ {
  /** @deprecated use `RequestBodyPutMultipartDifferentFileNameRes$inboundSchema` instead. */
  export const inboundSchema =
    RequestBodyPutMultipartDifferentFileNameRes$inboundSchema;
  /** @deprecated use `RequestBodyPutMultipartDifferentFileNameRes$outboundSchema` instead. */
  export const outboundSchema =
    RequestBodyPutMultipartDifferentFileNameRes$outboundSchema;
  /** @deprecated use `RequestBodyPutMultipartDifferentFileNameRes$Outbound` instead. */
  export type Outbound = RequestBodyPutMultipartDifferentFileNameRes$Outbound;
}
