/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class DifferentFileName extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, content=true" })
    content: Uint8Array;

    @SpeakeasyMetadata({ data: "multipart_form, name=differentFileName" })
    fileName: string;
}

export class RequestBodyPutMultipartDifferentFileNameRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, file=true" })
    differentFileName?: DifferentFileName;
}

/**
 * OK
 */
export class RequestBodyPutMultipartDifferentFileNameRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "files" })
    files: Record<string, string>;
}

export class RequestBodyPutMultipartDifferentFileNameResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: RequestBodyPutMultipartDifferentFileNameRes;
}
