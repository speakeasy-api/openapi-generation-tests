/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { blobLikeSchema } from "../../types/blobs.js";
import * as z from "zod";

export type SampleFile = {
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Buffer;
    fileName: string;
};

export type RequestBodyPutMultipartOptionalRequestBodyRequestBody = {
    sampleField?: string | undefined;
    sampleFile?: SampleFile | Blob | undefined;
};

export type RequestBodyPutMultipartOptionalRequestBodyForm = {
    sampleField?: string | undefined;
};

/**
 * OK
 */
export type RequestBodyPutMultipartOptionalRequestBodyRes = {
    files: { [k: string]: string };
    form?: RequestBodyPutMultipartOptionalRequestBodyForm | undefined;
};

/** @internal */
export const SampleFile$inboundSchema: z.ZodType<SampleFile, z.ZodTypeDef, unknown> = z.object({
    content: z.union([
        z.instanceof(ReadableStream<Uint8Array>),
        z.instanceof(Blob),
        z.instanceof(ArrayBuffer),
        z.instanceof(Buffer),
    ]),
    fileName: z.string(),
});

/** @internal */
export type SampleFile$Outbound = {
    content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Buffer;
    fileName: string;
};

/** @internal */
export const SampleFile$outboundSchema: z.ZodType<SampleFile$Outbound, z.ZodTypeDef, SampleFile> =
    z.object({
        content: z.union([
            z.instanceof(ReadableStream<Uint8Array>),
            z.instanceof(Blob),
            z.instanceof(ArrayBuffer),
            z.instanceof(Buffer),
        ]),
        fileName: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SampleFile$ {
    /** @deprecated use `SampleFile$inboundSchema` instead. */
    export const inboundSchema = SampleFile$inboundSchema;
    /** @deprecated use `SampleFile$outboundSchema` instead. */
    export const outboundSchema = SampleFile$outboundSchema;
    /** @deprecated use `SampleFile$Outbound` instead. */
    export type Outbound = SampleFile$Outbound;
}

/** @internal */
export const RequestBodyPutMultipartOptionalRequestBodyRequestBody$inboundSchema: z.ZodType<
    RequestBodyPutMultipartOptionalRequestBodyRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    sampleField: z.string().optional(),
    sampleFile: z.lazy(() => SampleFile$inboundSchema).optional(),
});

/** @internal */
export type RequestBodyPutMultipartOptionalRequestBodyRequestBody$Outbound = {
    sampleField?: string | undefined;
    sampleFile?: SampleFile$Outbound | Blob | undefined;
};

/** @internal */
export const RequestBodyPutMultipartOptionalRequestBodyRequestBody$outboundSchema: z.ZodType<
    RequestBodyPutMultipartOptionalRequestBodyRequestBody$Outbound,
    z.ZodTypeDef,
    RequestBodyPutMultipartOptionalRequestBodyRequestBody
> = z.object({
    sampleField: z.string().optional(),
    sampleFile: z
        .lazy(() => SampleFile$outboundSchema)
        .or(blobLikeSchema)
        .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutMultipartOptionalRequestBodyRequestBody$ {
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyRequestBody$inboundSchema` instead. */
    export const inboundSchema =
        RequestBodyPutMultipartOptionalRequestBodyRequestBody$inboundSchema;
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyRequestBody$outboundSchema` instead. */
    export const outboundSchema =
        RequestBodyPutMultipartOptionalRequestBodyRequestBody$outboundSchema;
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyRequestBody$Outbound` instead. */
    export type Outbound = RequestBodyPutMultipartOptionalRequestBodyRequestBody$Outbound;
}

/** @internal */
export const RequestBodyPutMultipartOptionalRequestBodyForm$inboundSchema: z.ZodType<
    RequestBodyPutMultipartOptionalRequestBodyForm,
    z.ZodTypeDef,
    unknown
> = z.object({
    sampleField: z.string().optional(),
});

/** @internal */
export type RequestBodyPutMultipartOptionalRequestBodyForm$Outbound = {
    sampleField?: string | undefined;
};

/** @internal */
export const RequestBodyPutMultipartOptionalRequestBodyForm$outboundSchema: z.ZodType<
    RequestBodyPutMultipartOptionalRequestBodyForm$Outbound,
    z.ZodTypeDef,
    RequestBodyPutMultipartOptionalRequestBodyForm
> = z.object({
    sampleField: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutMultipartOptionalRequestBodyForm$ {
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyForm$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutMultipartOptionalRequestBodyForm$inboundSchema;
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyForm$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutMultipartOptionalRequestBodyForm$outboundSchema;
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyForm$Outbound` instead. */
    export type Outbound = RequestBodyPutMultipartOptionalRequestBodyForm$Outbound;
}

/** @internal */
export const RequestBodyPutMultipartOptionalRequestBodyRes$inboundSchema: z.ZodType<
    RequestBodyPutMultipartOptionalRequestBodyRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    files: z.record(z.string()),
    form: z.lazy(() => RequestBodyPutMultipartOptionalRequestBodyForm$inboundSchema).optional(),
});

/** @internal */
export type RequestBodyPutMultipartOptionalRequestBodyRes$Outbound = {
    files: { [k: string]: string };
    form?: RequestBodyPutMultipartOptionalRequestBodyForm$Outbound | undefined;
};

/** @internal */
export const RequestBodyPutMultipartOptionalRequestBodyRes$outboundSchema: z.ZodType<
    RequestBodyPutMultipartOptionalRequestBodyRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPutMultipartOptionalRequestBodyRes
> = z.object({
    files: z.record(z.string()),
    form: z.lazy(() => RequestBodyPutMultipartOptionalRequestBodyForm$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutMultipartOptionalRequestBodyRes$ {
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyRes$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutMultipartOptionalRequestBodyRes$inboundSchema;
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyRes$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutMultipartOptionalRequestBodyRes$outboundSchema;
    /** @deprecated use `RequestBodyPutMultipartOptionalRequestBodyRes$Outbound` instead. */
    export type Outbound = RequestBodyPutMultipartOptionalRequestBodyRes$Outbound;
}
