/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SampleFile extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, content=true" })
    content: Uint8Array;

    @SpeakeasyMetadata({ data: "multipart_form, name=sampleFile" })
    fileName: string;
}

export class RequestBodyPutMultipartOptionalRequestBodyRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, name=sampleField" })
    sampleField?: string;

    @SpeakeasyMetadata({ data: "multipart_form, file=true" })
    sampleFile?: SampleFile;
}

export class RequestBodyPutMultipartOptionalRequestBodyForm extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "sampleField" })
    sampleField?: string;
}

/**
 * OK
 */
export class RequestBodyPutMultipartOptionalRequestBodyRes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "files" })
    files: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "form" })
    @Type(() => RequestBodyPutMultipartOptionalRequestBodyForm)
    form?: RequestBodyPutMultipartOptionalRequestBodyForm;
}

export class RequestBodyPutMultipartOptionalRequestBodyResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    res?: RequestBodyPutMultipartOptionalRequestBodyRes;
}
