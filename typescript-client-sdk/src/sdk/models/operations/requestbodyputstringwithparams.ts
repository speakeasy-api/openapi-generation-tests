/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type RequestBodyPutStringWithParamsRequest = {
    requestBody: string;
    queryStringParam: string;
};

export type RequestBodyPutStringWithParamsArgs = {
    queryStringParam: string;
};

/**
 * OK
 */
export type RequestBodyPutStringWithParamsRes = {
    args: RequestBodyPutStringWithParamsArgs;
    data: string;
};

/** @internal */
export const RequestBodyPutStringWithParamsRequest$inboundSchema: z.ZodType<
    RequestBodyPutStringWithParamsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.string(),
        queryStringParam: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type RequestBodyPutStringWithParamsRequest$Outbound = {
    RequestBody: string;
    queryStringParam: string;
};

/** @internal */
export const RequestBodyPutStringWithParamsRequest$outboundSchema: z.ZodType<
    RequestBodyPutStringWithParamsRequest$Outbound,
    z.ZodTypeDef,
    RequestBodyPutStringWithParamsRequest
> = z
    .object({
        requestBody: z.string(),
        queryStringParam: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutStringWithParamsRequest$ {
    /** @deprecated use `RequestBodyPutStringWithParamsRequest$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutStringWithParamsRequest$inboundSchema;
    /** @deprecated use `RequestBodyPutStringWithParamsRequest$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutStringWithParamsRequest$outboundSchema;
    /** @deprecated use `RequestBodyPutStringWithParamsRequest$Outbound` instead. */
    export type Outbound = RequestBodyPutStringWithParamsRequest$Outbound;
}

/** @internal */
export const RequestBodyPutStringWithParamsArgs$inboundSchema: z.ZodType<
    RequestBodyPutStringWithParamsArgs,
    z.ZodTypeDef,
    unknown
> = z.object({
    queryStringParam: z.string(),
});

/** @internal */
export type RequestBodyPutStringWithParamsArgs$Outbound = {
    queryStringParam: string;
};

/** @internal */
export const RequestBodyPutStringWithParamsArgs$outboundSchema: z.ZodType<
    RequestBodyPutStringWithParamsArgs$Outbound,
    z.ZodTypeDef,
    RequestBodyPutStringWithParamsArgs
> = z.object({
    queryStringParam: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutStringWithParamsArgs$ {
    /** @deprecated use `RequestBodyPutStringWithParamsArgs$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutStringWithParamsArgs$inboundSchema;
    /** @deprecated use `RequestBodyPutStringWithParamsArgs$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutStringWithParamsArgs$outboundSchema;
    /** @deprecated use `RequestBodyPutStringWithParamsArgs$Outbound` instead. */
    export type Outbound = RequestBodyPutStringWithParamsArgs$Outbound;
}

/** @internal */
export const RequestBodyPutStringWithParamsRes$inboundSchema: z.ZodType<
    RequestBodyPutStringWithParamsRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    args: z.lazy(() => RequestBodyPutStringWithParamsArgs$inboundSchema),
    data: z.string(),
});

/** @internal */
export type RequestBodyPutStringWithParamsRes$Outbound = {
    args: RequestBodyPutStringWithParamsArgs$Outbound;
    data: string;
};

/** @internal */
export const RequestBodyPutStringWithParamsRes$outboundSchema: z.ZodType<
    RequestBodyPutStringWithParamsRes$Outbound,
    z.ZodTypeDef,
    RequestBodyPutStringWithParamsRes
> = z.object({
    args: z.lazy(() => RequestBodyPutStringWithParamsArgs$outboundSchema),
    data: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyPutStringWithParamsRes$ {
    /** @deprecated use `RequestBodyPutStringWithParamsRes$inboundSchema` instead. */
    export const inboundSchema = RequestBodyPutStringWithParamsRes$inboundSchema;
    /** @deprecated use `RequestBodyPutStringWithParamsRes$outboundSchema` instead. */
    export const outboundSchema = RequestBodyPutStringWithParamsRes$outboundSchema;
    /** @deprecated use `RequestBodyPutStringWithParamsRes$Outbound` instead. */
    export type Outbound = RequestBodyPutStringWithParamsRes$Outbound;
}
