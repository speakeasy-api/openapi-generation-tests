/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type ResponseBodyAdditionalPropertiesDatePostResponseBody = {
  json: shared.ObjWithDateAdditionalProperties;
};

/** @internal */
export const ResponseBodyAdditionalPropertiesDatePostResponseBody$inboundSchema:
  z.ZodType<
    ResponseBodyAdditionalPropertiesDatePostResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    json: shared.ObjWithDateAdditionalProperties$inboundSchema,
  });

/** @internal */
export type ResponseBodyAdditionalPropertiesDatePostResponseBody$Outbound = {
  json: shared.ObjWithDateAdditionalProperties$Outbound;
};

/** @internal */
export const ResponseBodyAdditionalPropertiesDatePostResponseBody$outboundSchema:
  z.ZodType<
    ResponseBodyAdditionalPropertiesDatePostResponseBody$Outbound,
    z.ZodTypeDef,
    ResponseBodyAdditionalPropertiesDatePostResponseBody
  > = z.object({
    json: shared.ObjWithDateAdditionalProperties$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyAdditionalPropertiesDatePostResponseBody$ {
  /** @deprecated use `ResponseBodyAdditionalPropertiesDatePostResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ResponseBodyAdditionalPropertiesDatePostResponseBody$inboundSchema;
  /** @deprecated use `ResponseBodyAdditionalPropertiesDatePostResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ResponseBodyAdditionalPropertiesDatePostResponseBody$outboundSchema;
  /** @deprecated use `ResponseBodyAdditionalPropertiesDatePostResponseBody$Outbound` instead. */
  export type Outbound =
    ResponseBodyAdditionalPropertiesDatePostResponseBody$Outbound;
}

export function responseBodyAdditionalPropertiesDatePostResponseBodyToJSON(
  responseBodyAdditionalPropertiesDatePostResponseBody:
    ResponseBodyAdditionalPropertiesDatePostResponseBody,
): string {
  return JSON.stringify(
    ResponseBodyAdditionalPropertiesDatePostResponseBody$outboundSchema.parse(
      responseBodyAdditionalPropertiesDatePostResponseBody,
    ),
  );
}

export function responseBodyAdditionalPropertiesDatePostResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ResponseBodyAdditionalPropertiesDatePostResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ResponseBodyAdditionalPropertiesDatePostResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ResponseBodyAdditionalPropertiesDatePostResponseBody' from JSON`,
  );
}
