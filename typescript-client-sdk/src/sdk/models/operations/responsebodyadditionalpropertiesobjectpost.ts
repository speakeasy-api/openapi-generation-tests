/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class ResponseBodyAdditionalPropertiesObjectPost200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: shared.SimpleObject })
    @Expose({ name: "json" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, shared.SimpleObject> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], shared.SimpleObject);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    json: Record<string, shared.SimpleObject>;
}

export class ResponseBodyAdditionalPropertiesObjectPostResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    responseBodyAdditionalPropertiesObjectPost200ApplicationJSONObject?: ResponseBodyAdditionalPropertiesObjectPost200ApplicationJSON;
}
