/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const RetriesAfterServerList = ["http://localhost:35456"] as const;

export type RetriesAfterRequest = {
    numRetries?: number | undefined;
    requestId: string;
    retryAfterVal?: number | undefined;
};

/**
 * OK
 */
export type RetriesAfterRetries = {
    retries: number;
};

/** @internal */
export const RetriesAfterRequest$inboundSchema: z.ZodType<
    RetriesAfterRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "num-retries": z.number().int().optional(),
        "request-id": z.string(),
        "retry-after-val": z.number().int().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "num-retries": "numRetries",
            "request-id": "requestId",
            "retry-after-val": "retryAfterVal",
        });
    });

/** @internal */
export type RetriesAfterRequest$Outbound = {
    "num-retries"?: number | undefined;
    "request-id": string;
    "retry-after-val"?: number | undefined;
};

/** @internal */
export const RetriesAfterRequest$outboundSchema: z.ZodType<
    RetriesAfterRequest$Outbound,
    z.ZodTypeDef,
    RetriesAfterRequest
> = z
    .object({
        numRetries: z.number().int().optional(),
        requestId: z.string(),
        retryAfterVal: z.number().int().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            numRetries: "num-retries",
            requestId: "request-id",
            retryAfterVal: "retry-after-val",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetriesAfterRequest$ {
    /** @deprecated use `RetriesAfterRequest$inboundSchema` instead. */
    export const inboundSchema = RetriesAfterRequest$inboundSchema;
    /** @deprecated use `RetriesAfterRequest$outboundSchema` instead. */
    export const outboundSchema = RetriesAfterRequest$outboundSchema;
    /** @deprecated use `RetriesAfterRequest$Outbound` instead. */
    export type Outbound = RetriesAfterRequest$Outbound;
}

/** @internal */
export const RetriesAfterRetries$inboundSchema: z.ZodType<
    RetriesAfterRetries,
    z.ZodTypeDef,
    unknown
> = z.object({
    retries: z.number().int(),
});

/** @internal */
export type RetriesAfterRetries$Outbound = {
    retries: number;
};

/** @internal */
export const RetriesAfterRetries$outboundSchema: z.ZodType<
    RetriesAfterRetries$Outbound,
    z.ZodTypeDef,
    RetriesAfterRetries
> = z.object({
    retries: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetriesAfterRetries$ {
    /** @deprecated use `RetriesAfterRetries$inboundSchema` instead. */
    export const inboundSchema = RetriesAfterRetries$inboundSchema;
    /** @deprecated use `RetriesAfterRetries$outboundSchema` instead. */
    export const outboundSchema = RetriesAfterRetries$outboundSchema;
    /** @deprecated use `RetriesAfterRetries$Outbound` instead. */
    export type Outbound = RetriesAfterRetries$Outbound;
}
