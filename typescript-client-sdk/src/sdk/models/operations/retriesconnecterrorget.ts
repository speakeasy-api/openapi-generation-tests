/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RetriesConnectErrorGetServerList = [
  "http://localhost:33333",
] as const;

/**
 * OK
 */
export type RetriesConnectErrorGetRetries = {
  retries: number;
};

/** @internal */
export const RetriesConnectErrorGetRetries$inboundSchema: z.ZodType<
  RetriesConnectErrorGetRetries,
  z.ZodTypeDef,
  unknown
> = z.object({
  retries: z.number().int(),
});

/** @internal */
export type RetriesConnectErrorGetRetries$Outbound = {
  retries: number;
};

/** @internal */
export const RetriesConnectErrorGetRetries$outboundSchema: z.ZodType<
  RetriesConnectErrorGetRetries$Outbound,
  z.ZodTypeDef,
  RetriesConnectErrorGetRetries
> = z.object({
  retries: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetriesConnectErrorGetRetries$ {
  /** @deprecated use `RetriesConnectErrorGetRetries$inboundSchema` instead. */
  export const inboundSchema = RetriesConnectErrorGetRetries$inboundSchema;
  /** @deprecated use `RetriesConnectErrorGetRetries$outboundSchema` instead. */
  export const outboundSchema = RetriesConnectErrorGetRetries$outboundSchema;
  /** @deprecated use `RetriesConnectErrorGetRetries$Outbound` instead. */
  export type Outbound = RetriesConnectErrorGetRetries$Outbound;
}

export function retriesConnectErrorGetRetriesToJSON(
  retriesConnectErrorGetRetries: RetriesConnectErrorGetRetries,
): string {
  return JSON.stringify(
    RetriesConnectErrorGetRetries$outboundSchema.parse(
      retriesConnectErrorGetRetries,
    ),
  );
}

export function retriesConnectErrorGetRetriesFromJSON(
  jsonString: string,
): SafeParseResult<RetriesConnectErrorGetRetries, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RetriesConnectErrorGetRetries$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RetriesConnectErrorGetRetries' from JSON`,
  );
}
