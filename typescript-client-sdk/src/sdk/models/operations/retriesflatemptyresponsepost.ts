/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export const RetriesFlatEmptyResponsePostServerList = [
  "http://localhost:35456",
] as const;

export type RetriesFlatEmptyResponsePostRequestBody = {
  fieldOne: string;
};

export type RetriesFlatEmptyResponsePostRequest = {
  requestBody?: RetriesFlatEmptyResponsePostRequestBody | undefined;
  numRetries?: number | undefined;
  requestId: string;
};

/** @internal */
export const RetriesFlatEmptyResponsePostRequestBody$inboundSchema: z.ZodType<
  RetriesFlatEmptyResponsePostRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  field_one: z.string(),
}).transform((v) => {
  return remap$(v, {
    "field_one": "fieldOne",
  });
});

/** @internal */
export type RetriesFlatEmptyResponsePostRequestBody$Outbound = {
  field_one: string;
};

/** @internal */
export const RetriesFlatEmptyResponsePostRequestBody$outboundSchema: z.ZodType<
  RetriesFlatEmptyResponsePostRequestBody$Outbound,
  z.ZodTypeDef,
  RetriesFlatEmptyResponsePostRequestBody
> = z.object({
  fieldOne: z.string(),
}).transform((v) => {
  return remap$(v, {
    fieldOne: "field_one",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetriesFlatEmptyResponsePostRequestBody$ {
  /** @deprecated use `RetriesFlatEmptyResponsePostRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    RetriesFlatEmptyResponsePostRequestBody$inboundSchema;
  /** @deprecated use `RetriesFlatEmptyResponsePostRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    RetriesFlatEmptyResponsePostRequestBody$outboundSchema;
  /** @deprecated use `RetriesFlatEmptyResponsePostRequestBody$Outbound` instead. */
  export type Outbound = RetriesFlatEmptyResponsePostRequestBody$Outbound;
}

/** @internal */
export const RetriesFlatEmptyResponsePostRequest$inboundSchema: z.ZodType<
  RetriesFlatEmptyResponsePostRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() =>
    RetriesFlatEmptyResponsePostRequestBody$inboundSchema
  ).optional(),
  "num-retries": z.number().int().optional(),
  "request-id": z.string(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
    "num-retries": "numRetries",
    "request-id": "requestId",
  });
});

/** @internal */
export type RetriesFlatEmptyResponsePostRequest$Outbound = {
  RequestBody?: RetriesFlatEmptyResponsePostRequestBody$Outbound | undefined;
  "num-retries"?: number | undefined;
  "request-id": string;
};

/** @internal */
export const RetriesFlatEmptyResponsePostRequest$outboundSchema: z.ZodType<
  RetriesFlatEmptyResponsePostRequest$Outbound,
  z.ZodTypeDef,
  RetriesFlatEmptyResponsePostRequest
> = z.object({
  requestBody: z.lazy(() =>
    RetriesFlatEmptyResponsePostRequestBody$outboundSchema
  ).optional(),
  numRetries: z.number().int().optional(),
  requestId: z.string(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
    numRetries: "num-retries",
    requestId: "request-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetriesFlatEmptyResponsePostRequest$ {
  /** @deprecated use `RetriesFlatEmptyResponsePostRequest$inboundSchema` instead. */
  export const inboundSchema =
    RetriesFlatEmptyResponsePostRequest$inboundSchema;
  /** @deprecated use `RetriesFlatEmptyResponsePostRequest$outboundSchema` instead. */
  export const outboundSchema =
    RetriesFlatEmptyResponsePostRequest$outboundSchema;
  /** @deprecated use `RetriesFlatEmptyResponsePostRequest$Outbound` instead. */
  export type Outbound = RetriesFlatEmptyResponsePostRequest$Outbound;
}
