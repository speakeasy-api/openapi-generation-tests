/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export const RetriesGetServerList = ["http://localhost:35456"] as const;

export type RetriesGetRequest = {
    numRetries?: number | undefined;
    requestId: string;
};

/**
 * OK
 */
export type RetriesGetRetries = {
    retries: number;
};

/** @internal */
export namespace RetriesGetRequest$ {
    export const inboundSchema: z.ZodType<RetriesGetRequest, z.ZodTypeDef, unknown> = z
        .object({
            "num-retries": z.number().int().optional(),
            "request-id": z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                "num-retries": "numRetries",
                "request-id": "requestId",
            });
        });

    export type Outbound = {
        "num-retries"?: number | undefined;
        "request-id": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RetriesGetRequest> = z
        .object({
            numRetries: z.number().int().optional(),
            requestId: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                numRetries: "num-retries",
                requestId: "request-id",
            });
        });
}

/** @internal */
export namespace RetriesGetRetries$ {
    export const inboundSchema: z.ZodType<RetriesGetRetries, z.ZodTypeDef, unknown> = z.object({
        retries: z.number().int(),
    });

    export type Outbound = {
        retries: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RetriesGetRetries> = z.object({
        retries: z.number().int(),
    });
}
