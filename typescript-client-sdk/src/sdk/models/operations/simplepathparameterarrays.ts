/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SimplePathParameterArraysRequest = {
    arrParam: Array<string>;
};

/**
 * OK
 */
export type SimplePathParameterArraysRes = {
    url: string;
};

/** @internal */
export namespace SimplePathParameterArraysRequest$ {
    export const inboundSchema: z.ZodType<SimplePathParameterArraysRequest, z.ZodTypeDef, unknown> =
        z.object({
            arrParam: z.array(z.string()),
        });

    export type Outbound = {
        arrParam: Array<string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SimplePathParameterArraysRequest
    > = z.object({
        arrParam: z.array(z.string()),
    });
}

/** @internal */
export namespace SimplePathParameterArraysRes$ {
    export const inboundSchema: z.ZodType<SimplePathParameterArraysRes, z.ZodTypeDef, unknown> =
        z.object({
            url: z.string(),
        });

    export type Outbound = {
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SimplePathParameterArraysRes> =
        z.object({
            url: z.string(),
        });
}
