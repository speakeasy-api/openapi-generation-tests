/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SimplePathParameterMapsRequest = {
    mapParam: { [k: string]: string };
    mapParamExploded: { [k: string]: number };
};

/**
 * OK
 */
export type SimplePathParameterMapsRes = {
    url: string;
};

/** @internal */
export namespace SimplePathParameterMapsRequest$ {
    export const inboundSchema: z.ZodType<SimplePathParameterMapsRequest, z.ZodTypeDef, unknown> =
        z.object({
            mapParam: z.record(z.string()),
            mapParamExploded: z.record(z.number().int()),
        });

    export type Outbound = {
        mapParam: { [k: string]: string };
        mapParamExploded: { [k: string]: number };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SimplePathParameterMapsRequest> =
        z.object({
            mapParam: z.record(z.string()),
            mapParamExploded: z.record(z.number().int()),
        });
}

/** @internal */
export namespace SimplePathParameterMapsRes$ {
    export const inboundSchema: z.ZodType<SimplePathParameterMapsRes, z.ZodTypeDef, unknown> =
        z.object({
            url: z.string(),
        });

    export type Outbound = {
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SimplePathParameterMapsRes> =
        z.object({
            url: z.string(),
        });
}
