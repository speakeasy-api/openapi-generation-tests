/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type SimplePathParameterObjectsRequest = {
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    objParam: shared.SimpleObject;
    /**
     * A simple object that uses all our supported primitive types and enums and has optional properties.
     */
    objParamExploded: shared.SimpleObject;
};

/**
 * OK
 */
export type SimplePathParameterObjectsRes = {
    url: string;
};

/** @internal */
export namespace SimplePathParameterObjectsRequest$ {
    export const inboundSchema: z.ZodType<
        SimplePathParameterObjectsRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        objParam: shared.SimpleObject$.inboundSchema,
        objParamExploded: shared.SimpleObject$.inboundSchema,
    });

    export type Outbound = {
        objParam: shared.SimpleObject$.Outbound;
        objParamExploded: shared.SimpleObject$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SimplePathParameterObjectsRequest
    > = z.object({
        objParam: shared.SimpleObject$.outboundSchema,
        objParamExploded: shared.SimpleObject$.outboundSchema,
    });
}

/** @internal */
export namespace SimplePathParameterObjectsRes$ {
    export const inboundSchema: z.ZodType<SimplePathParameterObjectsRes, z.ZodTypeDef, unknown> =
        z.object({
            url: z.string(),
        });

    export type Outbound = {
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SimplePathParameterObjectsRes> =
        z.object({
            url: z.string(),
        });
}
