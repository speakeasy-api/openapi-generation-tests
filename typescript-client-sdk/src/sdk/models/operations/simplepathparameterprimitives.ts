/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SimplePathParameterPrimitivesRequest = {
    boolParam: boolean;
    intParam: number;
    numParam: number;
    strParam: string;
};

/**
 * OK
 */
export type SimplePathParameterPrimitivesRes = {
    url: string;
};

/** @internal */
export namespace SimplePathParameterPrimitivesRequest$ {
    export const inboundSchema: z.ZodType<
        SimplePathParameterPrimitivesRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        boolParam: z.boolean(),
        intParam: z.number().int(),
        numParam: z.number(),
        strParam: z.string(),
    });

    export type Outbound = {
        boolParam: boolean;
        intParam: number;
        numParam: number;
        strParam: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SimplePathParameterPrimitivesRequest
    > = z.object({
        boolParam: z.boolean(),
        intParam: z.number().int(),
        numParam: z.number(),
        strParam: z.string(),
    });
}

/** @internal */
export namespace SimplePathParameterPrimitivesRes$ {
    export const inboundSchema: z.ZodType<SimplePathParameterPrimitivesRes, z.ZodTypeDef, unknown> =
        z.object({
            url: z.string(),
        });

    export type Outbound = {
        url: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SimplePathParameterPrimitivesRes
    > = z.object({
        url: z.string(),
    });
}
