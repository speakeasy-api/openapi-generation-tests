/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const StatusGetXSpeakeasyErrorsServerList = [
  "http://localhost:35456",
] as const;

export type StatusGetXSpeakeasyErrorsRequest = {
  statusCode: number;
};

/** @internal */
export const StatusGetXSpeakeasyErrorsRequest$inboundSchema: z.ZodType<
  StatusGetXSpeakeasyErrorsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  statusCode: z.number().int(),
});

/** @internal */
export type StatusGetXSpeakeasyErrorsRequest$Outbound = {
  statusCode: number;
};

/** @internal */
export const StatusGetXSpeakeasyErrorsRequest$outboundSchema: z.ZodType<
  StatusGetXSpeakeasyErrorsRequest$Outbound,
  z.ZodTypeDef,
  StatusGetXSpeakeasyErrorsRequest
> = z.object({
  statusCode: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StatusGetXSpeakeasyErrorsRequest$ {
  /** @deprecated use `StatusGetXSpeakeasyErrorsRequest$inboundSchema` instead. */
  export const inboundSchema = StatusGetXSpeakeasyErrorsRequest$inboundSchema;
  /** @deprecated use `StatusGetXSpeakeasyErrorsRequest$outboundSchema` instead. */
  export const outboundSchema = StatusGetXSpeakeasyErrorsRequest$outboundSchema;
  /** @deprecated use `StatusGetXSpeakeasyErrorsRequest$Outbound` instead. */
  export type Outbound = StatusGetXSpeakeasyErrorsRequest$Outbound;
}

export function statusGetXSpeakeasyErrorsRequestToJSON(
  statusGetXSpeakeasyErrorsRequest: StatusGetXSpeakeasyErrorsRequest,
): string {
  return JSON.stringify(
    StatusGetXSpeakeasyErrorsRequest$outboundSchema.parse(
      statusGetXSpeakeasyErrorsRequest,
    ),
  );
}

export function statusGetXSpeakeasyErrorsRequestFromJSON(
  jsonString: string,
): SafeParseResult<StatusGetXSpeakeasyErrorsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StatusGetXSpeakeasyErrorsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StatusGetXSpeakeasyErrorsRequest' from JSON`,
  );
}
