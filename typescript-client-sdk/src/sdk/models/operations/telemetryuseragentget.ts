/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * OK
 */
export type TelemetryUserAgentGetRes = {
    headers: { [k: string]: string };
};

/** @internal */
export const TelemetryUserAgentGetRes$inboundSchema: z.ZodType<
    TelemetryUserAgentGetRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    headers: z.record(z.string()),
});

/** @internal */
export type TelemetryUserAgentGetRes$Outbound = {
    headers: { [k: string]: string };
};

/** @internal */
export const TelemetryUserAgentGetRes$outboundSchema: z.ZodType<
    TelemetryUserAgentGetRes$Outbound,
    z.ZodTypeDef,
    TelemetryUserAgentGetRes
> = z.object({
    headers: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TelemetryUserAgentGetRes$ {
    /** @deprecated use `TelemetryUserAgentGetRes$inboundSchema` instead. */
    export const inboundSchema = TelemetryUserAgentGetRes$inboundSchema;
    /** @deprecated use `TelemetryUserAgentGetRes$outboundSchema` instead. */
    export const outboundSchema = TelemetryUserAgentGetRes$outboundSchema;
    /** @deprecated use `TelemetryUserAgentGetRes$Outbound` instead. */
    export type Outbound = TelemetryUserAgentGetRes$Outbound;
}
