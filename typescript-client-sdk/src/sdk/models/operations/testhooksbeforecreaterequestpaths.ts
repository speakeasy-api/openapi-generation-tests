/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TestHooksBeforeCreateRequestPathsRequest = {
  namespace: string;
};

export type TestHooksBeforeCreateRequestPathsHeaders = {
  oldPathname?: string | undefined;
};

/**
 * OK
 */
export type TestHooksBeforeCreateRequestPathsRes = {
  headers: TestHooksBeforeCreateRequestPathsHeaders;
  url: string;
};

/** @internal */
export const TestHooksBeforeCreateRequestPathsRequest$inboundSchema: z.ZodType<
  TestHooksBeforeCreateRequestPathsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  namespace: z.string(),
});

/** @internal */
export type TestHooksBeforeCreateRequestPathsRequest$Outbound = {
  namespace: string;
};

/** @internal */
export const TestHooksBeforeCreateRequestPathsRequest$outboundSchema: z.ZodType<
  TestHooksBeforeCreateRequestPathsRequest$Outbound,
  z.ZodTypeDef,
  TestHooksBeforeCreateRequestPathsRequest
> = z.object({
  namespace: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TestHooksBeforeCreateRequestPathsRequest$ {
  /** @deprecated use `TestHooksBeforeCreateRequestPathsRequest$inboundSchema` instead. */
  export const inboundSchema =
    TestHooksBeforeCreateRequestPathsRequest$inboundSchema;
  /** @deprecated use `TestHooksBeforeCreateRequestPathsRequest$outboundSchema` instead. */
  export const outboundSchema =
    TestHooksBeforeCreateRequestPathsRequest$outboundSchema;
  /** @deprecated use `TestHooksBeforeCreateRequestPathsRequest$Outbound` instead. */
  export type Outbound = TestHooksBeforeCreateRequestPathsRequest$Outbound;
}

export function testHooksBeforeCreateRequestPathsRequestToJSON(
  testHooksBeforeCreateRequestPathsRequest:
    TestHooksBeforeCreateRequestPathsRequest,
): string {
  return JSON.stringify(
    TestHooksBeforeCreateRequestPathsRequest$outboundSchema.parse(
      testHooksBeforeCreateRequestPathsRequest,
    ),
  );
}

export function testHooksBeforeCreateRequestPathsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  TestHooksBeforeCreateRequestPathsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TestHooksBeforeCreateRequestPathsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'TestHooksBeforeCreateRequestPathsRequest' from JSON`,
  );
}

/** @internal */
export const TestHooksBeforeCreateRequestPathsHeaders$inboundSchema: z.ZodType<
  TestHooksBeforeCreateRequestPathsHeaders,
  z.ZodTypeDef,
  unknown
> = z.object({
  "Old-Pathname": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "Old-Pathname": "oldPathname",
  });
});

/** @internal */
export type TestHooksBeforeCreateRequestPathsHeaders$Outbound = {
  "Old-Pathname"?: string | undefined;
};

/** @internal */
export const TestHooksBeforeCreateRequestPathsHeaders$outboundSchema: z.ZodType<
  TestHooksBeforeCreateRequestPathsHeaders$Outbound,
  z.ZodTypeDef,
  TestHooksBeforeCreateRequestPathsHeaders
> = z.object({
  oldPathname: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    oldPathname: "Old-Pathname",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TestHooksBeforeCreateRequestPathsHeaders$ {
  /** @deprecated use `TestHooksBeforeCreateRequestPathsHeaders$inboundSchema` instead. */
  export const inboundSchema =
    TestHooksBeforeCreateRequestPathsHeaders$inboundSchema;
  /** @deprecated use `TestHooksBeforeCreateRequestPathsHeaders$outboundSchema` instead. */
  export const outboundSchema =
    TestHooksBeforeCreateRequestPathsHeaders$outboundSchema;
  /** @deprecated use `TestHooksBeforeCreateRequestPathsHeaders$Outbound` instead. */
  export type Outbound = TestHooksBeforeCreateRequestPathsHeaders$Outbound;
}

export function testHooksBeforeCreateRequestPathsHeadersToJSON(
  testHooksBeforeCreateRequestPathsHeaders:
    TestHooksBeforeCreateRequestPathsHeaders,
): string {
  return JSON.stringify(
    TestHooksBeforeCreateRequestPathsHeaders$outboundSchema.parse(
      testHooksBeforeCreateRequestPathsHeaders,
    ),
  );
}

export function testHooksBeforeCreateRequestPathsHeadersFromJSON(
  jsonString: string,
): SafeParseResult<
  TestHooksBeforeCreateRequestPathsHeaders,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TestHooksBeforeCreateRequestPathsHeaders$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'TestHooksBeforeCreateRequestPathsHeaders' from JSON`,
  );
}

/** @internal */
export const TestHooksBeforeCreateRequestPathsRes$inboundSchema: z.ZodType<
  TestHooksBeforeCreateRequestPathsRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  headers: z.lazy(() => TestHooksBeforeCreateRequestPathsHeaders$inboundSchema),
  url: z.string(),
});

/** @internal */
export type TestHooksBeforeCreateRequestPathsRes$Outbound = {
  headers: TestHooksBeforeCreateRequestPathsHeaders$Outbound;
  url: string;
};

/** @internal */
export const TestHooksBeforeCreateRequestPathsRes$outboundSchema: z.ZodType<
  TestHooksBeforeCreateRequestPathsRes$Outbound,
  z.ZodTypeDef,
  TestHooksBeforeCreateRequestPathsRes
> = z.object({
  headers: z.lazy(() =>
    TestHooksBeforeCreateRequestPathsHeaders$outboundSchema
  ),
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TestHooksBeforeCreateRequestPathsRes$ {
  /** @deprecated use `TestHooksBeforeCreateRequestPathsRes$inboundSchema` instead. */
  export const inboundSchema =
    TestHooksBeforeCreateRequestPathsRes$inboundSchema;
  /** @deprecated use `TestHooksBeforeCreateRequestPathsRes$outboundSchema` instead. */
  export const outboundSchema =
    TestHooksBeforeCreateRequestPathsRes$outboundSchema;
  /** @deprecated use `TestHooksBeforeCreateRequestPathsRes$Outbound` instead. */
  export type Outbound = TestHooksBeforeCreateRequestPathsRes$Outbound;
}

export function testHooksBeforeCreateRequestPathsResToJSON(
  testHooksBeforeCreateRequestPathsRes: TestHooksBeforeCreateRequestPathsRes,
): string {
  return JSON.stringify(
    TestHooksBeforeCreateRequestPathsRes$outboundSchema.parse(
      testHooksBeforeCreateRequestPathsRes,
    ),
  );
}

export function testHooksBeforeCreateRequestPathsResFromJSON(
  jsonString: string,
): SafeParseResult<TestHooksBeforeCreateRequestPathsRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      TestHooksBeforeCreateRequestPathsRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TestHooksBeforeCreateRequestPathsRes' from JSON`,
  );
}
