/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UnionDateTimeBigIntRequestBody = Date | bigint;

export type UnionDateTimeBigIntJson = Date | bigint;

/**
 * OK
 */
export type UnionDateTimeBigIntRes = {
    json: Date | bigint;
};

/** @internal */
export namespace UnionDateTimeBigIntRequestBody$ {
    export const inboundSchema: z.ZodType<UnionDateTimeBigIntRequestBody, z.ZodTypeDef, unknown> =
        z.union([
            z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            z.number().transform((v) => BigInt(v)),
        ]);

    export type Outbound = string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnionDateTimeBigIntRequestBody> =
        z.union([
            z.date().transform((v) => v.toISOString()),
            z.bigint().transform((v) => Number(v)),
        ]);
}

/** @internal */
export namespace UnionDateTimeBigIntJson$ {
    export const inboundSchema: z.ZodType<UnionDateTimeBigIntJson, z.ZodTypeDef, unknown> = z.union(
        [
            z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v)),
            z.number().transform((v) => BigInt(v)),
        ]
    );

    export type Outbound = string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnionDateTimeBigIntJson> =
        z.union([
            z.date().transform((v) => v.toISOString()),
            z.bigint().transform((v) => Number(v)),
        ]);
}

/** @internal */
export namespace UnionDateTimeBigIntRes$ {
    export const inboundSchema: z.ZodType<UnionDateTimeBigIntRes, z.ZodTypeDef, unknown> = z.object(
        {
            json: z.union([
                z
                    .string()
                    .datetime({ offset: true })
                    .transform((v) => new Date(v)),
                z.number().transform((v) => BigInt(v)),
            ]),
        }
    );

    export type Outbound = {
        json: string | number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnionDateTimeBigIntRes> =
        z.object({
            json: z.union([
                z.date().transform((v) => v.toISOString()),
                z.bigint().transform((v) => Number(v)),
            ]),
        });
}
