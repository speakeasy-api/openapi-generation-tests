/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UnionDateTimeBigIntRequestBody = Date | bigint;

export type UnionDateTimeBigIntJson = Date | bigint;

/**
 * OK
 */
export type UnionDateTimeBigIntRes = {
    json: Date | bigint;
};

/** @internal */
export const UnionDateTimeBigIntRequestBody$inboundSchema: z.ZodType<
    UnionDateTimeBigIntRequestBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    z.number().transform((v) => BigInt(v)),
]);

/** @internal */
export type UnionDateTimeBigIntRequestBody$Outbound = string | number;

/** @internal */
export const UnionDateTimeBigIntRequestBody$outboundSchema: z.ZodType<
    UnionDateTimeBigIntRequestBody$Outbound,
    z.ZodTypeDef,
    UnionDateTimeBigIntRequestBody
> = z.union([z.date().transform((v) => v.toISOString()), z.bigint().transform((v) => Number(v))]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionDateTimeBigIntRequestBody$ {
    /** @deprecated use `UnionDateTimeBigIntRequestBody$inboundSchema` instead. */
    export const inboundSchema = UnionDateTimeBigIntRequestBody$inboundSchema;
    /** @deprecated use `UnionDateTimeBigIntRequestBody$outboundSchema` instead. */
    export const outboundSchema = UnionDateTimeBigIntRequestBody$outboundSchema;
    /** @deprecated use `UnionDateTimeBigIntRequestBody$Outbound` instead. */
    export type Outbound = UnionDateTimeBigIntRequestBody$Outbound;
}

/** @internal */
export const UnionDateTimeBigIntJson$inboundSchema: z.ZodType<
    UnionDateTimeBigIntJson,
    z.ZodTypeDef,
    unknown
> = z.union([
    z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    z.number().transform((v) => BigInt(v)),
]);

/** @internal */
export type UnionDateTimeBigIntJson$Outbound = string | number;

/** @internal */
export const UnionDateTimeBigIntJson$outboundSchema: z.ZodType<
    UnionDateTimeBigIntJson$Outbound,
    z.ZodTypeDef,
    UnionDateTimeBigIntJson
> = z.union([z.date().transform((v) => v.toISOString()), z.bigint().transform((v) => Number(v))]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionDateTimeBigIntJson$ {
    /** @deprecated use `UnionDateTimeBigIntJson$inboundSchema` instead. */
    export const inboundSchema = UnionDateTimeBigIntJson$inboundSchema;
    /** @deprecated use `UnionDateTimeBigIntJson$outboundSchema` instead. */
    export const outboundSchema = UnionDateTimeBigIntJson$outboundSchema;
    /** @deprecated use `UnionDateTimeBigIntJson$Outbound` instead. */
    export type Outbound = UnionDateTimeBigIntJson$Outbound;
}

/** @internal */
export const UnionDateTimeBigIntRes$inboundSchema: z.ZodType<
    UnionDateTimeBigIntRes,
    z.ZodTypeDef,
    unknown
> = z.object({
    json: z.union([
        z
            .string()
            .datetime({ offset: true })
            .transform((v) => new Date(v)),
        z.number().transform((v) => BigInt(v)),
    ]),
});

/** @internal */
export type UnionDateTimeBigIntRes$Outbound = {
    json: string | number;
};

/** @internal */
export const UnionDateTimeBigIntRes$outboundSchema: z.ZodType<
    UnionDateTimeBigIntRes$Outbound,
    z.ZodTypeDef,
    UnionDateTimeBigIntRes
> = z.object({
    json: z.union([
        z.date().transform((v) => v.toISOString()),
        z.bigint().transform((v) => Number(v)),
    ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionDateTimeBigIntRes$ {
    /** @deprecated use `UnionDateTimeBigIntRes$inboundSchema` instead. */
    export const inboundSchema = UnionDateTimeBigIntRes$inboundSchema;
    /** @deprecated use `UnionDateTimeBigIntRes$outboundSchema` instead. */
    export const outboundSchema = UnionDateTimeBigIntRes$outboundSchema;
    /** @deprecated use `UnionDateTimeBigIntRes$Outbound` instead. */
    export type Outbound = UnionDateTimeBigIntRes$Outbound;
}
