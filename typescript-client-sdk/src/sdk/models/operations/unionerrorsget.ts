/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const UnionErrorsGetServerList = ["http://localhost:35456"] as const;

export const ErrorType = {
    Type1: "type1",
    Type2: "type2",
} as const;
export type ErrorType = ClosedEnum<typeof ErrorType>;

export type UnionErrorsGetRequest = {
    errorType: ErrorType;
};

/** @internal */
export namespace ErrorType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof ErrorType> = z.nativeEnum(ErrorType);
    export const outboundSchema: z.ZodNativeEnum<typeof ErrorType> = inboundSchema;
}

/** @internal */
export namespace UnionErrorsGetRequest$ {
    export const inboundSchema: z.ZodType<UnionErrorsGetRequest, z.ZodTypeDef, unknown> = z.object({
        errorType: ErrorType$.inboundSchema,
    });

    export type Outbound = {
        errorType: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnionErrorsGetRequest> =
        z.object({
            errorType: ErrorType$.outboundSchema,
        });
}
