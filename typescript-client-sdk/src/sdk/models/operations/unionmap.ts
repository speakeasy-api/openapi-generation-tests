/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type UnionMapRequestBody = {
    input: { [k: string]: shared.OneOfPrimitives };
};

export type UnionMapJson = {
    input: { [k: string]: shared.OneOfPrimitives };
};

/**
 * OK
 */
export type UnionMapRes = {
    json: UnionMapJson;
};

/** @internal */
export namespace UnionMapRequestBody$ {
    export const inboundSchema: z.ZodType<UnionMapRequestBody, z.ZodTypeDef, unknown> = z.object({
        input: z.record(shared.OneOfPrimitives$.inboundSchema),
    });

    export type Outbound = {
        input: { [k: string]: shared.OneOfPrimitives$.Outbound };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnionMapRequestBody> = z.object({
        input: z.record(shared.OneOfPrimitives$.outboundSchema),
    });
}

/** @internal */
export namespace UnionMapJson$ {
    export const inboundSchema: z.ZodType<UnionMapJson, z.ZodTypeDef, unknown> = z.object({
        input: z.record(shared.OneOfPrimitives$.inboundSchema),
    });

    export type Outbound = {
        input: { [k: string]: shared.OneOfPrimitives$.Outbound };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnionMapJson> = z.object({
        input: z.record(shared.OneOfPrimitives$.outboundSchema),
    });
}

/** @internal */
export namespace UnionMapRes$ {
    export const inboundSchema: z.ZodType<UnionMapRes, z.ZodTypeDef, unknown> = z.object({
        json: z.lazy(() => UnionMapJson$.inboundSchema),
    });

    export type Outbound = {
        json: UnionMapJson$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnionMapRes> = z.object({
        json: z.lazy(() => UnionMapJson$.outboundSchema),
    });
}
