/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type UnionMapRequestBody = {
  input: { [k: string]: shared.OneOfPrimitives };
};

export type UnionMapJson = {
  input: { [k: string]: shared.OneOfPrimitives };
};

/**
 * OK
 */
export type UnionMapRes = {
  json: UnionMapJson;
};

/** @internal */
export const UnionMapRequestBody$inboundSchema: z.ZodType<
  UnionMapRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  input: z.record(shared.OneOfPrimitives$inboundSchema),
});

/** @internal */
export type UnionMapRequestBody$Outbound = {
  input: { [k: string]: shared.OneOfPrimitives$Outbound };
};

/** @internal */
export const UnionMapRequestBody$outboundSchema: z.ZodType<
  UnionMapRequestBody$Outbound,
  z.ZodTypeDef,
  UnionMapRequestBody
> = z.object({
  input: z.record(shared.OneOfPrimitives$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionMapRequestBody$ {
  /** @deprecated use `UnionMapRequestBody$inboundSchema` instead. */
  export const inboundSchema = UnionMapRequestBody$inboundSchema;
  /** @deprecated use `UnionMapRequestBody$outboundSchema` instead. */
  export const outboundSchema = UnionMapRequestBody$outboundSchema;
  /** @deprecated use `UnionMapRequestBody$Outbound` instead. */
  export type Outbound = UnionMapRequestBody$Outbound;
}

export function unionMapRequestBodyToJSON(
  unionMapRequestBody: UnionMapRequestBody,
): string {
  return JSON.stringify(
    UnionMapRequestBody$outboundSchema.parse(unionMapRequestBody),
  );
}

export function unionMapRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UnionMapRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UnionMapRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UnionMapRequestBody' from JSON`,
  );
}

/** @internal */
export const UnionMapJson$inboundSchema: z.ZodType<
  UnionMapJson,
  z.ZodTypeDef,
  unknown
> = z.object({
  input: z.record(shared.OneOfPrimitives$inboundSchema),
});

/** @internal */
export type UnionMapJson$Outbound = {
  input: { [k: string]: shared.OneOfPrimitives$Outbound };
};

/** @internal */
export const UnionMapJson$outboundSchema: z.ZodType<
  UnionMapJson$Outbound,
  z.ZodTypeDef,
  UnionMapJson
> = z.object({
  input: z.record(shared.OneOfPrimitives$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionMapJson$ {
  /** @deprecated use `UnionMapJson$inboundSchema` instead. */
  export const inboundSchema = UnionMapJson$inboundSchema;
  /** @deprecated use `UnionMapJson$outboundSchema` instead. */
  export const outboundSchema = UnionMapJson$outboundSchema;
  /** @deprecated use `UnionMapJson$Outbound` instead. */
  export type Outbound = UnionMapJson$Outbound;
}

export function unionMapJsonToJSON(unionMapJson: UnionMapJson): string {
  return JSON.stringify(UnionMapJson$outboundSchema.parse(unionMapJson));
}

export function unionMapJsonFromJSON(
  jsonString: string,
): SafeParseResult<UnionMapJson, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UnionMapJson$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UnionMapJson' from JSON`,
  );
}

/** @internal */
export const UnionMapRes$inboundSchema: z.ZodType<
  UnionMapRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: z.lazy(() => UnionMapJson$inboundSchema),
});

/** @internal */
export type UnionMapRes$Outbound = {
  json: UnionMapJson$Outbound;
};

/** @internal */
export const UnionMapRes$outboundSchema: z.ZodType<
  UnionMapRes$Outbound,
  z.ZodTypeDef,
  UnionMapRes
> = z.object({
  json: z.lazy(() => UnionMapJson$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionMapRes$ {
  /** @deprecated use `UnionMapRes$inboundSchema` instead. */
  export const inboundSchema = UnionMapRes$inboundSchema;
  /** @deprecated use `UnionMapRes$outboundSchema` instead. */
  export const outboundSchema = UnionMapRes$outboundSchema;
  /** @deprecated use `UnionMapRes$Outbound` instead. */
  export type Outbound = UnionMapRes$Outbound;
}

export function unionMapResToJSON(unionMapRes: UnionMapRes): string {
  return JSON.stringify(UnionMapRes$outboundSchema.parse(unionMapRes));
}

export function unionMapResFromJSON(
  jsonString: string,
): SafeParseResult<UnionMapRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UnionMapRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UnionMapRes' from JSON`,
  );
}
