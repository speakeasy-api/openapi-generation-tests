/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as shared from "../shared/index.js";
import * as z from "zod";

export type Enums = Array<shared.Enum> | { [k: string]: shared.Enum };

export type UnionNestedEnumsMultipartRequestBody = {
    enums: Array<shared.Enum> | { [k: string]: shared.Enum };
};

/** @internal */
export const Enums$inboundSchema: z.ZodType<Enums, z.ZodTypeDef, unknown> = z.union([
    z.array(shared.Enum$inboundSchema),
    z.record(shared.Enum$inboundSchema),
]);

/** @internal */
export type Enums$Outbound = Array<string> | { [k: string]: string };

/** @internal */
export const Enums$outboundSchema: z.ZodType<Enums$Outbound, z.ZodTypeDef, Enums> = z.union([
    z.array(shared.Enum$outboundSchema),
    z.record(shared.Enum$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Enums$ {
    /** @deprecated use `Enums$inboundSchema` instead. */
    export const inboundSchema = Enums$inboundSchema;
    /** @deprecated use `Enums$outboundSchema` instead. */
    export const outboundSchema = Enums$outboundSchema;
    /** @deprecated use `Enums$Outbound` instead. */
    export type Outbound = Enums$Outbound;
}

/** @internal */
export const UnionNestedEnumsMultipartRequestBody$inboundSchema: z.ZodType<
    UnionNestedEnumsMultipartRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    enums: z.union([z.array(shared.Enum$inboundSchema), z.record(shared.Enum$inboundSchema)]),
});

/** @internal */
export type UnionNestedEnumsMultipartRequestBody$Outbound = {
    enums: Array<string> | { [k: string]: string };
};

/** @internal */
export const UnionNestedEnumsMultipartRequestBody$outboundSchema: z.ZodType<
    UnionNestedEnumsMultipartRequestBody$Outbound,
    z.ZodTypeDef,
    UnionNestedEnumsMultipartRequestBody
> = z.object({
    enums: z.union([z.array(shared.Enum$outboundSchema), z.record(shared.Enum$outboundSchema)]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionNestedEnumsMultipartRequestBody$ {
    /** @deprecated use `UnionNestedEnumsMultipartRequestBody$inboundSchema` instead. */
    export const inboundSchema = UnionNestedEnumsMultipartRequestBody$inboundSchema;
    /** @deprecated use `UnionNestedEnumsMultipartRequestBody$outboundSchema` instead. */
    export const outboundSchema = UnionNestedEnumsMultipartRequestBody$outboundSchema;
    /** @deprecated use `UnionNestedEnumsMultipartRequestBody$Outbound` instead. */
    export type Outbound = UnionNestedEnumsMultipartRequestBody$Outbound;
}
