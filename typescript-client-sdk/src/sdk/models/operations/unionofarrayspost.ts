/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type UnionOfArraysPostRes = {
  json: shared.UnionOfArrays;
};

/** @internal */
export const UnionOfArraysPostRes$inboundSchema: z.ZodType<
  UnionOfArraysPostRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.UnionOfArrays$inboundSchema,
});

/** @internal */
export type UnionOfArraysPostRes$Outbound = {
  json: shared.UnionOfArrays$Outbound;
};

/** @internal */
export const UnionOfArraysPostRes$outboundSchema: z.ZodType<
  UnionOfArraysPostRes$Outbound,
  z.ZodTypeDef,
  UnionOfArraysPostRes
> = z.object({
  json: shared.UnionOfArrays$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionOfArraysPostRes$ {
  /** @deprecated use `UnionOfArraysPostRes$inboundSchema` instead. */
  export const inboundSchema = UnionOfArraysPostRes$inboundSchema;
  /** @deprecated use `UnionOfArraysPostRes$outboundSchema` instead. */
  export const outboundSchema = UnionOfArraysPostRes$outboundSchema;
  /** @deprecated use `UnionOfArraysPostRes$Outbound` instead. */
  export type Outbound = UnionOfArraysPostRes$Outbound;
}

export function unionOfArraysPostResToJSON(
  unionOfArraysPostRes: UnionOfArraysPostRes,
): string {
  return JSON.stringify(
    UnionOfArraysPostRes$outboundSchema.parse(unionOfArraysPostRes),
  );
}

export function unionOfArraysPostResFromJSON(
  jsonString: string,
): SafeParseResult<UnionOfArraysPostRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UnionOfArraysPostRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UnionOfArraysPostRes' from JSON`,
  );
}
