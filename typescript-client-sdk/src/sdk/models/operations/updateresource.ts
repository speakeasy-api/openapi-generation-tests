/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateResourceRequest = {
  augment: string;
  resourceId: string;
};

/** @internal */
export const UpdateResourceRequest$inboundSchema: z.ZodType<
  UpdateResourceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  augment: z.string(),
  resourceId: z.string(),
});

/** @internal */
export type UpdateResourceRequest$Outbound = {
  augment: string;
  resourceId: string;
};

/** @internal */
export const UpdateResourceRequest$outboundSchema: z.ZodType<
  UpdateResourceRequest$Outbound,
  z.ZodTypeDef,
  UpdateResourceRequest
> = z.object({
  augment: z.string(),
  resourceId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateResourceRequest$ {
  /** @deprecated use `UpdateResourceRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateResourceRequest$inboundSchema;
  /** @deprecated use `UpdateResourceRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateResourceRequest$outboundSchema;
  /** @deprecated use `UpdateResourceRequest$Outbound` instead. */
  export type Outbound = UpdateResourceRequest$Outbound;
}

export function updateResourceRequestToJSON(
  updateResourceRequest: UpdateResourceRequest,
): string {
  return JSON.stringify(
    UpdateResourceRequest$outboundSchema.parse(updateResourceRequest),
  );
}

export function updateResourceRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateResourceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateResourceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateResourceRequest' from JSON`,
  );
}
