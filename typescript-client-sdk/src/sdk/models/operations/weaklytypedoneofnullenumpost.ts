/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

/**
 * OK
 */
export type WeaklyTypedOneOfNullEnumPostRes = {
  json: shared.WeaklyTypedOneOfNullEnumObject;
};

/** @internal */
export const WeaklyTypedOneOfNullEnumPostRes$inboundSchema: z.ZodType<
  WeaklyTypedOneOfNullEnumPostRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  json: shared.WeaklyTypedOneOfNullEnumObject$inboundSchema,
});

/** @internal */
export type WeaklyTypedOneOfNullEnumPostRes$Outbound = {
  json: shared.WeaklyTypedOneOfNullEnumObject$Outbound;
};

/** @internal */
export const WeaklyTypedOneOfNullEnumPostRes$outboundSchema: z.ZodType<
  WeaklyTypedOneOfNullEnumPostRes$Outbound,
  z.ZodTypeDef,
  WeaklyTypedOneOfNullEnumPostRes
> = z.object({
  json: shared.WeaklyTypedOneOfNullEnumObject$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WeaklyTypedOneOfNullEnumPostRes$ {
  /** @deprecated use `WeaklyTypedOneOfNullEnumPostRes$inboundSchema` instead. */
  export const inboundSchema = WeaklyTypedOneOfNullEnumPostRes$inboundSchema;
  /** @deprecated use `WeaklyTypedOneOfNullEnumPostRes$outboundSchema` instead. */
  export const outboundSchema = WeaklyTypedOneOfNullEnumPostRes$outboundSchema;
  /** @deprecated use `WeaklyTypedOneOfNullEnumPostRes$Outbound` instead. */
  export type Outbound = WeaklyTypedOneOfNullEnumPostRes$Outbound;
}

export function weaklyTypedOneOfNullEnumPostResToJSON(
  weaklyTypedOneOfNullEnumPostRes: WeaklyTypedOneOfNullEnumPostRes,
): string {
  return JSON.stringify(
    WeaklyTypedOneOfNullEnumPostRes$outboundSchema.parse(
      weaklyTypedOneOfNullEnumPostRes,
    ),
  );
}

export function weaklyTypedOneOfNullEnumPostResFromJSON(
  jsonString: string,
): SafeParseResult<WeaklyTypedOneOfNullEnumPostRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WeaklyTypedOneOfNullEnumPostRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WeaklyTypedOneOfNullEnumPostRes' from JSON`,
  );
}
