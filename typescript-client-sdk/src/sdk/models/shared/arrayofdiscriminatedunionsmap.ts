/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StronglyTypedOneOfObject,
  StronglyTypedOneOfObject$inboundSchema,
  StronglyTypedOneOfObject$Outbound,
  StronglyTypedOneOfObject$outboundSchema,
} from "./stronglytypedoneofobject.js";

export type ArrayOfDiscriminatedUnionsMap = {
  arrayMap: { [k: string]: Array<StronglyTypedOneOfObject> };
};

/** @internal */
export const ArrayOfDiscriminatedUnionsMap$inboundSchema: z.ZodType<
  ArrayOfDiscriminatedUnionsMap,
  z.ZodTypeDef,
  unknown
> = z.object({
  arrayMap: z.record(z.array(StronglyTypedOneOfObject$inboundSchema)),
});

/** @internal */
export type ArrayOfDiscriminatedUnionsMap$Outbound = {
  arrayMap: { [k: string]: Array<StronglyTypedOneOfObject$Outbound> };
};

/** @internal */
export const ArrayOfDiscriminatedUnionsMap$outboundSchema: z.ZodType<
  ArrayOfDiscriminatedUnionsMap$Outbound,
  z.ZodTypeDef,
  ArrayOfDiscriminatedUnionsMap
> = z.object({
  arrayMap: z.record(z.array(StronglyTypedOneOfObject$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArrayOfDiscriminatedUnionsMap$ {
  /** @deprecated use `ArrayOfDiscriminatedUnionsMap$inboundSchema` instead. */
  export const inboundSchema = ArrayOfDiscriminatedUnionsMap$inboundSchema;
  /** @deprecated use `ArrayOfDiscriminatedUnionsMap$outboundSchema` instead. */
  export const outboundSchema = ArrayOfDiscriminatedUnionsMap$outboundSchema;
  /** @deprecated use `ArrayOfDiscriminatedUnionsMap$Outbound` instead. */
  export type Outbound = ArrayOfDiscriminatedUnionsMap$Outbound;
}

export function arrayOfDiscriminatedUnionsMapToJSON(
  arrayOfDiscriminatedUnionsMap: ArrayOfDiscriminatedUnionsMap,
): string {
  return JSON.stringify(
    ArrayOfDiscriminatedUnionsMap$outboundSchema.parse(
      arrayOfDiscriminatedUnionsMap,
    ),
  );
}

export function arrayOfDiscriminatedUnionsMapFromJSON(
  jsonString: string,
): SafeParseResult<ArrayOfDiscriminatedUnionsMap, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ArrayOfDiscriminatedUnionsMap$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ArrayOfDiscriminatedUnionsMap' from JSON`,
  );
}
