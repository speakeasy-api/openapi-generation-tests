/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    SimpleObject,
    SimpleObject$inboundSchema,
    SimpleObject$Outbound,
    SimpleObject$outboundSchema,
} from "./simpleobject.js";
import * as z from "zod";

export type ArrObjValue = {
    json?: Array<SimpleObject> | undefined;
    required?: any | undefined;
};

/** @internal */
export const ArrObjValue$inboundSchema: z.ZodType<ArrObjValue, z.ZodTypeDef, unknown> = z.object({
    json: z.array(SimpleObject$inboundSchema).optional(),
    required: z.any().optional(),
});

/** @internal */
export type ArrObjValue$Outbound = {
    json?: Array<SimpleObject$Outbound> | undefined;
    required?: any | undefined;
};

/** @internal */
export const ArrObjValue$outboundSchema: z.ZodType<
    ArrObjValue$Outbound,
    z.ZodTypeDef,
    ArrObjValue
> = z.object({
    json: z.array(SimpleObject$outboundSchema).optional(),
    required: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArrObjValue$ {
    /** @deprecated use `ArrObjValue$inboundSchema` instead. */
    export const inboundSchema = ArrObjValue$inboundSchema;
    /** @deprecated use `ArrObjValue$outboundSchema` instead. */
    export const outboundSchema = ArrObjValue$outboundSchema;
    /** @deprecated use `ArrObjValue$Outbound` instead. */
    export type Outbound = ArrObjValue$Outbound;
}
