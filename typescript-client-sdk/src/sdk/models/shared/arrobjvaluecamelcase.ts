/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SimpleObjectCamelCase, SimpleObjectCamelCase$ } from "./simpleobjectcamelcase.js";
import * as z from "zod";

export type ArrObjValueCamelCase = {
    json?: Array<SimpleObjectCamelCase> | undefined;
    required?: any | undefined;
};

/** @internal */
export namespace ArrObjValueCamelCase$ {
    export const inboundSchema: z.ZodType<ArrObjValueCamelCase, z.ZodTypeDef, unknown> = z.object({
        json: z.array(SimpleObjectCamelCase$.inboundSchema).optional(),
        required: z.any().optional(),
    });

    export type Outbound = {
        json?: Array<SimpleObjectCamelCase$.Outbound> | undefined;
        required?: any | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ArrObjValueCamelCase> = z.object(
        {
            json: z.array(SimpleObjectCamelCase$.outboundSchema).optional(),
            required: z.any().optional(),
        }
    );
}
