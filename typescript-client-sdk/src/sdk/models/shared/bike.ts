/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Bike = {
  colour: string;
  vehicleType?: "bike" | undefined;
  wheelsType?: "two" | undefined;
};

/** @internal */
export const Bike$inboundSchema: z.ZodType<Bike, z.ZodTypeDef, unknown> = z
  .object({
    colour: z.string(),
    vehicleType: z.literal("bike").optional(),
    wheelsType: z.literal("two").optional(),
  });

/** @internal */
export type Bike$Outbound = {
  colour: string;
  vehicleType: "bike";
  wheelsType: "two";
};

/** @internal */
export const Bike$outboundSchema: z.ZodType<Bike$Outbound, z.ZodTypeDef, Bike> =
  z.object({
    colour: z.string(),
    vehicleType: z.literal("bike").default("bike" as const),
    wheelsType: z.literal("two").default("two" as const),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Bike$ {
  /** @deprecated use `Bike$inboundSchema` instead. */
  export const inboundSchema = Bike$inboundSchema;
  /** @deprecated use `Bike$outboundSchema` instead. */
  export const outboundSchema = Bike$outboundSchema;
  /** @deprecated use `Bike$Outbound` instead. */
  export type Outbound = Bike$Outbound;
}
