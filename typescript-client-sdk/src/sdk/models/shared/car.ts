/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Car = {
  vehicleType?: "car" | undefined;
  wheelsType?: "four" | undefined;
};

/** @internal */
export const Car$inboundSchema: z.ZodType<Car, z.ZodTypeDef, unknown> = z
  .object({
    vehicleType: z.literal("car").optional(),
    wheelsType: z.literal("four").optional(),
  });

/** @internal */
export type Car$Outbound = {
  vehicleType: "car";
  wheelsType: "four";
};

/** @internal */
export const Car$outboundSchema: z.ZodType<Car$Outbound, z.ZodTypeDef, Car> = z
  .object({
    vehicleType: z.literal("car").default("car" as const),
    wheelsType: z.literal("four").default("four" as const),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Car$ {
  /** @deprecated use `Car$inboundSchema` instead. */
  export const inboundSchema = Car$inboundSchema;
  /** @deprecated use `Car$outboundSchema` instead. */
  export const outboundSchema = Car$outboundSchema;
  /** @deprecated use `Car$Outbound` instead. */
  export type Outbound = Car$Outbound;
}
