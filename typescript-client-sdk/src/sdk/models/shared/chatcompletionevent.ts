/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Data = {
  content: string;
};

/**
 * Represents a chat completion event which contains printable content
 */
export type ChatCompletionEvent = {
  data: Data;
};

/** @internal */
export const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z
  .object({
    content: z.string(),
  });

/** @internal */
export type Data$Outbound = {
  content: string;
};

/** @internal */
export const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data> =
  z.object({
    content: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data$ {
  /** @deprecated use `Data$inboundSchema` instead. */
  export const inboundSchema = Data$inboundSchema;
  /** @deprecated use `Data$outboundSchema` instead. */
  export const outboundSchema = Data$outboundSchema;
  /** @deprecated use `Data$Outbound` instead. */
  export type Outbound = Data$Outbound;
}

/** @internal */
export const ChatCompletionEvent$inboundSchema: z.ZodType<
  ChatCompletionEvent,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.string().transform((v, ctx) => {
    try {
      return JSON.parse(v);
    } catch (err) {
      ctx.addIssue({
        code: z.ZodIssueCode.custom,
        message: `malformed json: ${err}`,
      });
      return z.NEVER;
    }
  }).pipe(z.lazy(() => Data$inboundSchema)),
});

/** @internal */
export type ChatCompletionEvent$Outbound = {
  data: Data$Outbound;
};

/** @internal */
export const ChatCompletionEvent$outboundSchema: z.ZodType<
  ChatCompletionEvent$Outbound,
  z.ZodTypeDef,
  ChatCompletionEvent
> = z.object({
  data: z.lazy(() => Data$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionEvent$ {
  /** @deprecated use `ChatCompletionEvent$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionEvent$inboundSchema;
  /** @deprecated use `ChatCompletionEvent$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionEvent$outboundSchema;
  /** @deprecated use `ChatCompletionEvent$Outbound` instead. */
  export type Outbound = ChatCompletionEvent$Outbound;
}
