/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ChatCompletionEvent,
    ChatCompletionEvent$inboundSchema,
    ChatCompletionEvent$Outbound,
    ChatCompletionEvent$outboundSchema,
} from "./chatcompletionevent.js";
import {
    SentinelEvent,
    SentinelEvent$inboundSchema,
    SentinelEvent$Outbound,
    SentinelEvent$outboundSchema,
} from "./sentinelevent.js";
import * as z from "zod";

export type ChatCompletionStream = ChatCompletionEvent | SentinelEvent;

/** @internal */
export const ChatCompletionStream$inboundSchema: z.ZodType<
    ChatCompletionStream,
    z.ZodTypeDef,
    unknown
> = z.union([ChatCompletionEvent$inboundSchema, SentinelEvent$inboundSchema]);

/** @internal */
export type ChatCompletionStream$Outbound = ChatCompletionEvent$Outbound | SentinelEvent$Outbound;

/** @internal */
export const ChatCompletionStream$outboundSchema: z.ZodType<
    ChatCompletionStream$Outbound,
    z.ZodTypeDef,
    ChatCompletionStream
> = z.union([ChatCompletionEvent$outboundSchema, SentinelEvent$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionStream$ {
    /** @deprecated use `ChatCompletionStream$inboundSchema` instead. */
    export const inboundSchema = ChatCompletionStream$inboundSchema;
    /** @deprecated use `ChatCompletionStream$outboundSchema` instead. */
    export const outboundSchema = ChatCompletionStream$outboundSchema;
    /** @deprecated use `ChatCompletionStream$Outbound` instead. */
    export type Outbound = ChatCompletionStream$Outbound;
}
