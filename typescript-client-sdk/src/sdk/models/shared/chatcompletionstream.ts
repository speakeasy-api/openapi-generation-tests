/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ChatCompletionEvent, ChatCompletionEvent$ } from "./chatcompletionevent";
import { SentinelEvent, SentinelEvent$ } from "./sentinelevent";
import * as z from "zod";

export type ChatCompletionStream = ChatCompletionEvent | SentinelEvent;

/** @internal */
export namespace ChatCompletionStream$ {
    export type Inbound = ChatCompletionEvent$.Inbound | SentinelEvent$.Inbound;

    export type Outbound = ChatCompletionEvent$.Outbound | SentinelEvent$.Outbound;
    export const inboundSchema: z.ZodType<ChatCompletionStream, z.ZodTypeDef, Inbound> = z.union([
        ChatCompletionEvent$.inboundSchema,
        SentinelEvent$.inboundSchema,
    ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatCompletionStream> = z.union([
        ChatCompletionEvent$.outboundSchema,
        SentinelEvent$.outboundSchema,
    ]);
}
