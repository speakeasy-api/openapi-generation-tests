/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ConstObject1 = {
    imageURL: string;
    tag?: "tag1" | undefined;
};

/** @internal */
export const ConstObject1$inboundSchema: z.ZodType<ConstObject1, z.ZodTypeDef, unknown> = z.object({
    imageURL: z.string(),
    tag: z.literal("tag1").optional(),
});

/** @internal */
export type ConstObject1$Outbound = {
    imageURL: string;
    tag: "tag1";
};

/** @internal */
export const ConstObject1$outboundSchema: z.ZodType<
    ConstObject1$Outbound,
    z.ZodTypeDef,
    ConstObject1
> = z.object({
    imageURL: z.string(),
    tag: z.literal("tag1").default("tag1" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConstObject1$ {
    /** @deprecated use `ConstObject1$inboundSchema` instead. */
    export const inboundSchema = ConstObject1$inboundSchema;
    /** @deprecated use `ConstObject1$outboundSchema` instead. */
    export const outboundSchema = ConstObject1$outboundSchema;
    /** @deprecated use `ConstObject1$Outbound` instead. */
    export type Outbound = ConstObject1$Outbound;
}
