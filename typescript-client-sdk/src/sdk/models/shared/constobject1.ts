/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ConstObject1 = {
  imageURL: string;
  tag?: "tag1" | undefined;
};

/** @internal */
export const ConstObject1$inboundSchema: z.ZodType<
  ConstObject1,
  z.ZodTypeDef,
  unknown
> = z.object({
  imageURL: z.string(),
  tag: z.literal("tag1").optional(),
});

/** @internal */
export type ConstObject1$Outbound = {
  imageURL: string;
  tag: "tag1";
};

/** @internal */
export const ConstObject1$outboundSchema: z.ZodType<
  ConstObject1$Outbound,
  z.ZodTypeDef,
  ConstObject1
> = z.object({
  imageURL: z.string(),
  tag: z.literal("tag1").default("tag1" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConstObject1$ {
  /** @deprecated use `ConstObject1$inboundSchema` instead. */
  export const inboundSchema = ConstObject1$inboundSchema;
  /** @deprecated use `ConstObject1$outboundSchema` instead. */
  export const outboundSchema = ConstObject1$outboundSchema;
  /** @deprecated use `ConstObject1$Outbound` instead. */
  export type Outbound = ConstObject1$Outbound;
}

export function constObject1ToJSON(constObject1: ConstObject1): string {
  return JSON.stringify(ConstObject1$outboundSchema.parse(constObject1));
}

export function constObject1FromJSON(
  jsonString: string,
): SafeParseResult<ConstObject1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConstObject1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConstObject1' from JSON`,
  );
}
