/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * @deprecated enum: This enum is deprecated.
 */
export const DeprecatedEnum = {
    A: "a",
    B: "b",
    C: "c",
} as const;
/**
 * @deprecated enum: This enum is deprecated.
 */
export type DeprecatedEnum = ClosedEnum<typeof DeprecatedEnum>;

export type DeprecatedFieldInObject = {
    /**
     * @deprecated field: This enum is deprecated.
     */
    deprecatedEnum?: DeprecatedEnum | undefined;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible. Use newField instead.
     */
    deprecatedField?: string | undefined;
    newField?: string | undefined;
};

/** @internal */
export const DeprecatedEnum$inboundSchema: z.ZodNativeEnum<typeof DeprecatedEnum> =
    z.nativeEnum(DeprecatedEnum);

/** @internal */
export const DeprecatedEnum$outboundSchema: z.ZodNativeEnum<typeof DeprecatedEnum> =
    DeprecatedEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedEnum$ {
    /** @deprecated use `DeprecatedEnum$inboundSchema` instead. */
    export const inboundSchema = DeprecatedEnum$inboundSchema;
    /** @deprecated use `DeprecatedEnum$outboundSchema` instead. */
    export const outboundSchema = DeprecatedEnum$outboundSchema;
}

/** @internal */
export const DeprecatedFieldInObject$inboundSchema: z.ZodType<
    DeprecatedFieldInObject,
    z.ZodTypeDef,
    unknown
> = z.object({
    deprecatedEnum: DeprecatedEnum$inboundSchema.optional(),
    deprecatedField: z.string().optional(),
    newField: z.string().optional(),
});

/** @internal */
export type DeprecatedFieldInObject$Outbound = {
    deprecatedEnum?: string | undefined;
    deprecatedField?: string | undefined;
    newField?: string | undefined;
};

/** @internal */
export const DeprecatedFieldInObject$outboundSchema: z.ZodType<
    DeprecatedFieldInObject$Outbound,
    z.ZodTypeDef,
    DeprecatedFieldInObject
> = z.object({
    deprecatedEnum: DeprecatedEnum$outboundSchema.optional(),
    deprecatedField: z.string().optional(),
    newField: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedFieldInObject$ {
    /** @deprecated use `DeprecatedFieldInObject$inboundSchema` instead. */
    export const inboundSchema = DeprecatedFieldInObject$inboundSchema;
    /** @deprecated use `DeprecatedFieldInObject$outboundSchema` instead. */
    export const outboundSchema = DeprecatedFieldInObject$outboundSchema;
    /** @deprecated use `DeprecatedFieldInObject$Outbound` instead. */
    export type Outbound = DeprecatedFieldInObject$Outbound;
}
