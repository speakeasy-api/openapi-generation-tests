/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type DeprecatedObjectWithExample = {
    str?: string | undefined;
};

/** @internal */
export const DeprecatedObjectWithExample$inboundSchema: z.ZodType<
    DeprecatedObjectWithExample,
    z.ZodTypeDef,
    unknown
> = z.object({
    str: z.string().optional(),
});

/** @internal */
export type DeprecatedObjectWithExample$Outbound = {
    str?: string | undefined;
};

/** @internal */
export const DeprecatedObjectWithExample$outboundSchema: z.ZodType<
    DeprecatedObjectWithExample$Outbound,
    z.ZodTypeDef,
    DeprecatedObjectWithExample
> = z.object({
    str: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedObjectWithExample$ {
    /** @deprecated use `DeprecatedObjectWithExample$inboundSchema` instead. */
    export const inboundSchema = DeprecatedObjectWithExample$inboundSchema;
    /** @deprecated use `DeprecatedObjectWithExample$outboundSchema` instead. */
    export const outboundSchema = DeprecatedObjectWithExample$outboundSchema;
    /** @deprecated use `DeprecatedObjectWithExample$Outbound` instead. */
    export type Outbound = DeprecatedObjectWithExample$Outbound;
}
