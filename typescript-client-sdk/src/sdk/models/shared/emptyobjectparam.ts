/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type EmptyObjectParam = {};

/** @internal */
export const EmptyObjectParam$inboundSchema: z.ZodType<EmptyObjectParam, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type EmptyObjectParam$Outbound = {};

/** @internal */
export const EmptyObjectParam$outboundSchema: z.ZodType<
    EmptyObjectParam$Outbound,
    z.ZodTypeDef,
    EmptyObjectParam
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmptyObjectParam$ {
    /** @deprecated use `EmptyObjectParam$inboundSchema` instead. */
    export const inboundSchema = EmptyObjectParam$inboundSchema;
    /** @deprecated use `EmptyObjectParam$outboundSchema` instead. */
    export const outboundSchema = EmptyObjectParam$outboundSchema;
    /** @deprecated use `EmptyObjectParam$Outbound` instead. */
    export type Outbound = EmptyObjectParam$Outbound;
}
