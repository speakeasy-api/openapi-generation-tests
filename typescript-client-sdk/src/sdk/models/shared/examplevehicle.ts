/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ExampleBoat,
  ExampleBoat$inboundSchema,
  ExampleBoat$Outbound,
  ExampleBoat$outboundSchema,
} from "./exampleboat.js";
import {
  ExampleCar,
  ExampleCar$inboundSchema,
  ExampleCar$Outbound,
  ExampleCar$outboundSchema,
} from "./examplecar.js";

export type ExampleVehicle = ExampleBoat | ExampleCar;

/** @internal */
export const ExampleVehicle$inboundSchema: z.ZodType<
  ExampleVehicle,
  z.ZodTypeDef,
  unknown
> = z.union([ExampleBoat$inboundSchema, ExampleCar$inboundSchema]);

/** @internal */
export type ExampleVehicle$Outbound =
  | ExampleBoat$Outbound
  | ExampleCar$Outbound;

/** @internal */
export const ExampleVehicle$outboundSchema: z.ZodType<
  ExampleVehicle$Outbound,
  z.ZodTypeDef,
  ExampleVehicle
> = z.union([ExampleBoat$outboundSchema, ExampleCar$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExampleVehicle$ {
  /** @deprecated use `ExampleVehicle$inboundSchema` instead. */
  export const inboundSchema = ExampleVehicle$inboundSchema;
  /** @deprecated use `ExampleVehicle$outboundSchema` instead. */
  export const outboundSchema = ExampleVehicle$outboundSchema;
  /** @deprecated use `ExampleVehicle$Outbound` instead. */
  export type Outbound = ExampleVehicle$Outbound;
}

export function exampleVehicleToJSON(exampleVehicle: ExampleVehicle): string {
  return JSON.stringify(ExampleVehicle$outboundSchema.parse(exampleVehicle));
}

export function exampleVehicleFromJSON(
  jsonString: string,
): SafeParseResult<ExampleVehicle, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExampleVehicle$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExampleVehicle' from JSON`,
  );
}
