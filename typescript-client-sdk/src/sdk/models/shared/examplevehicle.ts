/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ExampleBoat,
    ExampleBoat$inboundSchema,
    ExampleBoat$Outbound,
    ExampleBoat$outboundSchema,
} from "./exampleboat.js";
import {
    ExampleCar,
    ExampleCar$inboundSchema,
    ExampleCar$Outbound,
    ExampleCar$outboundSchema,
} from "./examplecar.js";
import * as z from "zod";

export type ExampleVehicle = ExampleBoat | ExampleCar;

/** @internal */
export const ExampleVehicle$inboundSchema: z.ZodType<ExampleVehicle, z.ZodTypeDef, unknown> =
    z.union([ExampleBoat$inboundSchema, ExampleCar$inboundSchema]);

/** @internal */
export type ExampleVehicle$Outbound = ExampleBoat$Outbound | ExampleCar$Outbound;

/** @internal */
export const ExampleVehicle$outboundSchema: z.ZodType<
    ExampleVehicle$Outbound,
    z.ZodTypeDef,
    ExampleVehicle
> = z.union([ExampleBoat$outboundSchema, ExampleCar$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExampleVehicle$ {
    /** @deprecated use `ExampleVehicle$inboundSchema` instead. */
    export const inboundSchema = ExampleVehicle$inboundSchema;
    /** @deprecated use `ExampleVehicle$outboundSchema` instead. */
    export const outboundSchema = ExampleVehicle$outboundSchema;
    /** @deprecated use `ExampleVehicle$Outbound` instead. */
    export type Outbound = ExampleVehicle$Outbound;
}
