/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

/**
 * A set of strings with fieldnames that lead to relevant examples being generated for them
 */
export type FakerStrings = {
    city?: string | undefined;
    iban?: string | undefined;
    id?: string | undefined;
    iPv4?: string | undefined;
    iPv6?: string | undefined;
    account?: string | undefined;
    address?: string | undefined;
    amount?: string | undefined;
    avatar?: string | undefined;
    color?: string | undefined;
    comment?: string | undefined;
    company?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    currency?: string | undefined;
    datatype?: string | undefined;
    default?: string | undefined;
    description?: string | undefined;
    directory?: string | undefined;
    domainName?: string | undefined;
    emailAddr?: string | undefined;
    extension?: string | undefined;
    filename?: string | undefined;
    filepath?: string | undefined;
    filetype?: string | undefined;
    firstName?: string | undefined;
    fullName?: string | undefined;
    gender?: string | undefined;
    job?: string | undefined;
    json?: string | undefined;
    key?: string | undefined;
    lastName?: string | undefined;
    latitude?: string | undefined;
    locale?: string | undefined;
    longitude?: string | undefined;
    mac?: string | undefined;
    manufacturer?: string | undefined;
    material?: string | undefined;
    middleName?: string | undefined;
    model?: string | undefined;
    password?: string | undefined;
    phone?: string | undefined;
    pin?: string | undefined;
    postalCode?: string | undefined;
    price?: string | undefined;
    product?: string | undefined;
    sex?: string | undefined;
    street?: string | undefined;
    timezone?: string | undefined;
    unit?: string | undefined;
    url?: string | undefined;
    username?: string | undefined;
    uuid?: string | undefined;
};

/** @internal */
export const FakerStrings$inboundSchema: z.ZodType<FakerStrings, z.ZodTypeDef, unknown> = z
    .object({
        City: z.string().optional(),
        IBAN: z.string().optional(),
        ID: z.string().optional(),
        IPv4: z.string().optional(),
        IPv6: z.string().optional(),
        account: z.string().optional(),
        address: z.string().optional(),
        amount: z.string().optional(),
        avatar: z.string().optional(),
        color: z.string().optional(),
        comment: z.string().optional(),
        company: z.string().optional(),
        country: z.string().optional(),
        country_code: z.string().optional(),
        currency: z.string().optional(),
        datatype: z.string().optional(),
        default: z.string().optional(),
        description: z.string().optional(),
        directory: z.string().optional(),
        domainName: z.string().optional(),
        emailAddr: z.string().optional(),
        extension: z.string().optional(),
        filename: z.string().optional(),
        filepath: z.string().optional(),
        filetype: z.string().optional(),
        firstName: z.string().optional(),
        fullName: z.string().optional(),
        gender: z.string().optional(),
        job: z.string().optional(),
        json: z.string().optional(),
        key: z.string().optional(),
        lastName: z.string().optional(),
        latitude: z.string().optional(),
        locale: z.string().optional(),
        longitude: z.string().optional(),
        mac: z.string().optional(),
        manufacturer: z.string().optional(),
        material: z.string().optional(),
        middleName: z.string().optional(),
        model: z.string().optional(),
        password: z.string().optional(),
        phone: z.string().optional(),
        pin: z.string().optional(),
        "postal-code": z.string().optional(),
        price: z.string().optional(),
        product: z.string().optional(),
        sex: z.string().optional(),
        street: z.string().optional(),
        timezone: z.string().optional(),
        unit: z.string().optional(),
        url: z.string().optional(),
        username: z.string().optional(),
        uuid: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            City: "city",
            IBAN: "iban",
            ID: "id",
            IPv4: "iPv4",
            IPv6: "iPv6",
            country_code: "countryCode",
            "postal-code": "postalCode",
        });
    });

/** @internal */
export type FakerStrings$Outbound = {
    City?: string | undefined;
    IBAN?: string | undefined;
    ID?: string | undefined;
    IPv4?: string | undefined;
    IPv6?: string | undefined;
    account?: string | undefined;
    address?: string | undefined;
    amount?: string | undefined;
    avatar?: string | undefined;
    color?: string | undefined;
    comment?: string | undefined;
    company?: string | undefined;
    country?: string | undefined;
    country_code?: string | undefined;
    currency?: string | undefined;
    datatype?: string | undefined;
    default?: string | undefined;
    description?: string | undefined;
    directory?: string | undefined;
    domainName?: string | undefined;
    emailAddr?: string | undefined;
    extension?: string | undefined;
    filename?: string | undefined;
    filepath?: string | undefined;
    filetype?: string | undefined;
    firstName?: string | undefined;
    fullName?: string | undefined;
    gender?: string | undefined;
    job?: string | undefined;
    json?: string | undefined;
    key?: string | undefined;
    lastName?: string | undefined;
    latitude?: string | undefined;
    locale?: string | undefined;
    longitude?: string | undefined;
    mac?: string | undefined;
    manufacturer?: string | undefined;
    material?: string | undefined;
    middleName?: string | undefined;
    model?: string | undefined;
    password?: string | undefined;
    phone?: string | undefined;
    pin?: string | undefined;
    "postal-code"?: string | undefined;
    price?: string | undefined;
    product?: string | undefined;
    sex?: string | undefined;
    street?: string | undefined;
    timezone?: string | undefined;
    unit?: string | undefined;
    url?: string | undefined;
    username?: string | undefined;
    uuid?: string | undefined;
};

/** @internal */
export const FakerStrings$outboundSchema: z.ZodType<
    FakerStrings$Outbound,
    z.ZodTypeDef,
    FakerStrings
> = z
    .object({
        city: z.string().optional(),
        iban: z.string().optional(),
        id: z.string().optional(),
        iPv4: z.string().optional(),
        iPv6: z.string().optional(),
        account: z.string().optional(),
        address: z.string().optional(),
        amount: z.string().optional(),
        avatar: z.string().optional(),
        color: z.string().optional(),
        comment: z.string().optional(),
        company: z.string().optional(),
        country: z.string().optional(),
        countryCode: z.string().optional(),
        currency: z.string().optional(),
        datatype: z.string().optional(),
        default: z.string().optional(),
        description: z.string().optional(),
        directory: z.string().optional(),
        domainName: z.string().optional(),
        emailAddr: z.string().optional(),
        extension: z.string().optional(),
        filename: z.string().optional(),
        filepath: z.string().optional(),
        filetype: z.string().optional(),
        firstName: z.string().optional(),
        fullName: z.string().optional(),
        gender: z.string().optional(),
        job: z.string().optional(),
        json: z.string().optional(),
        key: z.string().optional(),
        lastName: z.string().optional(),
        latitude: z.string().optional(),
        locale: z.string().optional(),
        longitude: z.string().optional(),
        mac: z.string().optional(),
        manufacturer: z.string().optional(),
        material: z.string().optional(),
        middleName: z.string().optional(),
        model: z.string().optional(),
        password: z.string().optional(),
        phone: z.string().optional(),
        pin: z.string().optional(),
        postalCode: z.string().optional(),
        price: z.string().optional(),
        product: z.string().optional(),
        sex: z.string().optional(),
        street: z.string().optional(),
        timezone: z.string().optional(),
        unit: z.string().optional(),
        url: z.string().optional(),
        username: z.string().optional(),
        uuid: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            city: "City",
            iban: "IBAN",
            id: "ID",
            iPv4: "IPv4",
            iPv6: "IPv6",
            countryCode: "country_code",
            postalCode: "postal-code",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FakerStrings$ {
    /** @deprecated use `FakerStrings$inboundSchema` instead. */
    export const inboundSchema = FakerStrings$inboundSchema;
    /** @deprecated use `FakerStrings$outboundSchema` instead. */
    export const outboundSchema = FakerStrings$outboundSchema;
    /** @deprecated use `FakerStrings$Outbound` instead. */
    export type Outbound = FakerStrings$Outbound;
}
