/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FigmaSubcanvasNode,
  FigmaSubcanvasNode$inboundSchema,
  FigmaSubcanvasNode$Outbound,
  FigmaSubcanvasNode$outboundSchema,
} from "./figmasubcanvasnode.js";

export type FigmaBooleanOperationNode = {
  booleanOperation?: string | undefined;
  children?: Array<FigmaSubcanvasNode> | undefined;
};

/** @internal */
export const FigmaBooleanOperationNode$inboundSchema: z.ZodType<
  FigmaBooleanOperationNode,
  z.ZodTypeDef,
  unknown
> = z.object({
  booleanOperation: z.string().optional(),
  children: z.array(z.lazy(() => FigmaSubcanvasNode$inboundSchema)).optional(),
});

/** @internal */
export type FigmaBooleanOperationNode$Outbound = {
  booleanOperation?: string | undefined;
  children?: Array<FigmaSubcanvasNode$Outbound> | undefined;
};

/** @internal */
export const FigmaBooleanOperationNode$outboundSchema: z.ZodType<
  FigmaBooleanOperationNode$Outbound,
  z.ZodTypeDef,
  FigmaBooleanOperationNode
> = z.object({
  booleanOperation: z.string().optional(),
  children: z.array(z.lazy(() => FigmaSubcanvasNode$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FigmaBooleanOperationNode$ {
  /** @deprecated use `FigmaBooleanOperationNode$inboundSchema` instead. */
  export const inboundSchema = FigmaBooleanOperationNode$inboundSchema;
  /** @deprecated use `FigmaBooleanOperationNode$outboundSchema` instead. */
  export const outboundSchema = FigmaBooleanOperationNode$outboundSchema;
  /** @deprecated use `FigmaBooleanOperationNode$Outbound` instead. */
  export type Outbound = FigmaBooleanOperationNode$Outbound;
}

export function figmaBooleanOperationNodeToJSON(
  figmaBooleanOperationNode: FigmaBooleanOperationNode,
): string {
  return JSON.stringify(
    FigmaBooleanOperationNode$outboundSchema.parse(figmaBooleanOperationNode),
  );
}

export function figmaBooleanOperationNodeFromJSON(
  jsonString: string,
): SafeParseResult<FigmaBooleanOperationNode, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FigmaBooleanOperationNode$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FigmaBooleanOperationNode' from JSON`,
  );
}
