/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FigmaBooleanOperationNode,
  FigmaBooleanOperationNode$inboundSchema,
  FigmaBooleanOperationNode$Outbound,
  FigmaBooleanOperationNode$outboundSchema,
} from "./figmabooleanoperationnode.js";
import {
  FigmaComponentNode,
  FigmaComponentNode$inboundSchema,
  FigmaComponentNode$Outbound,
  FigmaComponentNode$outboundSchema,
} from "./figmacomponentnode.js";

export type FigmaSubcanvasNode = FigmaBooleanOperationNode | FigmaComponentNode;

/** @internal */
export const FigmaSubcanvasNode$inboundSchema: z.ZodType<
  FigmaSubcanvasNode,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FigmaBooleanOperationNode$inboundSchema),
  z.lazy(() => FigmaComponentNode$inboundSchema),
]);

/** @internal */
export type FigmaSubcanvasNode$Outbound =
  | FigmaBooleanOperationNode$Outbound
  | FigmaComponentNode$Outbound;

/** @internal */
export const FigmaSubcanvasNode$outboundSchema: z.ZodType<
  FigmaSubcanvasNode$Outbound,
  z.ZodTypeDef,
  FigmaSubcanvasNode
> = z.union([
  z.lazy(() => FigmaBooleanOperationNode$outboundSchema),
  z.lazy(() => FigmaComponentNode$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FigmaSubcanvasNode$ {
  /** @deprecated use `FigmaSubcanvasNode$inboundSchema` instead. */
  export const inboundSchema = FigmaSubcanvasNode$inboundSchema;
  /** @deprecated use `FigmaSubcanvasNode$outboundSchema` instead. */
  export const outboundSchema = FigmaSubcanvasNode$outboundSchema;
  /** @deprecated use `FigmaSubcanvasNode$Outbound` instead. */
  export type Outbound = FigmaSubcanvasNode$Outbound;
}

export function figmaSubcanvasNodeToJSON(
  figmaSubcanvasNode: FigmaSubcanvasNode,
): string {
  return JSON.stringify(
    FigmaSubcanvasNode$outboundSchema.parse(figmaSubcanvasNode),
  );
}

export function figmaSubcanvasNodeFromJSON(
  jsonString: string,
): SafeParseResult<FigmaSubcanvasNode, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FigmaSubcanvasNode$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FigmaSubcanvasNode' from JSON`,
  );
}
