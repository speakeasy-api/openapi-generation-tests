/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Represents a single heartbeat event
 */
export type HeartbeatEvent = {
    data: string;
    event?: "heartbeat" | undefined;
    retry?: number | undefined;
};

/** @internal */
export namespace HeartbeatEvent$ {
    export const inboundSchema: z.ZodType<HeartbeatEvent, z.ZodTypeDef, unknown> = z.object({
        data: z.string(),
        event: z.literal("heartbeat").optional(),
        retry: z.number().int().optional(),
    });

    export type Outbound = {
        data: string;
        event: "heartbeat";
        retry?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, HeartbeatEvent> = z.object({
        data: z.string(),
        event: z.literal("heartbeat").default("heartbeat" as const),
        retry: z.number().int().optional(),
    });
}
