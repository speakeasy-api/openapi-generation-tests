/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Slides = {
    items?: Array<string> | undefined;
    title: string;
    type: string;
};

export type Slideshow = {
    author: string;
    date: string;
    slides: Array<Slides>;
    title: string;
};

export type HttpBinSimpleJsonObject = {
    slideshow: Slideshow;
};

/** @internal */
export const Slides$inboundSchema: z.ZodType<Slides, z.ZodTypeDef, unknown> = z.object({
    items: z.array(z.string()).optional(),
    title: z.string(),
    type: z.string(),
});

/** @internal */
export type Slides$Outbound = {
    items?: Array<string> | undefined;
    title: string;
    type: string;
};

/** @internal */
export const Slides$outboundSchema: z.ZodType<Slides$Outbound, z.ZodTypeDef, Slides> = z.object({
    items: z.array(z.string()).optional(),
    title: z.string(),
    type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Slides$ {
    /** @deprecated use `Slides$inboundSchema` instead. */
    export const inboundSchema = Slides$inboundSchema;
    /** @deprecated use `Slides$outboundSchema` instead. */
    export const outboundSchema = Slides$outboundSchema;
    /** @deprecated use `Slides$Outbound` instead. */
    export type Outbound = Slides$Outbound;
}

/** @internal */
export const Slideshow$inboundSchema: z.ZodType<Slideshow, z.ZodTypeDef, unknown> = z.object({
    author: z.string(),
    date: z.string(),
    slides: z.array(z.lazy(() => Slides$inboundSchema)),
    title: z.string(),
});

/** @internal */
export type Slideshow$Outbound = {
    author: string;
    date: string;
    slides: Array<Slides$Outbound>;
    title: string;
};

/** @internal */
export const Slideshow$outboundSchema: z.ZodType<Slideshow$Outbound, z.ZodTypeDef, Slideshow> =
    z.object({
        author: z.string(),
        date: z.string(),
        slides: z.array(z.lazy(() => Slides$outboundSchema)),
        title: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Slideshow$ {
    /** @deprecated use `Slideshow$inboundSchema` instead. */
    export const inboundSchema = Slideshow$inboundSchema;
    /** @deprecated use `Slideshow$outboundSchema` instead. */
    export const outboundSchema = Slideshow$outboundSchema;
    /** @deprecated use `Slideshow$Outbound` instead. */
    export type Outbound = Slideshow$Outbound;
}

/** @internal */
export const HttpBinSimpleJsonObject$inboundSchema: z.ZodType<
    HttpBinSimpleJsonObject,
    z.ZodTypeDef,
    unknown
> = z.object({
    slideshow: z.lazy(() => Slideshow$inboundSchema),
});

/** @internal */
export type HttpBinSimpleJsonObject$Outbound = {
    slideshow: Slideshow$Outbound;
};

/** @internal */
export const HttpBinSimpleJsonObject$outboundSchema: z.ZodType<
    HttpBinSimpleJsonObject$Outbound,
    z.ZodTypeDef,
    HttpBinSimpleJsonObject
> = z.object({
    slideshow: z.lazy(() => Slideshow$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HttpBinSimpleJsonObject$ {
    /** @deprecated use `HttpBinSimpleJsonObject$inboundSchema` instead. */
    export const inboundSchema = HttpBinSimpleJsonObject$inboundSchema;
    /** @deprecated use `HttpBinSimpleJsonObject$outboundSchema` instead. */
    export const outboundSchema = HttpBinSimpleJsonObject$outboundSchema;
    /** @deprecated use `HttpBinSimpleJsonObject$Outbound` instead. */
    export type Outbound = HttpBinSimpleJsonObject$Outbound;
}
