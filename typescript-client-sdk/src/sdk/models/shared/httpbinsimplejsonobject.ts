/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Slides = {
  items?: Array<string> | undefined;
  title: string;
  type: string;
};

export type Slideshow = {
  author: string;
  date: string;
  slides: Array<Slides>;
  title: string;
};

export type HttpBinSimpleJsonObject = {
  slideshow: Slideshow;
};

/** @internal */
export const Slides$inboundSchema: z.ZodType<Slides, z.ZodTypeDef, unknown> = z
  .object({
    items: z.array(z.string()).optional(),
    title: z.string(),
    type: z.string(),
  });

/** @internal */
export type Slides$Outbound = {
  items?: Array<string> | undefined;
  title: string;
  type: string;
};

/** @internal */
export const Slides$outboundSchema: z.ZodType<
  Slides$Outbound,
  z.ZodTypeDef,
  Slides
> = z.object({
  items: z.array(z.string()).optional(),
  title: z.string(),
  type: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Slides$ {
  /** @deprecated use `Slides$inboundSchema` instead. */
  export const inboundSchema = Slides$inboundSchema;
  /** @deprecated use `Slides$outboundSchema` instead. */
  export const outboundSchema = Slides$outboundSchema;
  /** @deprecated use `Slides$Outbound` instead. */
  export type Outbound = Slides$Outbound;
}

export function slidesToJSON(slides: Slides): string {
  return JSON.stringify(Slides$outboundSchema.parse(slides));
}

export function slidesFromJSON(
  jsonString: string,
): SafeParseResult<Slides, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Slides$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Slides' from JSON`,
  );
}

/** @internal */
export const Slideshow$inboundSchema: z.ZodType<
  Slideshow,
  z.ZodTypeDef,
  unknown
> = z.object({
  author: z.string(),
  date: z.string(),
  slides: z.array(z.lazy(() => Slides$inboundSchema)),
  title: z.string(),
});

/** @internal */
export type Slideshow$Outbound = {
  author: string;
  date: string;
  slides: Array<Slides$Outbound>;
  title: string;
};

/** @internal */
export const Slideshow$outboundSchema: z.ZodType<
  Slideshow$Outbound,
  z.ZodTypeDef,
  Slideshow
> = z.object({
  author: z.string(),
  date: z.string(),
  slides: z.array(z.lazy(() => Slides$outboundSchema)),
  title: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Slideshow$ {
  /** @deprecated use `Slideshow$inboundSchema` instead. */
  export const inboundSchema = Slideshow$inboundSchema;
  /** @deprecated use `Slideshow$outboundSchema` instead. */
  export const outboundSchema = Slideshow$outboundSchema;
  /** @deprecated use `Slideshow$Outbound` instead. */
  export type Outbound = Slideshow$Outbound;
}

export function slideshowToJSON(slideshow: Slideshow): string {
  return JSON.stringify(Slideshow$outboundSchema.parse(slideshow));
}

export function slideshowFromJSON(
  jsonString: string,
): SafeParseResult<Slideshow, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Slideshow$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Slideshow' from JSON`,
  );
}

/** @internal */
export const HttpBinSimpleJsonObject$inboundSchema: z.ZodType<
  HttpBinSimpleJsonObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  slideshow: z.lazy(() => Slideshow$inboundSchema),
});

/** @internal */
export type HttpBinSimpleJsonObject$Outbound = {
  slideshow: Slideshow$Outbound;
};

/** @internal */
export const HttpBinSimpleJsonObject$outboundSchema: z.ZodType<
  HttpBinSimpleJsonObject$Outbound,
  z.ZodTypeDef,
  HttpBinSimpleJsonObject
> = z.object({
  slideshow: z.lazy(() => Slideshow$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HttpBinSimpleJsonObject$ {
  /** @deprecated use `HttpBinSimpleJsonObject$inboundSchema` instead. */
  export const inboundSchema = HttpBinSimpleJsonObject$inboundSchema;
  /** @deprecated use `HttpBinSimpleJsonObject$outboundSchema` instead. */
  export const outboundSchema = HttpBinSimpleJsonObject$outboundSchema;
  /** @deprecated use `HttpBinSimpleJsonObject$Outbound` instead. */
  export type Outbound = HttpBinSimpleJsonObject$Outbound;
}

export function httpBinSimpleJsonObjectToJSON(
  httpBinSimpleJsonObject: HttpBinSimpleJsonObject,
): string {
  return JSON.stringify(
    HttpBinSimpleJsonObject$outboundSchema.parse(httpBinSimpleJsonObject),
  );
}

export function httpBinSimpleJsonObjectFromJSON(
  jsonString: string,
): SafeParseResult<HttpBinSimpleJsonObject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HttpBinSimpleJsonObject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HttpBinSimpleJsonObject' from JSON`,
  );
}
