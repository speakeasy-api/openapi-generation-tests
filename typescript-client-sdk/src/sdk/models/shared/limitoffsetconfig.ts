/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LimitOffsetConfig = {
  limit?: number | undefined;
  offset?: number | undefined;
  page?: number | undefined;
};

/** @internal */
export const LimitOffsetConfig$inboundSchema: z.ZodType<
  LimitOffsetConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().int().optional(),
  offset: z.number().int().optional(),
  page: z.number().int().optional(),
});

/** @internal */
export type LimitOffsetConfig$Outbound = {
  limit?: number | undefined;
  offset?: number | undefined;
  page?: number | undefined;
};

/** @internal */
export const LimitOffsetConfig$outboundSchema: z.ZodType<
  LimitOffsetConfig$Outbound,
  z.ZodTypeDef,
  LimitOffsetConfig
> = z.object({
  limit: z.number().int().optional(),
  offset: z.number().int().optional(),
  page: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LimitOffsetConfig$ {
  /** @deprecated use `LimitOffsetConfig$inboundSchema` instead. */
  export const inboundSchema = LimitOffsetConfig$inboundSchema;
  /** @deprecated use `LimitOffsetConfig$outboundSchema` instead. */
  export const outboundSchema = LimitOffsetConfig$outboundSchema;
  /** @deprecated use `LimitOffsetConfig$Outbound` instead. */
  export type Outbound = LimitOffsetConfig$Outbound;
}

export function limitOffsetConfigToJSON(
  limitOffsetConfig: LimitOffsetConfig,
): string {
  return JSON.stringify(
    LimitOffsetConfig$outboundSchema.parse(limitOffsetConfig),
  );
}

export function limitOffsetConfigFromJSON(
  jsonString: string,
): SafeParseResult<LimitOffsetConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LimitOffsetConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LimitOffsetConfig' from JSON`,
  );
}
