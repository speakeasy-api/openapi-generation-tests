/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type LimitOffsetConfig = {
    limit?: number | undefined;
    offset?: number | undefined;
    page?: number | undefined;
};

/** @internal */
export const LimitOffsetConfig$inboundSchema: z.ZodType<LimitOffsetConfig, z.ZodTypeDef, unknown> =
    z.object({
        limit: z.number().int().optional(),
        offset: z.number().int().optional(),
        page: z.number().int().optional(),
    });

/** @internal */
export type LimitOffsetConfig$Outbound = {
    limit?: number | undefined;
    offset?: number | undefined;
    page?: number | undefined;
};

/** @internal */
export const LimitOffsetConfig$outboundSchema: z.ZodType<
    LimitOffsetConfig$Outbound,
    z.ZodTypeDef,
    LimitOffsetConfig
> = z.object({
    limit: z.number().int().optional(),
    offset: z.number().int().optional(),
    page: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LimitOffsetConfig$ {
    /** @deprecated use `LimitOffsetConfig$inboundSchema` instead. */
    export const inboundSchema = LimitOffsetConfig$inboundSchema;
    /** @deprecated use `LimitOffsetConfig$outboundSchema` instead. */
    export const outboundSchema = LimitOffsetConfig$outboundSchema;
    /** @deprecated use `LimitOffsetConfig$Outbound` instead. */
    export type Outbound = LimitOffsetConfig$Outbound;
}
