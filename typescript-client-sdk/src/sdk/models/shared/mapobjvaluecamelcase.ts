/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    SimpleObjectCamelCase,
    SimpleObjectCamelCase$inboundSchema,
    SimpleObjectCamelCase$Outbound,
    SimpleObjectCamelCase$outboundSchema,
} from "./simpleobjectcamelcase.js";
import * as z from "zod";

export type MapObjValueCamelCase = {
    json?: { [k: string]: SimpleObjectCamelCase } | undefined;
    required?: any | undefined;
};

/** @internal */
export const MapObjValueCamelCase$inboundSchema: z.ZodType<
    MapObjValueCamelCase,
    z.ZodTypeDef,
    unknown
> = z.object({
    json: z.record(SimpleObjectCamelCase$inboundSchema).optional(),
    required: z.any().optional(),
});

/** @internal */
export type MapObjValueCamelCase$Outbound = {
    json?: { [k: string]: SimpleObjectCamelCase$Outbound } | undefined;
    required?: any | undefined;
};

/** @internal */
export const MapObjValueCamelCase$outboundSchema: z.ZodType<
    MapObjValueCamelCase$Outbound,
    z.ZodTypeDef,
    MapObjValueCamelCase
> = z.object({
    json: z.record(SimpleObjectCamelCase$outboundSchema).optional(),
    required: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MapObjValueCamelCase$ {
    /** @deprecated use `MapObjValueCamelCase$inboundSchema` instead. */
    export const inboundSchema = MapObjValueCamelCase$inboundSchema;
    /** @deprecated use `MapObjValueCamelCase$outboundSchema` instead. */
    export const outboundSchema = MapObjValueCamelCase$outboundSchema;
    /** @deprecated use `MapObjValueCamelCase$Outbound` instead. */
    export type Outbound = MapObjValueCamelCase$Outbound;
}
