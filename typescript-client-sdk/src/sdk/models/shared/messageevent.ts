/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type MessageEvent = {
    content: string;
};

/** @internal */
export const MessageEvent$inboundSchema: z.ZodType<MessageEvent, z.ZodTypeDef, unknown> = z.object({
    content: z.string(),
});

/** @internal */
export type MessageEvent$Outbound = {
    content: string;
};

/** @internal */
export const MessageEvent$outboundSchema: z.ZodType<
    MessageEvent$Outbound,
    z.ZodTypeDef,
    MessageEvent
> = z.object({
    content: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageEvent$ {
    /** @deprecated use `MessageEvent$inboundSchema` instead. */
    export const inboundSchema = MessageEvent$inboundSchema;
    /** @deprecated use `MessageEvent$outboundSchema` instead. */
    export const outboundSchema = MessageEvent$outboundSchema;
    /** @deprecated use `MessageEvent$Outbound` instead. */
    export type Outbound = MessageEvent$Outbound;
}
