/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StronglyTypedOneOfObject,
  StronglyTypedOneOfObject$inboundSchema,
  StronglyTypedOneOfObject$Outbound,
  StronglyTypedOneOfObject$outboundSchema,
} from "./stronglytypedoneofobject.js";

export type NestedArrayOfDiscriminatedUnions = {
  nestedArray: Array<Array<StronglyTypedOneOfObject>>;
};

/** @internal */
export const NestedArrayOfDiscriminatedUnions$inboundSchema: z.ZodType<
  NestedArrayOfDiscriminatedUnions,
  z.ZodTypeDef,
  unknown
> = z.object({
  nestedArray: z.array(z.array(StronglyTypedOneOfObject$inboundSchema)),
});

/** @internal */
export type NestedArrayOfDiscriminatedUnions$Outbound = {
  nestedArray: Array<Array<StronglyTypedOneOfObject$Outbound>>;
};

/** @internal */
export const NestedArrayOfDiscriminatedUnions$outboundSchema: z.ZodType<
  NestedArrayOfDiscriminatedUnions$Outbound,
  z.ZodTypeDef,
  NestedArrayOfDiscriminatedUnions
> = z.object({
  nestedArray: z.array(z.array(StronglyTypedOneOfObject$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NestedArrayOfDiscriminatedUnions$ {
  /** @deprecated use `NestedArrayOfDiscriminatedUnions$inboundSchema` instead. */
  export const inboundSchema = NestedArrayOfDiscriminatedUnions$inboundSchema;
  /** @deprecated use `NestedArrayOfDiscriminatedUnions$outboundSchema` instead. */
  export const outboundSchema = NestedArrayOfDiscriminatedUnions$outboundSchema;
  /** @deprecated use `NestedArrayOfDiscriminatedUnions$Outbound` instead. */
  export type Outbound = NestedArrayOfDiscriminatedUnions$Outbound;
}

export function nestedArrayOfDiscriminatedUnionsToJSON(
  nestedArrayOfDiscriminatedUnions: NestedArrayOfDiscriminatedUnions,
): string {
  return JSON.stringify(
    NestedArrayOfDiscriminatedUnions$outboundSchema.parse(
      nestedArrayOfDiscriminatedUnions,
    ),
  );
}

export function nestedArrayOfDiscriminatedUnionsFromJSON(
  jsonString: string,
): SafeParseResult<NestedArrayOfDiscriminatedUnions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NestedArrayOfDiscriminatedUnions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NestedArrayOfDiscriminatedUnions' from JSON`,
  );
}
