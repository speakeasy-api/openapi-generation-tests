/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type NullableObject = {
  optional?: string | undefined;
  required: number;
};

/** @internal */
export const NullableObject$inboundSchema: z.ZodType<
  NullableObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  optional: z.string().optional(),
  required: z.number().int(),
});

/** @internal */
export type NullableObject$Outbound = {
  optional?: string | undefined;
  required: number;
};

/** @internal */
export const NullableObject$outboundSchema: z.ZodType<
  NullableObject$Outbound,
  z.ZodTypeDef,
  NullableObject
> = z.object({
  optional: z.string().optional(),
  required: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableObject$ {
  /** @deprecated use `NullableObject$inboundSchema` instead. */
  export const inboundSchema = NullableObject$inboundSchema;
  /** @deprecated use `NullableObject$outboundSchema` instead. */
  export const outboundSchema = NullableObject$outboundSchema;
  /** @deprecated use `NullableObject$Outbound` instead. */
  export type Outbound = NullableObject$Outbound;
}
