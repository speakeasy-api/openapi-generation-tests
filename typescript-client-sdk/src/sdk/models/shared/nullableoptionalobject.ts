/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type NullableOptionalObject = {
  optional?: string | undefined;
  required: number;
};

/** @internal */
export const NullableOptionalObject$inboundSchema: z.ZodType<
  NullableOptionalObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  optional: z.string().optional(),
  required: z.number().int(),
});

/** @internal */
export type NullableOptionalObject$Outbound = {
  optional?: string | undefined;
  required: number;
};

/** @internal */
export const NullableOptionalObject$outboundSchema: z.ZodType<
  NullableOptionalObject$Outbound,
  z.ZodTypeDef,
  NullableOptionalObject
> = z.object({
  optional: z.string().optional(),
  required: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NullableOptionalObject$ {
  /** @deprecated use `NullableOptionalObject$inboundSchema` instead. */
  export const inboundSchema = NullableOptionalObject$inboundSchema;
  /** @deprecated use `NullableOptionalObject$outboundSchema` instead. */
  export const outboundSchema = NullableOptionalObject$outboundSchema;
  /** @deprecated use `NullableOptionalObject$Outbound` instead. */
  export type Outbound = NullableOptionalObject$Outbound;
}
