/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type NullableOptionalObject = {
    optional?: string | undefined;
    required: number;
};

/** @internal */
export namespace NullableOptionalObject$ {
    export type Inbound = {
        optional?: string | undefined;
        required: number;
    };

    export const inboundSchema: z.ZodType<NullableOptionalObject, z.ZodTypeDef, Inbound> = z
        .object({
            optional: z.string().optional(),
            required: z.number().int(),
        })
        .transform((v) => {
            return {
                ...(v.optional === undefined ? null : { optional: v.optional }),
                required: v.required,
            };
        });

    export type Outbound = {
        optional?: string | undefined;
        required: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NullableOptionalObject> = z
        .object({
            optional: z.string().optional(),
            required: z.number().int(),
        })
        .transform((v) => {
            return {
                ...(v.optional === undefined ? null : { optional: v.optional }),
                required: v.required,
            };
        });
}
