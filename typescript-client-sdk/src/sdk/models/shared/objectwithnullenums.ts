/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ObjectWithNullEnums = {
    nullEnum?: null | undefined;
    optNullEnum?: null | undefined;
};

/** @internal */
export namespace ObjectWithNullEnums$ {
    export type Inbound = {
        nullEnum?: null;
        optNullEnum?: null;
    };

    export const inboundSchema: z.ZodType<ObjectWithNullEnums, z.ZodTypeDef, Inbound> = z
        .object({
            nullEnum: z.literal(null),
            optNullEnum: z.literal(null),
        })
        .transform((v) => {
            return {
                ...(v.nullEnum === undefined ? null : { nullEnum: v.nullEnum }),
                ...(v.optNullEnum === undefined ? null : { optNullEnum: v.optNullEnum }),
            };
        });

    export type Outbound = {
        nullEnum: null;
        optNullEnum: null;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ObjectWithNullEnums> = z
        .object({
            nullEnum: z.literal(null).default(null),
            optNullEnum: z.literal(null).default(null),
        })
        .transform((v) => {
            return {
                nullEnum: v.nullEnum,
                optNullEnum: v.optNullEnum,
            };
        });
}
