/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ObjectWithNullEnums = {
    nullEnum?: null | undefined;
    optNullEnum?: null | undefined;
};

/** @internal */
export const ObjectWithNullEnums$inboundSchema: z.ZodType<
    ObjectWithNullEnums,
    z.ZodTypeDef,
    unknown
> = z.object({
    nullEnum: z.literal(null),
    optNullEnum: z.literal(null),
});

/** @internal */
export type ObjectWithNullEnums$Outbound = {
    nullEnum: null;
    optNullEnum: null;
};

/** @internal */
export const ObjectWithNullEnums$outboundSchema: z.ZodType<
    ObjectWithNullEnums$Outbound,
    z.ZodTypeDef,
    ObjectWithNullEnums
> = z.object({
    nullEnum: z.literal(null).default(null),
    optNullEnum: z.literal(null).default(null),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ObjectWithNullEnums$ {
    /** @deprecated use `ObjectWithNullEnums$inboundSchema` instead. */
    export const inboundSchema = ObjectWithNullEnums$inboundSchema;
    /** @deprecated use `ObjectWithNullEnums$outboundSchema` instead. */
    export const outboundSchema = ObjectWithNullEnums$outboundSchema;
    /** @deprecated use `ObjectWithNullEnums$Outbound` instead. */
    export type Outbound = ObjectWithNullEnums$Outbound;
}
