/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ObjWithAnyAdditionalProperties = {
  normalField?: string | undefined;
  additionalProperties?: { [k: string]: any };
};

/** @internal */
export const ObjWithAnyAdditionalProperties$inboundSchema: z.ZodType<
  ObjWithAnyAdditionalProperties,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    normalField: z.string().optional(),
  }).catchall(z.any()),
  "additionalProperties",
  true,
);

/** @internal */
export type ObjWithAnyAdditionalProperties$Outbound = {
  normalField?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const ObjWithAnyAdditionalProperties$outboundSchema: z.ZodType<
  ObjWithAnyAdditionalProperties$Outbound,
  z.ZodTypeDef,
  ObjWithAnyAdditionalProperties
> = z.object({
  additionalProperties: z.record(z.any()),

  normalField: z.string().optional(),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ObjWithAnyAdditionalProperties$ {
  /** @deprecated use `ObjWithAnyAdditionalProperties$inboundSchema` instead. */
  export const inboundSchema = ObjWithAnyAdditionalProperties$inboundSchema;
  /** @deprecated use `ObjWithAnyAdditionalProperties$outboundSchema` instead. */
  export const outboundSchema = ObjWithAnyAdditionalProperties$outboundSchema;
  /** @deprecated use `ObjWithAnyAdditionalProperties$Outbound` instead. */
  export type Outbound = ObjWithAnyAdditionalProperties$Outbound;
}

export function objWithAnyAdditionalPropertiesToJSON(
  objWithAnyAdditionalProperties: ObjWithAnyAdditionalProperties,
): string {
  return JSON.stringify(
    ObjWithAnyAdditionalProperties$outboundSchema.parse(
      objWithAnyAdditionalProperties,
    ),
  );
}

export function objWithAnyAdditionalPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<ObjWithAnyAdditionalProperties, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ObjWithAnyAdditionalProperties$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ObjWithAnyAdditionalProperties' from JSON`,
  );
}
