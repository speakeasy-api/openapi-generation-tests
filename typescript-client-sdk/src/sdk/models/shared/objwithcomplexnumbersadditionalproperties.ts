/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ObjWithComplexNumbersAdditionalProperties = {
  normalField: string;
  additionalProperties: { [k: string]: bigint };
};

/** @internal */
export const ObjWithComplexNumbersAdditionalProperties$inboundSchema: z.ZodType<
  ObjWithComplexNumbersAdditionalProperties,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    normalField: z.string(),
  }).catchall(z.string().transform(v => BigInt(v))),
  "additionalProperties",
);

/** @internal */
export type ObjWithComplexNumbersAdditionalProperties$Outbound = {
  normalField: string;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const ObjWithComplexNumbersAdditionalProperties$outboundSchema:
  z.ZodType<
    ObjWithComplexNumbersAdditionalProperties$Outbound,
    z.ZodTypeDef,
    ObjWithComplexNumbersAdditionalProperties
  > = z.object({
    additionalProperties: z.record(z.bigint().transform(v => `${v}`)),

    normalField: z.string(),
  }).transform((v) => {
    return {
      ...v.additionalProperties,
      ...remap$(v, {
        additionalProperties: null,
      }),
    };
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ObjWithComplexNumbersAdditionalProperties$ {
  /** @deprecated use `ObjWithComplexNumbersAdditionalProperties$inboundSchema` instead. */
  export const inboundSchema =
    ObjWithComplexNumbersAdditionalProperties$inboundSchema;
  /** @deprecated use `ObjWithComplexNumbersAdditionalProperties$outboundSchema` instead. */
  export const outboundSchema =
    ObjWithComplexNumbersAdditionalProperties$outboundSchema;
  /** @deprecated use `ObjWithComplexNumbersAdditionalProperties$Outbound` instead. */
  export type Outbound = ObjWithComplexNumbersAdditionalProperties$Outbound;
}

export function objWithComplexNumbersAdditionalPropertiesToJSON(
  objWithComplexNumbersAdditionalProperties:
    ObjWithComplexNumbersAdditionalProperties,
): string {
  return JSON.stringify(
    ObjWithComplexNumbersAdditionalProperties$outboundSchema.parse(
      objWithComplexNumbersAdditionalProperties,
    ),
  );
}

export function objWithComplexNumbersAdditionalPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<
  ObjWithComplexNumbersAdditionalProperties,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ObjWithComplexNumbersAdditionalProperties$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ObjWithComplexNumbersAdditionalProperties' from JSON`,
  );
}
