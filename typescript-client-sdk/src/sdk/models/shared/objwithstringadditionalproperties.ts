/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$ } from "../../../lib/schemas.js";

export type ObjWithStringAdditionalProperties = {
  normalField: string;
  additionalProperties: { [k: string]: string };
};

/** @internal */
export const ObjWithStringAdditionalProperties$inboundSchema: z.ZodType<
  ObjWithStringAdditionalProperties,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    normalField: z.string(),
  }).catchall(z.string()),
  "additionalProperties",
);

/** @internal */
export type ObjWithStringAdditionalProperties$Outbound = {
  normalField: string;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const ObjWithStringAdditionalProperties$outboundSchema: z.ZodType<
  ObjWithStringAdditionalProperties$Outbound,
  z.ZodTypeDef,
  ObjWithStringAdditionalProperties
> = z.object({
  additionalProperties: z.record(z.string()),

  normalField: z.string(),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ObjWithStringAdditionalProperties$ {
  /** @deprecated use `ObjWithStringAdditionalProperties$inboundSchema` instead. */
  export const inboundSchema = ObjWithStringAdditionalProperties$inboundSchema;
  /** @deprecated use `ObjWithStringAdditionalProperties$outboundSchema` instead. */
  export const outboundSchema =
    ObjWithStringAdditionalProperties$outboundSchema;
  /** @deprecated use `ObjWithStringAdditionalProperties$Outbound` instead. */
  export type Outbound = ObjWithStringAdditionalProperties$Outbound;
}
