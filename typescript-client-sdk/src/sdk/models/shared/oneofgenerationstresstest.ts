/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type OneOfFromArrayOfTypes = string | number;

export enum Two {
    Latest = "latest",
}

export type OneOfSameType = string | Two;

export type OneOfGenerationStressTest = {
    any?: any | undefined;
    nullableAny?: any | null | undefined;
    oneOfFromArrayOfTypes: string | number | null;
    oneOfSameType: string | Two | null;
};

/** @internal */
export namespace OneOfFromArrayOfTypes$ {
    export const inboundSchema: z.ZodType<OneOfFromArrayOfTypes, z.ZodTypeDef, unknown> = z.union([
        z.string(),
        z.number().int(),
    ]);

    export type Outbound = string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OneOfFromArrayOfTypes> = z.union(
        [z.string(), z.number().int()]
    );
}

/** @internal */
export namespace Two$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Two> = z.nativeEnum(Two);
    export const outboundSchema: z.ZodNativeEnum<typeof Two> = inboundSchema;
}

/** @internal */
export namespace OneOfSameType$ {
    export const inboundSchema: z.ZodType<OneOfSameType, z.ZodTypeDef, unknown> = z.union([
        z.string(),
        Two$.inboundSchema,
    ]);

    export type Outbound = string | string;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OneOfSameType> = z.union([
        z.string(),
        Two$.outboundSchema,
    ]);
}

/** @internal */
export namespace OneOfGenerationStressTest$ {
    export const inboundSchema: z.ZodType<OneOfGenerationStressTest, z.ZodTypeDef, unknown> =
        z.object({
            any: z.any().optional(),
            nullableAny: z.nullable(z.any()).optional(),
            oneOfFromArrayOfTypes: z.nullable(z.union([z.string(), z.number().int()])),
            oneOfSameType: z.nullable(z.union([z.string(), Two$.inboundSchema])),
        });

    export type Outbound = {
        any?: any | undefined;
        nullableAny?: any | null | undefined;
        oneOfFromArrayOfTypes: string | number | null;
        oneOfSameType: string | string | null;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OneOfGenerationStressTest> =
        z.object({
            any: z.any().optional(),
            nullableAny: z.nullable(z.any()).optional(),
            oneOfFromArrayOfTypes: z.nullable(z.union([z.string(), z.number().int()])),
            oneOfSameType: z.nullable(z.union([z.string(), Two$.outboundSchema])),
        });
}
