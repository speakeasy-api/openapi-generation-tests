/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type OneOfPrimitives = boolean | string;

/** @internal */
export const OneOfPrimitives$inboundSchema: z.ZodType<OneOfPrimitives, z.ZodTypeDef, unknown> =
    z.union([z.boolean(), z.string()]);

/** @internal */
export type OneOfPrimitives$Outbound = boolean | string;

/** @internal */
export const OneOfPrimitives$outboundSchema: z.ZodType<
    OneOfPrimitives$Outbound,
    z.ZodTypeDef,
    OneOfPrimitives
> = z.union([z.boolean(), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneOfPrimitives$ {
    /** @deprecated use `OneOfPrimitives$inboundSchema` instead. */
    export const inboundSchema = OneOfPrimitives$inboundSchema;
    /** @deprecated use `OneOfPrimitives$outboundSchema` instead. */
    export const outboundSchema = OneOfPrimitives$outboundSchema;
    /** @deprecated use `OneOfPrimitives$Outbound` instead. */
    export type Outbound = OneOfPrimitives$Outbound;
}
