/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type PrimitiveTypeUnion = string | number | number | number | number | boolean;

/** @internal */
export namespace PrimitiveTypeUnion$ {
    export const inboundSchema: z.ZodType<PrimitiveTypeUnion, z.ZodTypeDef, unknown> = z.union([
        z.string(),
        z.number().int(),
        z.number().int(),
        z.number(),
        z.number(),
        z.boolean(),
    ]);

    export type Outbound = string | number | number | number | number | boolean;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PrimitiveTypeUnion> = z.union([
        z.string(),
        z.number().int(),
        z.number().int(),
        z.number(),
        z.number(),
        z.boolean(),
    ]);
}
