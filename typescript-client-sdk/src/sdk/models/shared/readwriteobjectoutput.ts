/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type ReadWriteObjectOutput = {
    num3: number;
    sum: number;
};

/** @internal */
export const ReadWriteObjectOutput$inboundSchema: z.ZodType<
    ReadWriteObjectOutput,
    z.ZodTypeDef,
    unknown
> = z.object({
    num3: z.number().int(),
    sum: z.number().int(),
});

/** @internal */
export type ReadWriteObjectOutput$Outbound = {
    num3: number;
    sum: number;
};

/** @internal */
export const ReadWriteObjectOutput$outboundSchema: z.ZodType<
    ReadWriteObjectOutput$Outbound,
    z.ZodTypeDef,
    ReadWriteObjectOutput
> = z.object({
    num3: z.number().int(),
    sum: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReadWriteObjectOutput$ {
    /** @deprecated use `ReadWriteObjectOutput$inboundSchema` instead. */
    export const inboundSchema = ReadWriteObjectOutput$inboundSchema;
    /** @deprecated use `ReadWriteObjectOutput$outboundSchema` instead. */
    export const outboundSchema = ReadWriteObjectOutput$outboundSchema;
    /** @deprecated use `ReadWriteObjectOutput$Outbound` instead. */
    export type Outbound = ReadWriteObjectOutput$Outbound;
}
