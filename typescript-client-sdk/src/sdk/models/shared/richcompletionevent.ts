/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    RichCompletionEventData,
    RichCompletionEventData$inboundSchema,
    RichCompletionEventData$Outbound,
    RichCompletionEventData$outboundSchema,
} from "./richcompletioneventdata.js";
import * as z from "zod";

/**
 * Represents a single event in a completion stream
 */
export type RichCompletionEvent = {
    data: RichCompletionEventData;
    event?: "completion" | undefined;
    id: string;
};

/** @internal */
export const RichCompletionEvent$inboundSchema: z.ZodType<
    RichCompletionEvent,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z
        .string()
        .transform((v, ctx) => {
            try {
                return JSON.parse(v);
            } catch (err) {
                ctx.addIssue({ code: z.ZodIssueCode.custom, message: `malformed json: ${err}` });
                return z.NEVER;
            }
        })
        .pipe(RichCompletionEventData$inboundSchema),
    event: z.literal("completion").optional(),
    id: z.string(),
});

/** @internal */
export type RichCompletionEvent$Outbound = {
    data: RichCompletionEventData$Outbound;
    event: "completion";
    id: string;
};

/** @internal */
export const RichCompletionEvent$outboundSchema: z.ZodType<
    RichCompletionEvent$Outbound,
    z.ZodTypeDef,
    RichCompletionEvent
> = z.object({
    data: RichCompletionEventData$outboundSchema,
    event: z.literal("completion").default("completion" as const),
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RichCompletionEvent$ {
    /** @deprecated use `RichCompletionEvent$inboundSchema` instead. */
    export const inboundSchema = RichCompletionEvent$inboundSchema;
    /** @deprecated use `RichCompletionEvent$outboundSchema` instead. */
    export const outboundSchema = RichCompletionEvent$outboundSchema;
    /** @deprecated use `RichCompletionEvent$Outbound` instead. */
    export type Outbound = RichCompletionEvent$Outbound;
}
