/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SchemeBasicAuth = {
    password: string;
    username: string;
};

/** @internal */
export namespace SchemeBasicAuth$ {
    export const inboundSchema: z.ZodType<SchemeBasicAuth, z.ZodTypeDef, unknown> = z
        .object({
            Password: z.string(),
            Username: z.string(),
        })
        .transform((v) => {
            return {
                password: v.Password,
                username: v.Username,
            };
        });

    export type Outbound = {
        Password: string;
        Username: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SchemeBasicAuth> = z
        .object({
            password: z.string(),
            username: z.string(),
        })
        .transform((v) => {
            return {
                Password: v.password,
                Username: v.username,
            };
        });
}
