/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Represents the final event in an event stream
 */
export type SentinelEvent = {
  data?: "[DONE]" | undefined;
};

/** @internal */
export const SentinelEvent$inboundSchema: z.ZodType<
  SentinelEvent,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.literal("[DONE]").optional(),
});

/** @internal */
export type SentinelEvent$Outbound = {
  data: "[DONE]";
};

/** @internal */
export const SentinelEvent$outboundSchema: z.ZodType<
  SentinelEvent$Outbound,
  z.ZodTypeDef,
  SentinelEvent
> = z.object({
  data: z.literal("[DONE]").default("[DONE]" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SentinelEvent$ {
  /** @deprecated use `SentinelEvent$inboundSchema` instead. */
  export const inboundSchema = SentinelEvent$inboundSchema;
  /** @deprecated use `SentinelEvent$outboundSchema` instead. */
  export const outboundSchema = SentinelEvent$outboundSchema;
  /** @deprecated use `SentinelEvent$Outbound` instead. */
  export type Outbound = SentinelEvent$Outbound;
}
