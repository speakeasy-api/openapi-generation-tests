/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const TaggedObject2Tag = {
    Tag2: "tag2",
} as const;
export type TaggedObject2Tag = ClosedEnum<typeof TaggedObject2Tag>;

export type TaggedObject2 = {
    profileId: string;
    tag: TaggedObject2Tag;
};

/** @internal */
export namespace TaggedObject2Tag$ {
    export const inboundSchema: z.ZodNativeEnum<typeof TaggedObject2Tag> =
        z.nativeEnum(TaggedObject2Tag);
    export const outboundSchema: z.ZodNativeEnum<typeof TaggedObject2Tag> = inboundSchema;
}

/** @internal */
export namespace TaggedObject2$ {
    export const inboundSchema: z.ZodType<TaggedObject2, z.ZodTypeDef, unknown> = z.object({
        profileId: z.string(),
        tag: TaggedObject2Tag$.inboundSchema,
    });

    export type Outbound = {
        profileId: string;
        tag: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaggedObject2> = z.object({
        profileId: z.string(),
        tag: TaggedObject2Tag$.outboundSchema,
    });
}
