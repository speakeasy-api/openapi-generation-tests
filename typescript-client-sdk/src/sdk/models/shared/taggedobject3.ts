/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type TaggedObject3 = {
    phone: string;
    tag: "tag3";
};

/** @internal */
export namespace TaggedObject3$ {
    export type Inbound = {
        phone: string;
        tag: "tag3";
    };

    export const inboundSchema: z.ZodType<TaggedObject3, z.ZodTypeDef, Inbound> = z
        .object({
            phone: z.string(),
            tag: z.literal("tag3"),
        })
        .transform((v) => {
            return {
                phone: v.phone,
                tag: v.tag,
            };
        });

    export type Outbound = {
        phone: string;
        tag: "tag3";
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaggedObject3> = z
        .object({
            phone: z.string(),
            tag: z.literal("tag3"),
        })
        .transform((v) => {
            return {
                phone: v.phone,
                tag: v.tag,
            };
        });
}
