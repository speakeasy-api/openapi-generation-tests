/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Theme, Theme$inboundSchema, Theme$Outbound, Theme$outboundSchema } from "./theme.js";
import * as z from "zod";

export type ThemeResponse = {
    json: Theme;
};

/** @internal */
export const ThemeResponse$inboundSchema: z.ZodType<ThemeResponse, z.ZodTypeDef, unknown> =
    z.object({
        json: Theme$inboundSchema,
    });

/** @internal */
export type ThemeResponse$Outbound = {
    json: Theme$Outbound;
};

/** @internal */
export const ThemeResponse$outboundSchema: z.ZodType<
    ThemeResponse$Outbound,
    z.ZodTypeDef,
    ThemeResponse
> = z.object({
    json: Theme$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThemeResponse$ {
    /** @deprecated use `ThemeResponse$inboundSchema` instead. */
    export const inboundSchema = ThemeResponse$inboundSchema;
    /** @deprecated use `ThemeResponse$outboundSchema` instead. */
    export const outboundSchema = ThemeResponse$outboundSchema;
    /** @deprecated use `ThemeResponse$Outbound` instead. */
    export type Outbound = ThemeResponse$Outbound;
}
