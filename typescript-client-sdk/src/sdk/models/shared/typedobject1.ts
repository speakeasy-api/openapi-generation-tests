/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const TypedObject1Type = {
    Obj1: "obj1",
} as const;
export type TypedObject1Type = ClosedEnum<typeof TypedObject1Type>;

export type TypedObject1 = {
    type: TypedObject1Type;
    value: string;
};

/** @internal */
export const TypedObject1Type$inboundSchema: z.ZodNativeEnum<typeof TypedObject1Type> =
    z.nativeEnum(TypedObject1Type);

/** @internal */
export const TypedObject1Type$outboundSchema: z.ZodNativeEnum<typeof TypedObject1Type> =
    TypedObject1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TypedObject1Type$ {
    /** @deprecated use `TypedObject1Type$inboundSchema` instead. */
    export const inboundSchema = TypedObject1Type$inboundSchema;
    /** @deprecated use `TypedObject1Type$outboundSchema` instead. */
    export const outboundSchema = TypedObject1Type$outboundSchema;
}

/** @internal */
export const TypedObject1$inboundSchema: z.ZodType<TypedObject1, z.ZodTypeDef, unknown> = z.object({
    type: TypedObject1Type$inboundSchema,
    value: z.string(),
});

/** @internal */
export type TypedObject1$Outbound = {
    type: string;
    value: string;
};

/** @internal */
export const TypedObject1$outboundSchema: z.ZodType<
    TypedObject1$Outbound,
    z.ZodTypeDef,
    TypedObject1
> = z.object({
    type: TypedObject1Type$outboundSchema,
    value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TypedObject1$ {
    /** @deprecated use `TypedObject1$inboundSchema` instead. */
    export const inboundSchema = TypedObject1$inboundSchema;
    /** @deprecated use `TypedObject1$outboundSchema` instead. */
    export const outboundSchema = TypedObject1$outboundSchema;
    /** @deprecated use `TypedObject1$Outbound` instead. */
    export type Outbound = TypedObject1$Outbound;
}
