/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { TypedObject1, TypedObject1$ } from "./typedobject1";
import { TypedObject2, TypedObject2$ } from "./typedobject2";
import * as z from "zod";

export type TypedObjectNullableOneOf = TypedObject1 | TypedObject2;

/** @internal */
export namespace TypedObjectNullableOneOf$ {
    export const inboundSchema: z.ZodType<TypedObjectNullableOneOf, z.ZodTypeDef, unknown> =
        z.union([TypedObject1$.inboundSchema, TypedObject2$.inboundSchema]);

    export type Outbound = TypedObject1$.Outbound | TypedObject2$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TypedObjectNullableOneOf> =
        z.union([TypedObject1$.outboundSchema, TypedObject2$.outboundSchema]);
}
