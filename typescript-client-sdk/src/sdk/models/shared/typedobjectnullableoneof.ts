/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  TypedObject1,
  TypedObject1$inboundSchema,
  TypedObject1$Outbound,
  TypedObject1$outboundSchema,
} from "./typedobject1.js";
import {
  TypedObject2,
  TypedObject2$inboundSchema,
  TypedObject2$Outbound,
  TypedObject2$outboundSchema,
} from "./typedobject2.js";

export type TypedObjectNullableOneOf = TypedObject1 | TypedObject2;

/** @internal */
export const TypedObjectNullableOneOf$inboundSchema: z.ZodType<
  TypedObjectNullableOneOf,
  z.ZodTypeDef,
  unknown
> = z.union([TypedObject1$inboundSchema, TypedObject2$inboundSchema]);

/** @internal */
export type TypedObjectNullableOneOf$Outbound =
  | TypedObject1$Outbound
  | TypedObject2$Outbound;

/** @internal */
export const TypedObjectNullableOneOf$outboundSchema: z.ZodType<
  TypedObjectNullableOneOf$Outbound,
  z.ZodTypeDef,
  TypedObjectNullableOneOf
> = z.union([TypedObject1$outboundSchema, TypedObject2$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TypedObjectNullableOneOf$ {
  /** @deprecated use `TypedObjectNullableOneOf$inboundSchema` instead. */
  export const inboundSchema = TypedObjectNullableOneOf$inboundSchema;
  /** @deprecated use `TypedObjectNullableOneOf$outboundSchema` instead. */
  export const outboundSchema = TypedObjectNullableOneOf$outboundSchema;
  /** @deprecated use `TypedObjectNullableOneOf$Outbound` instead. */
  export type Outbound = TypedObjectNullableOneOf$Outbound;
}
