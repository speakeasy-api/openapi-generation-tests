/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UnionOfArrays = {
    foo: string;
};

/** @internal */
export const UnionOfArrays$inboundSchema: z.ZodType<UnionOfArrays, z.ZodTypeDef, unknown> =
    z.object({
        foo: z.string(),
    });

/** @internal */
export type UnionOfArrays$Outbound = {
    foo: string;
};

/** @internal */
export const UnionOfArrays$outboundSchema: z.ZodType<
    UnionOfArrays$Outbound,
    z.ZodTypeDef,
    UnionOfArrays
> = z.object({
    foo: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnionOfArrays$ {
    /** @deprecated use `UnionOfArrays$inboundSchema` instead. */
    export const inboundSchema = UnionOfArrays$inboundSchema;
    /** @deprecated use `UnionOfArrays$outboundSchema` instead. */
    export const outboundSchema = UnionOfArrays$outboundSchema;
    /** @deprecated use `UnionOfArrays$Outbound` instead. */
    export type Outbound = UnionOfArrays$Outbound;
}
