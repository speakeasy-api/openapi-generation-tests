/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type UnsupportedEnums = {
    booleanEnum: boolean;
    numberEnum: number;
};

/** @internal */
export namespace UnsupportedEnums$ {
    export type Inbound = {
        booleanEnum: boolean;
        numberEnum: number;
    };

    export const inboundSchema: z.ZodType<UnsupportedEnums, z.ZodTypeDef, Inbound> = z
        .object({
            booleanEnum: z.boolean(),
            numberEnum: z.number(),
        })
        .transform((v) => {
            return {
                booleanEnum: v.booleanEnum,
                numberEnum: v.numberEnum,
            };
        });

    export type Outbound = {
        booleanEnum: boolean;
        numberEnum: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UnsupportedEnums> = z
        .object({
            booleanEnum: z.boolean(),
            numberEnum: z.number(),
        })
        .transform((v) => {
            return {
                booleanEnum: v.booleanEnum,
                numberEnum: v.numberEnum,
            };
        });
}
