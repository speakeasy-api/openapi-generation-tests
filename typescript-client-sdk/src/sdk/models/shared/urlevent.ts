/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UrlEvent = {
    url: string;
};

/** @internal */
export const UrlEvent$inboundSchema: z.ZodType<UrlEvent, z.ZodTypeDef, unknown> = z.object({
    url: z.string(),
});

/** @internal */
export type UrlEvent$Outbound = {
    url: string;
};

/** @internal */
export const UrlEvent$outboundSchema: z.ZodType<UrlEvent$Outbound, z.ZodTypeDef, UrlEvent> =
    z.object({
        url: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UrlEvent$ {
    /** @deprecated use `UrlEvent$inboundSchema` instead. */
    export const inboundSchema = UrlEvent$inboundSchema;
    /** @deprecated use `UrlEvent$outboundSchema` instead. */
    export const outboundSchema = UrlEvent$outboundSchema;
    /** @deprecated use `UrlEvent$Outbound` instead. */
    export type Outbound = UrlEvent$Outbound;
}
