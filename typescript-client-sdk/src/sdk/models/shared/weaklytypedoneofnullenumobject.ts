/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DeepObject,
  DeepObject$inboundSchema,
  DeepObject$Outbound,
  DeepObject$outboundSchema,
} from "./deepobject.js";
import {
  SimpleObject,
  SimpleObject$inboundSchema,
  SimpleObject$Outbound,
  SimpleObject$outboundSchema,
} from "./simpleobject.js";

export type WeaklyTypedOneOfNullEnumObject = DeepObject | SimpleObject;

/** @internal */
export const WeaklyTypedOneOfNullEnumObject$inboundSchema: z.ZodType<
  WeaklyTypedOneOfNullEnumObject,
  z.ZodTypeDef,
  unknown
> = z.union([DeepObject$inboundSchema, SimpleObject$inboundSchema]);

/** @internal */
export type WeaklyTypedOneOfNullEnumObject$Outbound =
  | DeepObject$Outbound
  | SimpleObject$Outbound;

/** @internal */
export const WeaklyTypedOneOfNullEnumObject$outboundSchema: z.ZodType<
  WeaklyTypedOneOfNullEnumObject$Outbound,
  z.ZodTypeDef,
  WeaklyTypedOneOfNullEnumObject
> = z.union([DeepObject$outboundSchema, SimpleObject$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WeaklyTypedOneOfNullEnumObject$ {
  /** @deprecated use `WeaklyTypedOneOfNullEnumObject$inboundSchema` instead. */
  export const inboundSchema = WeaklyTypedOneOfNullEnumObject$inboundSchema;
  /** @deprecated use `WeaklyTypedOneOfNullEnumObject$outboundSchema` instead. */
  export const outboundSchema = WeaklyTypedOneOfNullEnumObject$outboundSchema;
  /** @deprecated use `WeaklyTypedOneOfNullEnumObject$Outbound` instead. */
  export type Outbound = WeaklyTypedOneOfNullEnumObject$Outbound;
}

export function weaklyTypedOneOfNullEnumObjectToJSON(
  weaklyTypedOneOfNullEnumObject: WeaklyTypedOneOfNullEnumObject,
): string {
  return JSON.stringify(
    WeaklyTypedOneOfNullEnumObject$outboundSchema.parse(
      weaklyTypedOneOfNullEnumObject,
    ),
  );
}

export function weaklyTypedOneOfNullEnumObjectFromJSON(
  jsonString: string,
): SafeParseResult<WeaklyTypedOneOfNullEnumObject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WeaklyTypedOneOfNullEnumObject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WeaklyTypedOneOfNullEnumObject' from JSON`,
  );
}
