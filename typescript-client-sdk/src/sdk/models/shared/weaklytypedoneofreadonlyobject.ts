/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ReadOnlyObject, ReadOnlyObject$ } from "./readonlyobject";
import { SimpleObject, SimpleObject$ } from "./simpleobject";
import * as z from "zod";

export type WeaklyTypedOneOfReadOnlyObject = ReadOnlyObject | SimpleObject;

/** @internal */
export namespace WeaklyTypedOneOfReadOnlyObject$ {
    export const inboundSchema: z.ZodType<WeaklyTypedOneOfReadOnlyObject, z.ZodTypeDef, unknown> =
        z.union([ReadOnlyObject$.inboundSchema, SimpleObject$.inboundSchema]);

    export type Outbound = ReadOnlyObject$.Outbound | SimpleObject$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WeaklyTypedOneOfReadOnlyObject> =
        z.union([ReadOnlyObject$.outboundSchema, SimpleObject$.outboundSchema]);
}
