/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ReadOnlyObjectInput, ReadOnlyObjectInput$ } from "./readonlyobjectinput.js";
import { SimpleObject, SimpleObject$ } from "./simpleobject.js";
import * as z from "zod";

export type WeaklyTypedOneOfReadOnlyObjectInput = ReadOnlyObjectInput | SimpleObject;

/** @internal */
export namespace WeaklyTypedOneOfReadOnlyObjectInput$ {
    export const inboundSchema: z.ZodType<
        WeaklyTypedOneOfReadOnlyObjectInput,
        z.ZodTypeDef,
        unknown
    > = z.union([ReadOnlyObjectInput$.inboundSchema, SimpleObject$.inboundSchema]);

    export type Outbound = ReadOnlyObjectInput$.Outbound | SimpleObject$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        WeaklyTypedOneOfReadOnlyObjectInput
    > = z.union([ReadOnlyObjectInput$.outboundSchema, SimpleObject$.outboundSchema]);
}
