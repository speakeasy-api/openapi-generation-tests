/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ReadWriteObject, ReadWriteObject$ } from "./readwriteobject.js";
import { SimpleObject, SimpleObject$ } from "./simpleobject.js";
import * as z from "zod";

export type WeaklyTypedOneOfReadWriteObject = ReadWriteObject | SimpleObject;

/** @internal */
export namespace WeaklyTypedOneOfReadWriteObject$ {
    export const inboundSchema: z.ZodType<WeaklyTypedOneOfReadWriteObject, z.ZodTypeDef, unknown> =
        z.union([ReadWriteObject$.inboundSchema, SimpleObject$.inboundSchema]);

    export type Outbound = ReadWriteObject$.Outbound | SimpleObject$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        WeaklyTypedOneOfReadWriteObject
    > = z.union([ReadWriteObject$.outboundSchema, SimpleObject$.outboundSchema]);
}
