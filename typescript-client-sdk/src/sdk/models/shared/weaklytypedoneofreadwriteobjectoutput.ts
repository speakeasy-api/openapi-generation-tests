/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ReadWriteObjectOutput,
  ReadWriteObjectOutput$inboundSchema,
  ReadWriteObjectOutput$Outbound,
  ReadWriteObjectOutput$outboundSchema,
} from "./readwriteobjectoutput.js";
import {
  SimpleObject,
  SimpleObject$inboundSchema,
  SimpleObject$Outbound,
  SimpleObject$outboundSchema,
} from "./simpleobject.js";

export type WeaklyTypedOneOfReadWriteObjectOutput =
  | ReadWriteObjectOutput
  | SimpleObject;

/** @internal */
export const WeaklyTypedOneOfReadWriteObjectOutput$inboundSchema: z.ZodType<
  WeaklyTypedOneOfReadWriteObjectOutput,
  z.ZodTypeDef,
  unknown
> = z.union([ReadWriteObjectOutput$inboundSchema, SimpleObject$inboundSchema]);

/** @internal */
export type WeaklyTypedOneOfReadWriteObjectOutput$Outbound =
  | ReadWriteObjectOutput$Outbound
  | SimpleObject$Outbound;

/** @internal */
export const WeaklyTypedOneOfReadWriteObjectOutput$outboundSchema: z.ZodType<
  WeaklyTypedOneOfReadWriteObjectOutput$Outbound,
  z.ZodTypeDef,
  WeaklyTypedOneOfReadWriteObjectOutput
> = z.union([
  ReadWriteObjectOutput$outboundSchema,
  SimpleObject$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WeaklyTypedOneOfReadWriteObjectOutput$ {
  /** @deprecated use `WeaklyTypedOneOfReadWriteObjectOutput$inboundSchema` instead. */
  export const inboundSchema =
    WeaklyTypedOneOfReadWriteObjectOutput$inboundSchema;
  /** @deprecated use `WeaklyTypedOneOfReadWriteObjectOutput$outboundSchema` instead. */
  export const outboundSchema =
    WeaklyTypedOneOfReadWriteObjectOutput$outboundSchema;
  /** @deprecated use `WeaklyTypedOneOfReadWriteObjectOutput$Outbound` instead. */
  export type Outbound = WeaklyTypedOneOfReadWriteObjectOutput$Outbound;
}

export function weaklyTypedOneOfReadWriteObjectOutputToJSON(
  weaklyTypedOneOfReadWriteObjectOutput: WeaklyTypedOneOfReadWriteObjectOutput,
): string {
  return JSON.stringify(
    WeaklyTypedOneOfReadWriteObjectOutput$outboundSchema.parse(
      weaklyTypedOneOfReadWriteObjectOutput,
    ),
  );
}

export function weaklyTypedOneOfReadWriteObjectOutputFromJSON(
  jsonString: string,
): SafeParseResult<WeaklyTypedOneOfReadWriteObjectOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      WeaklyTypedOneOfReadWriteObjectOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WeaklyTypedOneOfReadWriteObjectOutput' from JSON`,
  );
}
